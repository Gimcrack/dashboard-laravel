{"version":3,"names":[],"mappings":"","sources":["ticketTrends.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n;(function (window, $) {\n\twindow.ticketTrends = function (params) {\n\n\t\tvar base = '/metrics/tickets/trends/json/',\n\t\t    url = base + params.filter(function (e) {\n\t\t\treturn e;\n\t\t}).join('/');\n\n\t\t$.ajaxSetup({\n\t\t\tconverters: {\n\t\t\t\t'text json': $.parseJSON\n\t\t\t}\n\t\t});\n\n\t\t$.getJSON(url, function (response) {\n\t\t\treturn process(response.data);\n\t\t});\n\n\t\t/**\r\n   * Process the data obtained from the api\r\n   *\r\n   * @param      {<type>}  data    The data\r\n   */\n\t\tvar process = function process(data) {\n\t\t\tchart1(data);\n\t\t\tchart2(data);\n\t\t\tchart3(data);\n\t\t\tchart4(data);\n\t\t\tchart5(data);\n\t\t\tchart6(data);\n\t\t\t$('.preloader').hide();\n\t\t};\n\n\t\t/**\r\n   * Closed Tickets By Month\r\n   *\r\n   * @param      {<type>}  data    The data\r\n   */\n\t\tvar chart1 = function chart1(data) {\n\t\t\tvar chartSettings = {\n\t\t\t\tparseTime: false,\n\t\t\t\telement: 'closed-tickets-by-month',\n\t\t\t\tdata: [{ x: 'Jan' }, { x: 'Feb' }, { x: 'Mar' }, { x: 'Apr' }, { x: 'Max' }, { x: 'Jun' }, { x: 'Jul' }, { x: 'Aug' }, { x: 'Sep' }, { x: 'Oct' }, { x: 'Nov' }, { x: 'Dec' }],\n\t\t\t\txkey: 'x',\n\t\t\t\tykeys: [],\n\t\t\t\tlabels: []\n\t\t\t},\n\t\t\t    ykeys = [];\n\n\t\t\t// process the chart data\n\t\t\t_.each(data, function (o) {\n\n\t\t\t\tvar d = o.CreatedDate,\n\t\t\t\t    m = d.getMonth(),\n\t\t\t\t    y = d.getFullYear();\n\n\t\t\t\tykeys.push(y);\n\n\t\t\t\tchartSettings.data[m][y] = chartSettings.data[m][y] + 1 || 1;\n\t\t\t});\n\n\t\t\t// get the ykeys, unique and sorted\n\t\t\tykeys = _.uniq(ykeys).sort();\n\n\t\t\t// set the labels\n\t\t\tchartSettings.ykeys = chartSettings.labels = ykeys;\n\n\t\t\t// display the chart\n\t\t\tMorris.Line(chartSettings);\n\t\t};\n\n\t\t/**\r\n   * Hours By Customer\r\n   *\r\n   * @param      {<type>}  data    The data\r\n   */\n\t\tvar chart2 = function chart2(data) {\n\t\t\tvar chartSettings = {\n\t\t\t\telement: 'hours-by-customer',\n\t\t\t\tdata: _.orderBy(_.map(_.groupBy(data, function (o) {\n\t\t\t\t\treturn !!o.Customer_Department && o.Customer_Department != 'null' ? o.Customer_Department : '-No Department-';\n\t\t\t\t}), function (o, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: i,\n\t\t\t\t\t\tvalue: Math.ceil(_.sum(_.map(o, 'TotalTimeWorked')) / 60)\n\t\t\t\t\t};\n\t\t\t\t}), function (o) {\n\t\t\t\t\treturn -o.value;\n\t\t\t\t}).slice(0, 10),\n\t\t\t\tresize: true\n\t\t\t};\n\n\t\t\tMorris.Donut(chartSettings);\n\t\t};\n\n\t\t/**\r\n   * Tickets By Customer\r\n   *\r\n   * @param      {<type>}  data    The data\r\n   */\n\t\tvar chart3 = function chart3(data) {\n\t\t\tvar chartSettings = {\n\t\t\t\telement: 'tickets-by-customer',\n\t\t\t\tdata: _.orderBy(_.map(_.groupBy(data, function (o) {\n\t\t\t\t\treturn !!o.Customer_Department && o.Customer_Department != 'null' ? o.Customer_Department : '-No Department-';\n\t\t\t\t}), function (o, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: i,\n\t\t\t\t\t\tvalue: o.length\n\t\t\t\t\t};\n\t\t\t\t}), function (o) {\n\t\t\t\t\treturn -o.value;\n\t\t\t\t}).slice(0, 10),\n\t\t\t\tresize: true\n\t\t\t};\n\n\t\t\tMorris.Donut(chartSettings);\n\t\t};\n\n\t\t/**\r\n   * Tickets By Days Open\r\n   *\r\n   * @param      {<type>}  data    The data\r\n   */\n\t\tvar chart4 = function chart4(data) {\n\t\t\tvar chartSettings = {\n\t\t\t\telement: 'tickets-by-days-open',\n\t\t\t\tdata: _.orderBy(_.map(_.countBy(data, function (o) {\n\t\t\t\t\tif (o.DaysOpen <= 2) return ' 1-2 days';\n\t\t\t\t\tif (o.DaysOpen <= 5) return ' 2-5 days';\n\t\t\t\t\tif (o.DaysOpen <= 10) return ' 5-10 days';\n\t\t\t\t\tif (o.DaysOpen <= 20) return '10-20 days';\n\t\t\t\t\tif (o.DaysOpen <= 50) return '20-50 days';\n\t\t\t\t\treturn '50+ days';\n\t\t\t\t}), function (o, i) {\n\t\t\t\t\tvar percentage = Math.round(100 * o / data.length, 2);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: i + ' (' + percentage + '%)',\n\t\t\t\t\t\tvalue: o\n\t\t\t\t\t};\n\t\t\t\t}), function (o) {\n\t\t\t\t\treturn o.label;\n\t\t\t\t}),\n\t\t\t\tresize: true\n\t\t\t};\n\n\t\t\tMorris.Donut(chartSettings);\n\t\t};\n\n\t\t/**\r\n   * Tickets By Category\r\n   *\r\n   * @param      {<type>}  data    The data\r\n   */\n\t\tvar chart5 = function chart5(data) {\n\t\t\tvar chartSettings = {\n\t\t\t\telement: 'tickets-by-category',\n\t\t\t\tdata: _.orderBy(_.map(_.countBy(data, function (o) {\n\t\t\t\t\treturn o.Category;\n\t\t\t\t}), function (o, i) {\n\t\t\t\t\tvar percentage = Math.round(100 * o / data.length, 2);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: i + ' (' + percentage + '%)',\n\t\t\t\t\t\ttickets: o\n\t\t\t\t\t};\n\t\t\t\t}), function (o) {\n\t\t\t\t\treturn -o.tickets;\n\t\t\t\t}).slice(0, 10),\n\t\t\t\txkey: 'label',\n\t\t\t\tykeys: ['tickets'],\n\t\t\t\tlabels: 'Tickets',\n\t\t\t\tresize: true,\n\t\t\t\tstacked: true\n\t\t\t};\n\n\t\t\tMorris.Bar(chartSettings);\n\t\t};\n\n\t\t/**\r\n   * Hours By Category\r\n   *\r\n   * @param      {<type>}  data    The data\r\n   */\n\t\tvar chart6 = function chart6(data) {\n\t\t\tvar chartSettings = {\n\t\t\t\telement: 'hours-by-category',\n\t\t\t\tdata: _.orderBy(_.map(_.groupBy(data, function (o) {\n\t\t\t\t\treturn o.Category;\n\t\t\t\t}), function (o, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: i,\n\t\t\t\t\t\thours: Math.ceil(_.sum(_.map(o, 'TotalTimeWorked')) / 60)\n\t\t\t\t\t};\n\t\t\t\t}), function (o) {\n\t\t\t\t\treturn -o.hours;\n\t\t\t\t}).slice(0, 10),\n\t\t\t\txkey: 'label',\n\t\t\t\tykeys: ['hours'],\n\t\t\t\tlabels: 'Hours',\n\t\t\t\tresize: true,\n\t\t\t\tstacked: true\n\t\t\t};\n\n\t\t\tMorris.Bar(chartSettings);\n\t\t};\n\t};\n})(window, jQuery);\n\n},{}]},{},[1]);\n"],"file":"ticketTrends.js"}
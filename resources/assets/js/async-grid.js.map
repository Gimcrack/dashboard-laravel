{"version":3,"sources":["jApp.class.js","jUtility.class.js","jForm.class.js","jInput.class.js","jLinkTable.class.js","jGrid.class.js"],"names":[],"mappings":"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","file":"async-grid.js","sourcesContent":["/**\r\n *  jApp.class.js - Custom Grid App container\r\n *\r\n *\r\n *  Defines the properties and methods of the\r\n *  custom app class.\r\n *\r\n *  Jeremy Bloomstrom | jeremy@in.genio.us\r\n *  Released under the MIT license\r\n */\r\n\r\n;(function(window) {\r\n\r\n\tvar jApp = function() {\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis.debug = true;\r\n\r\n\t\tif (this.debug) {\r\n\t\t\tconsole.warn( 'DEBUG MODE ON ')\r\n\t\t\t$.jStorage.flush();\r\n\t\t}\r\n\r\n\t\tthis.oG = {\r\n\t\t\tadmin : {\r\n\r\n\t\t\t}\r\n\t\t\t// extend this oG object with the individual page grid objects\r\n\t\t};\r\n\r\n\t\tthis.views = {\r\n\t\t\t//extend this views object with individual page views\r\n\t\t\tadmin : {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.grids = {\r\n\t\t\tadmin : {\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.activeGrid = {};\r\n\r\n\t\tthis.openForms = [];\r\n\r\n\t\t/**\r\n\t\t * Placeholder for the colparams object\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.colparams = {};\r\n\r\n\t\t/**\r\n\t\t * Convenience function to access the active grid object\r\n\t\t * @method function\r\n\t\t * @return {[type]} [description]\r\n\t\t */\r\n\t\tthis.aG = function() {\r\n\t\t\treturn this.activeGrid;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get the table from the corresponding model\r\n\t\t * @param  {[type]} model [description]\r\n\t\t * @return {[type]}       [description]\r\n\t\t */\r\n\t\tthis.model2table = function( model ) {\r\n\r\n\t\t\tvar RuleExceptions = {\r\n\t\t\t\tPerson : 'people'\r\n\t\t\t}\r\n\r\n\t\t\treturn ( RuleExceptions[model] == null ) ?\r\n\t\t\t\t(model + 's').toLowerCase() :\r\n\t\t\t\tRuleExceptions[model]\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Convenience function to access the $grid object\r\n\t\t * in the active grid\r\n\t\t * @method function\r\n\t\t * @return {[type]} [description]\r\n\t\t */\r\n\t\tthis.tbl = function() {\r\n\t\t\treturn this.activeGrid.DOM.$grid;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Convenience function to access the options\r\n\t\t * of the active grid\r\n\t\t * @method function\r\n\t\t * @return {[type]} [description]\r\n\t\t */\r\n\t\tthis.opts = function() {\r\n\t\t\treturn this.activeGrid.options;\r\n\t\t}\r\n\r\n\t\tthis.log = function(msg,force) {\r\n\t\t\tif (!!self.debug || !!self.force) {\r\n\t\t\t\tconsole.log(msg);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\twindow.jApp = jApp;\r\n\r\n\r\n})(window);\r\n\r\nvar jApp = new jApp();\r\n","/**\r\n *  jUtility.class.js - Custom Data Grid JS utility class\r\n *\r\n *  Contains helper functions used by jGrid\r\n *\r\n *  Jeremy Bloomstrom | jeremy@in.genio.us\r\n *  Released under the MIT license\r\n *\r\n *  Prereqs: \tjQuery, jApp\r\n *\r\n */\r\n\r\n if (!Array.prototype.last){\r\n     Array.prototype.last = function(){\r\n         return this[this.length - 1];\r\n     };\r\n };\r\n\r\n;(function(window, $, jApp) {\r\n\r\n  'use strict';\r\n\r\n  $.fn.serializeObject = function() {\r\n      var o = {};\r\n      var a = this.serializeArray();\r\n      $.each(a, function() {\r\n          if ($(this).prop('disabled')) return false;\r\n\r\n          if ( !!$(this).attr('data-tokens') ) {\r\n            jApp.log($(this).tokenInput(\"get\"));\r\n            return o[this.name] = _.pluck( $(this).tokenInput(\"get\"), 'name');\r\n          }\r\n\r\n          if (o[this.name]) {\r\n              if (!o[this.name].push) {\r\n                  o[this.name] = [o[this.name]];\r\n              }\r\n              o[this.name].push(this.value || '');\r\n          } else {\r\n              o[this.name] = this.value || '';\r\n          }\r\n      });\r\n      return o;\r\n  };\r\n\r\n  var jUtility = {\r\n\r\n    /**\r\n     * Set AJAX Defaults\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setAjaxDefaults : function() {\r\n      $.ajaxSetup({\r\n        headers: {\r\n            'X-XSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n        }\r\n      });\r\n      jApp.log('4.1 Ajax Defaults Set')\r\n    }, // end fn\r\n\r\n    /**\r\n     * Get the default grid options\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getDefaultOptions : function() {\r\n      /**\r\n       * Default Options\r\n       * @type {Object}\r\n       */\r\n      return {\r\n\r\n        /**\r\n         * Form Definitions\r\n         */\r\n        formDefs : {},\r\n\r\n        /**\r\n         * Event Bindings\r\n         * @type {Object}\r\n         */\r\n        bind : {},\r\n\r\n        /**\r\n         * Function definitions\r\n         * @type {Object}\r\n         */\r\n        fn : {},\r\n\r\n        /**\r\n         * Toggles - true/false switches\r\n         * @type {Object}\r\n         */\r\n        toggles : {\r\n\r\n          /**\r\n           * Data is editable\r\n           * @type {Boolean} default true\r\n           */\r\n          editable : true,\r\n\r\n          /**\r\n           * Show the 'new' button\r\n           * @type {Boolean} default true\r\n           */\r\n          new : true,\r\n\r\n          /**\r\n           * Show the 'edit' button\r\n           * @type {Boolean} default true\r\n           */\r\n          edit : true,\r\n\r\n          /**\r\n           * Show the 'delete' buton\r\n           * @type {Boolean} default true\r\n           */\r\n          del : true,\r\n\r\n          /**\r\n           * Show the sort buttons above each header\r\n           * @type {Boolean} default true\r\n           */\r\n          sort : true,\r\n\r\n          /**\r\n           * Autoupdate the grid data automatically\r\n           * @type {Boolean} default true\r\n           */\r\n          autoUpdate : true,\r\n\r\n          /**\r\n           * Auto-paginate the grid data\r\n           * @type {Boolean} default true\r\n           */\r\n          paginate : true,\r\n\r\n          /**\r\n           * Enable the filter text boxes above each header\r\n           * @type {Boolean} default true\r\n           */\r\n          headerFilters : true,\r\n\r\n          /**\r\n           * Display the header filters above each header\r\n           */\r\n          displayHeaderFilters : false,\r\n\r\n          /**\r\n           * Collapse the row menu\r\n           * @type {Boolean} default true\r\n           */\r\n          collapseMenu : true,\r\n\r\n          /**\r\n           * Cache the grid data for faster load times\r\n           * @type {Boolean} default false\r\n           */\r\n          caching : false,\r\n\r\n          /**\r\n           * Show the ellipsis ... and readmore buttons\r\n           * @type {Boolean} default true\r\n           */\r\n          ellipses : true,\r\n\r\n          /**\r\n           * Checkout records before editing\r\n           * @type {Boolean} default true\r\n           */\r\n          checkout : true,\r\n\r\n          /**\r\n           * Close form window after saving\r\n           * @type {Boolean} default true\r\n           */\r\n          closeOnSave : true,\r\n\r\n          /**\r\n           * remove all rows when updating data\r\n           * @type {Boolean}\r\n           */\r\n          removeAllRows : false,\r\n        },\r\n\r\n        /**\r\n         * General Grid Options\r\n         */\r\n\r\n        /**\r\n         * If jApp.opts().toggles.autoUpdate, interval to autorefresh data in ms\r\n         * @type {Number} default 602000\r\n         */\r\n        refreshInterval :  602000,\r\n\r\n        /**\r\n         * jQuery DOM target\r\n         * @type {String} default '.table-responsive'\r\n         */\r\n        target : '.table-responsive',\t\t\t\t\t\t// htmlTable target\r\n\r\n        /**\r\n         * Data request options\r\n         */\r\n\r\n        /**\r\n         * URL of JSON resource (grid data)\r\n         * @type {String}\r\n         */\r\n        url\t: jApp.opts().runtimeParams.table + '/json', \t// url of JSON resource\r\n\r\n        /**\r\n         * Database table name of grid data\r\n         * @type {String}\r\n         */\r\n        table : '',\t\t\t\t\t\t\t\t\t\t\t// db table (for updates / inserts)\r\n\r\n        /**\r\n         * Primary key of table\r\n         * @type {String}\r\n         */\r\n        pkey : 'id',\r\n\r\n        /**\r\n         * Where clause of data query\r\n         * @type {String}\r\n         */\r\n        filter : '',\t\t\t\t\t\t\t\t\t\t// where clause for query\r\n\r\n        /**\r\n         * db columns to show\r\n         * @type {Array}\r\n         */\r\n        columns : [ ],\t\t\t\t\t\t\t\t\t\t// columns to query\r\n\r\n        /**\r\n         * Friendly headers for db columns\r\n         * @type {Array}\r\n         */\r\n        headers : [ ],\t\t\t\t\t\t\t\t\t\t// headers for table\r\n\r\n        /**\r\n         * Data Presentation options\r\n         */\r\n\r\n\r\n        /**\r\n         * Pagination - Rows per page\r\n         * @type {Number} default 10\r\n         */\r\n        rowsPerPage : 10,\r\n\r\n        /**\r\n         * Pagination - Starting page number\r\n         * @type {Number} default 1\r\n         */\r\n        pageNum\t: 1,\r\n\r\n        /**\r\n         * The friendly name of the table e.g. Users\r\n         * @type {String}\r\n         */\r\n        tableFriendly : '',\t\t\t\t\t\t\t\t\t// friendly name of table\r\n\r\n        /**\r\n         * The column containing the friendly name of each row e.g. username\r\n         * @type {String}\r\n         */\r\n        columnFriendly : '',\t\t\t\t\t\t\t\t// column containing friendly name of each row\r\n\r\n        /**\r\n         * The text shown when deleting a record\r\n         * @type {String}\r\n         */\r\n        deleteText : 'Deleting',\r\n\r\n        /**\r\n         * html attributes to apply to individual columns\r\n         * @type {Array}\r\n         */\r\n        cellAtts : [ ],\t\t\t\t\t\t\t\t\t\t// column attributes\r\n\r\n        /**\r\n         * html templates\r\n         * @type {Array}\r\n         */\r\n        templates : [ ],\t\t\t\t\t\t\t\t\t// html templates\r\n\r\n        /**\r\n         * Max cell length in characters, if toggles.ellipses\r\n         * @type {Number} default 38\r\n         */\r\n        maxCellLength : 38,\r\n\r\n        /**\r\n         * Max column length in pixels\r\n         * @type {Number} default 450\r\n         */\r\n        maxColWidth: 450,\r\n\r\n        /**\r\n         * Bootstrap Multiselect Default Options\r\n         * @type {Object}\r\n         */\r\n        bsmsDefaults : {\r\n          //buttonContainer : '<div class=\"btn-group\" />',\r\n          enableCaseInsensitiveFiltering: true,\r\n          includeSelectAllOption: true,\r\n          maxHeight: 185,\r\n          numberDisplayed: 1,\r\n          dropUp: true,\r\n        },\r\n\r\n        /**\r\n         * Header Options\r\n         * @type {Object}\r\n         */\r\n        gridHeader : {\r\n          icon : 'fa-dashboard',\r\n          headerTitle : 'Manage',\r\n          helpText : false,\r\n        },\r\n\r\n        /**\r\n         * Disabled Form Elements - e.g. password\r\n         * @type {Array}\r\n         */\r\n        disabledFrmElements : [],\r\n\r\n        /**\r\n         * Table buttons appear in the table menu below the header\r\n         * @type {Object}\r\n         */\r\n        tableBtns : {\r\n\r\n\r\n          tableMenu : {\r\n            type : 'button',\r\n            class : 'btn btn-success btn-tblMenu',\r\n            id : 'btn_table_menu_heading',\r\n            icon : 'fa-table',\r\n            label : '&nbsp;',\r\n            'data-order' : 0\r\n          },\r\n\r\n          /**\r\n           * Refresh Button\r\n           * @type {Object}\r\n           */\r\n          refresh : {\r\n            type : 'button',\r\n            name : 'btn_refresh_grid',\r\n            class : 'btn btn-success btn-refresh',\r\n            icon : 'fa-refresh',\r\n            label : 'Refresh',\r\n            'data-order' : 1\r\n          },\r\n\r\n          /**\r\n           * New Button\r\n           * @type {Object}\r\n           */\r\n          new : {\r\n            type : 'button',\r\n            class : 'btn btn-success btn-new',\r\n            id : 'btn_edit',\r\n            icon : 'fa-plus-circle',\r\n            label : 'New',\r\n            'data-permission' : 'create_enabled',\r\n            'data-order' : 2\r\n          },\r\n\r\n          /**\r\n           * Header Filters Button\r\n           * @type {Object}\r\n           */\r\n          headerFilters : {\r\n            type : 'button',\r\n            class : 'btn btn-success btn-headerFilters btn-toggle',\r\n            id : 'btn_toggle_header_filters',\r\n            icon : 'fa-filter',\r\n            label : 'Filter Rows',\r\n            'data-order' : 3\r\n          },\r\n\r\n          /**\r\n           * Define custom buttons here. Custom buttons may also be defined at runtime.\r\n           * @type {Object}\r\n           */\r\n          custom : {\r\n            // visColumns : [\r\n            //   { icon : 'fa-bars fa-rotate-90', label : ' Visible Columns' },\r\n            // ],\r\n\r\n          },\r\n\r\n          /**\r\n           * Table status\r\n           * @type {Object}\r\n           */\r\n          tableStatus : {\r\n            type : 'button',\r\n            class : 'btn btn-tableStatus',\r\n            id : 'btn_table_status',\r\n            icon : '',\r\n            label : '',\r\n            'data-order' : 9999\r\n          }\r\n        },\r\n\r\n\r\n        /**\r\n         * Row buttons appear in each row of the grid\r\n         * @type {Object}\r\n         */\r\n        rowBtns : {\r\n\r\n          /**\r\n           * The row menu heading. Displayed when an item is checked.\r\n           * @type {Object}\r\n           */\r\n          rowMenu : {\r\n            type : 'button',\r\n            class : 'btn btn-primary btn-rowMenu',\r\n            id : 'btn_row_menu_heading',\r\n            icon : 'fa-check-square-o',\r\n            label : '&nbsp;',\r\n          },\r\n\r\n          /**\r\n           * Clear Selected Button\r\n           * @type {Object}\r\n           */\r\n          clearSelected : {\r\n            type : 'button',\r\n            class : 'btn btn-primary btn-clear',\r\n            id : 'btn_clear',\r\n            icon : 'fa-square-o',\r\n            label : 'Clear Selection',\r\n          },\r\n\r\n          /**\r\n           * Edit Button\r\n           * @type {Object}\r\n           */\r\n          edit : {\r\n            type : 'button',\r\n            class : 'btn btn-primary btn-edit',\r\n            id : 'btn_edit',\r\n            icon : 'fa-pencil',\r\n            label : 'Edit ...',\r\n            'data-permission' : 'update_enabled',\r\n            'data-multiple' : false\r\n          },\r\n\r\n          /**\r\n           * Delete Button\r\n           * @type {Object}\r\n           */\r\n          del : {\r\n            type : 'button',\r\n            class : 'btn btn-primary btn-delete',\r\n            id : 'btn_delete',\r\n            icon : 'fa-trash-o',\r\n            label : 'Delete ...',\r\n            //title : 'Delete Record ...',\r\n            'data-permission' : 'delete_enabled'\r\n          },\r\n\r\n          /**\r\n           * Define custom buttons here. Custom buttons may also be defined at runtime.\r\n           * @type {Object}\r\n           */\r\n          custom : {\r\n            //custom : { type : 'button' } // etc.\r\n          }\r\n        },\r\n\r\n        /**\r\n         * With Selected Buttons appear in the dropdown menu of the header\r\n         * @type {Object}\r\n         */\r\n        withSelectedBtns : {\r\n\r\n          /**\r\n           * Delete Selected ...\r\n           * @type {Object}\r\n           */\r\n          del : {\r\n            type : 'button',\r\n            class : 'li-red',\r\n            id : 'btn_delete',\r\n            icon : 'fa-trash-o',\r\n            label : 'Delete Selected ...',\r\n            fn : 'delete',\r\n            'data-permission' : 'delete_enabled',\r\n          },\r\n\r\n          /**\r\n           * Define custom buttons here. Custom buttons may also be defined at runtime.\r\n           * @type {Object}\r\n           */\r\n          custom : {\r\n            //custom : { type : 'button' } // etc.\r\n          }\r\n        },\r\n\r\n        /**\r\n         * linktables define the relationships between tables\r\n         * @type {Array}\r\n         */\r\n        linkTables : [ ],\r\n\r\n      }; // end defaults\r\n\r\n    }, // end fn\r\n\r\n    arrayAddRow : function() {\r\n      var $btn = $(this),\r\n          $container = $(this).closest('.array-field-container'),\r\n          $table = $(this).closest('.table'),\r\n          $tr = $(this).closest('tr'),\r\n          params = $container.data('colparams'),\r\n          $tr_new = jUtility.oCurrentForm().fn.populateFieldRow( params );\r\n\r\n      if (params.max != null && +$table.find('tr').length-1 === params.max) {\r\n        return jUtility.msg.warning('This field requires at most ' + params.max + ' selections.');\r\n      }\r\n\r\n      $table.find('.btn-array-add').remove();\r\n\r\n      $table.append($tr_new);\r\n\r\n      // rename inputs so they all have unique names\r\n      // $table.find('tr').each( function( i, elm ) {\r\n      //   $(elm).find(':input').each( function(ii, ee) {\r\n      //     $(ee).attr('name', $(ee).attr('data-name') + '_' + i)\r\n      //   });\r\n      // });\r\n\r\n      jUtility.formBootup();\r\n    }, // end fn\r\n\r\n    arrayRemoveRow : function() {\r\n      var $btn = $(this),\r\n          $container = $(this).closest('.array-field-container'),\r\n          $table = $(this).closest('.table'),\r\n          $tr = $(this).closest('tr'),\r\n          params = $container.data('colparams'),\r\n          $btn_add = $table.find('.btn-array-add').detach();\r\n\r\n      if (params.min != null && +$table.find('tr').length-1 === params.min) {\r\n        $table.find('tr:last-child').find('td:last-child').append($btn_add);\r\n        return jUtility.msg.warning('This field requires at least ' + params.min + ' selections.');\r\n      }\r\n\r\n      $tr.remove();\r\n\r\n      // rename inputs so they all have unique names\r\n      // $table.find('tr').each( function( i, elm ) {\r\n      //   $(elm).find(':input').each( function(ii, ee) {\r\n      //     $(ee).attr('name', $(ee).attr('data-name') + '_' + i)\r\n      //   });\r\n      // });\r\n\r\n      $table.find('tr:last-child').find('td:last-child,th:last-child').append($btn_add);\r\n    }, // end fn\r\n\r\n    /**\r\n     * Get users permissions\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getPermissions : function( model ) {\r\n      model = (model != null) ? model : jApp.opts().model;\r\n\r\n      var storeKey = model + '_permissions';\r\n\r\n      if (!!$.jStorage.get(storeKey,false)) {\r\n        return jUtility.callback.getPermissions( $.jStorage.get(storeKey)  )\r\n      }\r\n\r\n      jApp.log('0.1 - Getting Permissions from server')\r\n\r\n      var requestOptions = {\r\n        url : '/getPermissions/' + model,\r\n        success : function(response) {\r\n          $.jStorage.set(storeKey, response, { TTL : 60000*60*24 });\r\n          jApp.log( $.jStorage.getTTL( storeKey ) );\r\n\r\n          jUtility.callback.getPermissions(response);\r\n          jUtility.buildMenus();\r\n        }\r\n      }\r\n\r\n      jApp.log(requestOptions.url);\r\n\r\n      jUtility.getJSON( requestOptions );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Check permission on the button parameters\r\n     * @method function\r\n     * @param  {[type]} params [description]\r\n     * @return {[type]}        [description]\r\n     */\r\n    isPermission : function( params ) {\r\n      if (params['data-permission'] == null) return true;\r\n      return !!jApp.activeGrid.permissions[ params['data-permission'] ];\r\n    }, // end fn\r\n\r\n    /**\r\n     * Calculate where the grid should be positioned\r\n     * @return {[type]} [description]\r\n     */\r\n    calculateGridPosition : function() {\r\n      if ( typeof $('.colHeaders').offset() === 'undefined' ) {return false};\r\n      return {\r\n        marginTop : +$('.colHeaders').height()+$('.colHeaders').offset().top,\r\n        height : +$(window).height()-95-$('.colHeaders').offset().top\r\n      }\r\n    }, // end fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   withSelected\r\n     *  @action - The action to perform\r\n     *\r\n     *  When one or more rows are checked,\r\n     *  this defines the various options\r\n     *  that are available and the actions\r\n     *  that are performed.\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    withSelected : function(action, callback) {\r\n      console.log('clicked');\r\n      ( !!jUtility.numInvisibleItemsChecked() ) ?\r\n        jUtility.confirmInvisibleCheckedItems(action,callback) :\r\n        jUtility.withSelectedAction(action,callback, true);\r\n    }, // end fn\r\n\r\n    /**\r\n     * With selected actions\r\n     * @param  {[type]}   action   [description]\r\n     * @param  {Function} callback [description]\r\n     * @param  {[type]}   $cid     [description]\r\n     * @return {[type]}            [description]\r\n     */\r\n    withSelectedAction : function(action, callback, includeHidden) {\r\n      var $cid = jUtility.getCheckedItems(includeHidden);\r\n\r\n      if (!$cid.length) { return jUtility.msg.warning('Nothing selected.') }\r\n\r\n      switch(action) {\r\n        // DELETE SELECTED\r\n        case 'delete' :\r\n          jApp.aG().action = 'withSelectedDelete';\r\n          bootbox.confirm(\"Are you sure you want to delete \" + $cid.length + \" items?\", function(response) {\r\n            if (!!response) {\r\n              jUtility.postJSON( {\r\n                url : jUtility.getCurrentFormAction(),\r\n                success : jUtility.callback.submitCurrentForm,\r\n                data : { '_method' : 'delete', 'ids[]' : $cid }\r\n              });\r\n            }\r\n          });\r\n        break;\r\n\r\n        case 'custom' :\r\n          return (typeof callback === 'function') ?\r\n            callback( $cid ) :\r\n            console.warn( 'callback is not a valid function');\r\n        break;\r\n\r\n        default :\r\n          console.warn( action + ' is not a valid withSelected action');\r\n        break;\r\n      }\r\n\r\n    }, //end fn\r\n\r\n    /**\r\n     * Get the action of the current form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getCurrentFormAction : function() {\r\n      switch (jApp.aG().action) {\r\n        case 'edit' :\r\n        case 'delete' :\r\n          return jApp.opts().table + '/' + jUtility.getCurrentRowId();\r\n        break;\r\n\r\n        case 'withSelectedDelete' :\r\n          return jApp.opts().table;\r\n        break;\r\n\r\n        case 'withSelectedUpdate' :\r\n          return jApp.opts().table + '/massUpdate';\r\n        break;\r\n\r\n        case 'resetPassword' :\r\n          return 'resetPassword/' + jUtility.getCurrentRowId();\r\n        break;\r\n\r\n        default :\r\n          return jUtility.oCurrentForm().options.table //jApp.opts().table;\r\n        break;\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * [function description]\r\n     * @method function\r\n     * @param  {[type]} action [description]\r\n     * @return {[type]}        [description]\r\n     */\r\n    actionHelper : function(action) {\r\n      jApp.aG().action = action;\r\n      if ( jUtility.needsCheckout() ) {\r\n        jUtility.checkout( jUtility.getCurrentRowId() );\r\n      } else {\r\n        jUtility.setupFormContainer()\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Clear the current form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    resetCurrentForm : function() {\r\n      try {\r\n        jUtility.$currentForm().clearForm();\r\n        jUtility.$currentForm().find(':input:not(\"[type=button]\"):not(\"[type=submit]\"):not(\"[type=reset]\"):not(\"[type=radio]\"):not(\"[type=checkbox]\")')\r\n        .each( function(i,elm) {\r\n          if ( !!$(elm).attr('data-static') ) { return false; }\r\n\r\n          //$(elm).data(\"DateTimePicker\").remove();\r\n          $(elm).val('');\r\n          if ( $(elm).hasClass('bsms') ) {\r\n            $(elm).data('jInput').fn.multiselect();\r\n            $(elm).multiselect('refresh');\r\n          }\r\n        });\r\n      } catch(e) {\r\n        console.warn(e);\r\n        return false;\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Refresh and rebuild the current form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    refreshCurrentForm : function() {\r\n      jApp.aG().store.flush();\r\n      jUtility.oCurrentForm().fn.getColParams();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Maximize the current form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    maximizeCurrentForm : function() {\r\n      try {\r\n\r\n        if ( jApp.openForms.length ) {\r\n          jApp.openForms.last().wrapper.find('button').prop('disabled',true);\r\n        }\r\n\r\n        jApp.openForms.push({\r\n          wrapper : jUtility.$currentFormWrapper().addClass('max'),\r\n          obj : jUtility.oCurrentForm(),\r\n          $ : jUtility.$currentForm(),\r\n          action : jApp.aG().action,\r\n          model : jUtility.oCurrentForm().model\r\n        });\r\n      } catch(e) {\r\n        console.warn(e);\r\n        return false;\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Close the current form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    closeCurrentForm : function() {\r\n      try {\r\n        var oTgt = jApp.openForms.pop();\r\n\r\n        jApp.aG().action = ( jApp.openForms.length ) ?\r\n          jApp.openForms.last().action : '';\r\n\r\n        jUtility.msg.clear()\r\n\r\n        oTgt.wrapper.removeClass('max')\r\n          .find('.formContainer').css('height','');\r\n        oTgt.$.clearForm();\r\n\r\n        if (!jApp.openForms.length) {\r\n          jUtility.turnOffOverlays();\r\n        } else {\r\n\r\n          jApp.openForms.last().wrapper\r\n            .find('button').prop('disabled',false).end()\r\n            .find('.btn-refresh').trigger('click');\r\n        }\r\n\r\n      } catch(ignore) {}\r\n    }, // end fn\r\n\r\n    /**\r\n     * Set focus on the current form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setCurrentFormFocus : function() {\r\n      jUtility.$currentFormWrapper().find(\":input:not([type='hidden']):not([type='button'])\").eq(0).focus();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Get the current form row data for the current row\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getCurrentFormRowData : function() {\r\n      if (jApp.aG().action === 'new') return false;\r\n      var url = jUtility.getCurrentRowDataUrl();\r\n\r\n      jUtility.oCurrentForm().fn.getRowData(url, jUtility.callback.updateDOMFromRowData);\r\n    }, //end fn\r\n\r\n    /**\r\n     * Get the data url of the current row\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getCurrentRowDataUrl : function() {\r\n      if (typeof jApp.opts().rowDataUrl !== 'undefined') {\r\n        return jApp.opts().rowDataUrl;\r\n      }\r\n      return jApp.opts().table + '/' + jUtility.getCurrentRowId() + '/json';\r\n    }, //end fn\r\n\r\n    /**\r\n     * Toggle a button to prevent it being clicked multiple times\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    toggleButton : function($btn) {\r\n      if( $btn.prop('disabled') ) {\r\n        $btn.prop('disabled',false)\r\n            .removeClass('disabled')\r\n            .html( $btn.attr('data-original-text'));\r\n      } else {\r\n        $btn.attr('data-original-text', $btn.html() )\r\n            .prop('disabled',true)\r\n            .addClass('disabled')\r\n            .html('<i class=\"fa fa-spinner fa-pulse\"></i>')\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Submit the current form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    submitCurrentForm : function( $btn ) {\r\n      var requestOptions = {\r\n        url : jUtility.getCurrentFormAction(),\r\n        data : jUtility.oCurrentForm().fn.getFormData(),\r\n        success : jUtility.callback.submitCurrentForm,\r\n        //fail : console.warn,\r\n        always : function() {\r\n          jUtility.toggleButton($btn);\r\n        }\r\n      };\r\n\r\n      jUtility.msg.clear();\r\n\r\n      if (!!jUtility.$currentForm()) {\r\n        var oValidate = new validator( jUtility.$currentForm() );\r\n        if (oValidate.errorState) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      // turn off the button to avoid multiple clicks;\r\n      jUtility.toggleButton($btn);\r\n\r\n\r\n      jUtility.postJSON( requestOptions );\r\n\r\n    }, // end fn\r\n\r\n    /**\r\n     * Save the current form and leave open\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    saveCurrentForm : function() {\r\n      jApp.opts().closeOnSave = false;\r\n      jUtility.submitCurrentForm( $(this) );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Save the current form and close\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    saveCurrentFormAndClose : function() {\r\n\r\n      jApp.opts().closeOnSave = true;\r\n      jUtility.submitCurrentForm( $(this) );\r\n      //jUtility.toggleRowMenu;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Kill pending ajax request\r\n     * @method function\r\n     * @param  {[type]} requestName [description]\r\n     * @return {[type]}             [description]\r\n     */\r\n    killPendingRequest : function(requestName) {\r\n      try{\r\n        jApp.aG().dataGrid.requests[requestName].abort();\r\n      } catch(e) {\r\n        // nothing to abort\r\n      }\r\n    }, //end fn\r\n\r\n    /**\r\n     * Set instance options\r\n     * @method function\r\n     * @param  {[type]} options [description]\r\n     * @return {[type]}         [description]\r\n     */\r\n    setOptions : function(options) {\r\n      jApp.aG().options = $.extend(true, jApp.opts(),options);\r\n      jApp.log('1.1 Options Set')\r\n      return jApp.aG();\r\n    }, //end fn\r\n\r\n    /**\r\n     * Set up the visible columns menu for the table menu\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setupVisibleColumnsMenu : function() {\r\n      if ( typeof jApp.aG().temp.visibleColumnsMenuSetup === 'undefined' || jApp.aG().temp.visibleColumnsMenuSetup === false) {\r\n        // visible columns\r\n        _.each( jApp.opts().columns, function( o, i ) {\r\n          if (i < jApp.opts().headers.length ) {\r\n            jApp.opts().tableBtns.custom.visColumns.push(\r\n              {\r\n                icon : 'fa-check-square-o',\r\n                label : jApp.opts().headers[i],\r\n                fn : function() { jUtility.DOM.toggleColumnVisibility( $(this) ) }, 'data-column' : o\r\n              }\r\n            );\r\n          }\r\n        });\r\n\r\n        jApp.aG().temp.visibleColumnsMenuSetup = true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }, //end fn\r\n\r\n    /**\r\n     * Does the form need confirmation\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isConfirmed : function() {\r\n      var conf = jUtility.$currentFormWrapper().find('#confirmation');\r\n      if ( !!conf.length && conf.val().toString().toLowerCase() !== 'yes') {\r\n        jUtility.msg.warning('Type yes to continue');\r\n        return false;\r\n      }\r\n      return true;\r\n    }, //end fn\r\n\r\n    /**\r\n     * Initialize scrollbar\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    initScrollbar : function() {\r\n      $('.table-grid').perfectScrollbar();\r\n    }, //end fn\r\n\r\n    /**\r\n     * Is autoupdate enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isAutoUpdate : function() {\r\n      return !!jApp.opts().toggles.autoUpdate;\r\n    }, //end fn\r\n\r\n    /**\r\n     * Is data caching enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isCaching : function() {\r\n      return !!jApp.opts().toggles.caching;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is record checkout enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isCheckout : function() {\r\n      return !!jApp.opts().toggles.checkout && jUtility.isEditable();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is the grid data editable\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isEditable : function() {\r\n      return !!jApp.opts().toggles.editable;\r\n    }, //end fn\r\n\r\n    /**\r\n     * Are ellipses enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isEllipses : function() {\r\n      return !!jApp.opts().toggles.ellipses;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is a form container maximized\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isFormOpen : function() {\r\n      return !!jApp.aG().$().find('.div-form-panel-wrapper.max').length;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is pagination enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isPagination : function() {\r\n      return !!jApp.opts().toggles.paginate;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is sorting by column enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isSort : function() {\r\n      return !!jApp.opts().toggles.sort;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is toggle mine enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isToggleMine : function() {\r\n      return window.location.href.indexOf('/my') !== -1;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is header filters enabled\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isHeaderFilters : function() {\r\n      return !!jApp.opts().toggles.headerFilters;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Are header filters currently displayed\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isHeaderFiltersDisplay : function() {\r\n      return !!jApp.opts().toggles.headerFiltersDisplay;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Is the button with name 'key' enabled\r\n     * @method function\r\n     * @param  {[type]} key [description]\r\n     * @return {[type]}     [description]\r\n     */\r\n    isButtonEnabled : function(key) {\r\n      return typeof jApp.opts().toggles[key] === 'undefined' || !!jApp.opts().toggles[key]\r\n    }, //end fn\r\n\r\n    /**\r\n     * Is data cache available\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isDataCacheAvailable : function() {\r\n      return (jUtility.isCaching() && !!jApp.aG().store.get('data_' + jApp.opts().table,false) );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Are there errors in the response\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    isResponseErrors : function(response) {\r\n       return (typeof response.errors !== 'undefined' &&\r\n                      !!response.errors);\r\n    }, // end fn\r\n\r\n    /**\r\n     * Does the form exist\r\n     * @param  {[type]} key [description]\r\n     * @return {[type]}          [description]\r\n     */\r\n    isFormExists : function( key ) {\r\n      return ( typeof jApp.aG().forms[ '$' + key ] !== 'undefined' ||\r\n               typeof jApp.aG().forms[ 'o' + key.ucfirst() ] !== 'undefined' ||\r\n               typeof jApp.aG().forms[ key ] !== 'undefined'  );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Get error message from response\r\n     * @method function\r\n     * @param  {[type]} response [description]\r\n     * @return {[type]}          [description]\r\n     */\r\n    getErrorMessage : function(response) {\r\n      return (typeof response.message !== 'undefined') ?\r\n        response.message :\r\n        'There was a problem completing your request.'\r\n    }, //end fn\r\n\r\n    /**\r\n     * The row needs to be checked out\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    needsCheckout : function() {\r\n      return ( jUtility.isCheckout() && ( jApp.aG().action === 'edit' || jApp.aG().action === 'delete' ) );\r\n    }, //end fn\r\n\r\n    /**\r\n     * The row needs to be checked in\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    needsCheckin : function() {\r\n      return jUtility.needsCheckout();\r\n    }, //end fn\r\n\r\n    /**\r\n     * Get current row id\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getCurrentRowId : function() {\r\n      return jUtility.getCheckedItems(true);\r\n    }, //end fn\r\n\r\n    /**\r\n     * Display unload warning if a form is open\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    unloadWarning : function() {\r\n      if (jUtility.isFormOpen()) {\r\n        return 'You have unsaved changes.';\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Update the total pages of the grid\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    updateTotalPages : function() {\r\n      jApp.aG().dataGrid.pagination.totalPages = Math.ceil( jApp.aG().dataGrid.data.length / jApp.aG().dataGrid.pagination.rowsPerPage );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Update pagination of the grid\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    updatePagination : function() {\r\n      //pagination\r\n      if ( jUtility.isPagination() ) {\r\n        jUtility.updateTotalPages();\r\n        jUtility.setupBootpag();\r\n        jUtility.setupRowsPerPage();\r\n      } else {\r\n        jUtility.hideBootpag();\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Setup bootpag pagination controls\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setupBootpag : function() {\r\n      jApp.tbl().find('.paging').empty().show().bootpag({\r\n        total : jApp.aG().dataGrid.pagination.totalPages,\r\n        page : jApp.opts().pageNum,\r\n        maxVisible : 20\r\n      }).on(\"page\", function(event,num) {\r\n        jUtility.DOM.page(num);\r\n      });\r\n    }, // end fn\r\n\r\n    /**\r\n     * setup/update rows per page controls\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setupRowsPerPage : function() {\r\n      jApp.tbl().find('[name=RowsPerPage]').off('change.rpp').on('change.rpp', function() {\r\n        jApp.tbl().find('[name=RowsPerPage]').val( $(this).val() );\r\n        jUtility.DOM.rowsPerPage( $(this).val() );\r\n      }).parent().show();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Hide bootpag pagination controls\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    hideBootpag : function() {\r\n      jApp.tbl().find('.paging').hide();\r\n      jApp.tbl().find('[name=RowsPerPage]').parent().hide();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Setup header filters\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setupHeaderFilters : function() {\r\n      if (jUtility.isHeaderFilters() ) {\r\n        jUtility.DOM.headerFilterDeleteIcons();\r\n      }\r\n      if (jUtility.isHeaderFiltersDisplay()) {\r\n        jUtility.DOM.showHeaderFilters();\r\n      } else {\r\n        jUtility.DOM.hideHeaderFilters();\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Setup the table sort buttons\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setupSortButtons : function() {\r\n      if ( jUtility.isSort() ) {\r\n        jApp.aG().$().find('.tbl-sort').show();\r\n      } else {\r\n        jApp.aG().$().find('.tbl-sort').hide();\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Toggle Delete Icon Visibility\r\n     * @method function\r\n     * @param  {[type]} $elm [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    toggleDeleteIcon : function( $elm ) {\r\n      if ( !!$elm.val().toString().trim() ) {\r\n        $elm.next('.deleteicon').show();\r\n      } else {\r\n        $elm.next('.deleteicon').hide();\r\n      }\r\n    }, //end fn\r\n\r\n    /**\r\n     * setTimeout helper\r\n     * @method function\r\n     * @param  {[type]}   o.key   [description]\r\n     * @param  {Function} o.fn    [description]\r\n     * @param  {[type]}   o.delay [description]\r\n     * @return {[type]}         [description]\r\n     */\r\n    timeout : function(o) {\r\n      try{\r\n        clearTimeout( jApp.aG().dataGrid.timeouts[o.key] )\r\n      } catch(ignore) {}\r\n\r\n      jApp.aG().dataGrid.timeouts[o.key] = setTimeout(o.fn, o.delay );\r\n    }, //end fn\r\n\r\n    /**\r\n     * setInterval helper\r\n     * @method function\r\n     * @param  {[type]}   o.key   [description]\r\n     * @param  {Function} o.fn    [description]\r\n     * @param  {[type]}   o.delay [description]\r\n     * @return {[type]}         [description]\r\n     */\r\n    interval : function(o) {\r\n      try{\r\n        clearInterval( jApp.aG().dataGrid.intervals[o.key] )\r\n      } catch(ignore) {}\r\n\r\n      jApp.aG().dataGrid.intervals[o.key] = setInterval(o.fn, o.delay );\r\n    }, //end fn\r\n\r\n    /**\r\n     * Update Grid from cached data\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    updateGridFromCache : function() {\r\n      jUtility.callback.update( jUtility.getCachedGridData() );\r\n      jUtility.DOM.togglePreloader(true);\r\n      jUtility.buildMenus();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Retrieve cached data\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getCachedGridData : function() {\r\n      return jApp.aG().store.get('data_' + jApp.opts().table);\r\n    }, // end fn\r\n\r\n\r\n    /**\r\n     * get JSON\r\n     * @method function\r\n     * @param  {[type]} requestOptions [description]\r\n     * @return {[type]}                [description]\r\n     */\r\n    getJSON : function( requestOptions ) {\r\n\r\n        var opts = $.extend(true,\r\n          {\r\n            url : null,\r\n            data : {},\r\n            success : function() { },\r\n            fail : function() { },\r\n            always : jUtility.callback.displayResponseErrors,\r\n            complete : function() {}\r\n          } , requestOptions );\r\n\r\n        jApp.log('6.5 ajax options set, executing ajax request')\r\n        return $.getJSON(opts.url, opts.data, opts.success )\r\n          .fail( opts.fail )\r\n          .always( opts.always )\r\n          .complete( opts.complete );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Prepare form data\r\n     * @param  {[type]} data [description]\r\n     * @return {[type]}      [description]\r\n     */\r\n    prepareFormData : function( data ) {\r\n      var fd = new FormData;\r\n\r\n      _.each( data, function(value, key) {\r\n        fd.append(key, value);\r\n      })\r\n\r\n      return fd;\r\n\r\n    }, // end fn\r\n\r\n    /**\r\n     * post JSON\r\n     * @method function\r\n     * @param  {[type]} requestOptions [description]\r\n     * @return {[type]}                [description]\r\n     */\r\n    postJSON : function( requestOptions ) {\r\n\r\n        // if ( typeof requestOptions.data.append !== 'function' ) {\r\n        //   requestOptions.data = jUtility.prepareFormData( requestOptions.data || {} );\r\n        // }\r\n\r\n        var opts = $.extend(true,\r\n          {\r\n            url : null,\r\n            data : {},\r\n            success : function() { },\r\n            fail : function() { },\r\n            always : jUtility.callback.displayResponseErrors,\r\n            complete : function() {}\r\n          } , requestOptions );\r\n\r\n        return $.ajax({\r\n            url: opts.url,\r\n            data : opts.data,\r\n            success : opts.success,\r\n            type : 'POST',\r\n            dataType : 'json',\r\n            //processData : false,\r\n            //contentType : false\r\n          })\r\n          .fail( opts.fail )\r\n          .always( opts.always )\r\n          .complete( opts.complete );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Execute the grid data request\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    executeGridDataRequest : function() {\r\n      jApp.log('6.3 Setting up options for the data request')\r\n      var params = $.extend(true,  jApp.aG().dataGrid.requestOptions,\r\n          {\r\n            success : jUtility.callback.update,\r\n            fail \t\t: jUtility.gridDataRequestCallback.fail,\r\n            always \t: jUtility.gridDataRequestCallback.always,\r\n            complete: jUtility.gridDataRequestCallback.complete\r\n          } ),\r\n          r = jApp.aG().dataGrid.requests;\r\n\r\n      // show the preloader\r\n      jUtility.DOM.activityPreloader('show');\r\n\r\n      // execute the request\r\n      jApp.log('6.4 Executing ajax request')\r\n      r.gridData = jUtility.getJSON( params );\r\n    }, //end fn\r\n\r\n    /**\r\n     * Turn off modal overlays\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    turnOffOverlays : function() {\r\n      jUtility.DOM.overlay(1,'off');\r\n      jUtility.DOM.overlay(2,'off');\r\n    }, //end fn\r\n\r\n    /**\r\n     * Attempt to locate jQuery target\r\n     * @method function\r\n     * @param  {[type]} target [description]\r\n     * @return {[type]}        [description]\r\n     */\r\n    locateTarget : function(target, scope) {\r\n      // first look in the grid scope,\r\n      // then the document scope,\r\n      // then look through the window object\r\n      // to see if the target is a member\r\n      // of the global scope e.g. $(window)\r\n      if (typeof scope === 'undefined') {\r\n        return jApp.aG().$().find(target) || $(target) || $(window[target]);\r\n      } else {\r\n        return jApp.aG().$().find(target, scope) || $(target, scope) || $(window[target], scope);\r\n      }\r\n    }, //end fn\r\n\r\n    /**\r\n     * Process the event bindings for the grid\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    processGridBindings : function() {\r\n      var events, target, fn, event;\r\n\r\n      _.each( jApp.opts().events.grid, function( events, target ) {\r\n        _.each( events, function(fn, event) {\r\n            if (typeof fn === 'function') {\r\n              jUtility.setCustomBinding( target, fn, event )\r\n            }\r\n        });\r\n      })\r\n    }, //end fn\r\n\r\n    /**\r\n     * Process the event bindings for the form\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    processFormBindings : function() {\r\n      var events, target, fn, event;\r\n\r\n      _.each( jApp.opts().events.form, function( events, target ) {\r\n        _.each( events, function(fn, event) {\r\n            jUtility.setCustomBinding( target, fn, event, '.div-form-panel-wrapper', 'force' )\r\n        });\r\n      });\r\n    }, //end fn\r\n\r\n    /**\r\n     * Set up a custom event binding\r\n     * @method function\r\n     * @param  {[type]}   event [description]\r\n     * @param  {Function} fn    [description]\r\n     * @return {[type]}         [description]\r\n     */\r\n    setCustomBinding : function( target, fn, event, scope, force ) {\r\n      var eventKey = event + '.custom-' + $.md5( fn.toString() ),\r\n          $scope = (typeof scope === 'undefined') ? $(document) : $(scope),\r\n          scope = (typeof scope === 'undefined') ? 'document' : scope;\r\n          force = (typeof force === 'undefined') ? false : !!force;\r\n\r\n      if ( event === 'boot' ) {\r\n        return (typeof fn === 'function') ? fn() : false;\r\n      }\r\n\r\n      // we cannot use event bubbling for scroll\r\n      // events, we must use capturing\r\n      if ( event !== 'scroll' ) {\r\n        if ( !!$(window[target]).length ) {\r\n          jApp.log('Found target within global scope ' + target);\r\n          jApp.log('Binding event ' + eventKey + ' to target ' + target);\r\n          $(window[target]).off(eventKey).on(eventKey, fn);\r\n        } else if ( !jUtility.isEventDelegated(target,eventKey,scope) || force ) {\r\n          jApp.log('Binding event ' + event + ' to target ' + target + ' within scope ' + scope);\r\n          $scope.undelegate(target,eventKey).delegate(target, eventKey, fn);\r\n          jUtility.eventIsDelegated(target,eventKey,scope);\r\n        }\r\n      } else {\r\n        document.addEventListener(event, fn , true);\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Has the event been delegated for the target?\r\n     * @method function\r\n     * @param  {[type]} target   [description]\r\n     * @param  {[type]} eventKey [description]\r\n     * @return {[type]}          [description]\r\n     */\r\n    isEventDelegated : function( target, eventKey, scope ) {\r\n      return _.indexOf(jApp.aG().delegatedEvents, scope + '-' + target + '-' + eventKey) !== -1;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Mark event delegated\r\n     * @method function\r\n     * @param  {[type]} target   [description]\r\n     * @param  {[type]} eventKey [description]\r\n     * @param  {[type]} scope    [description]\r\n     * @return {[type]}          [description]\r\n     */\r\n    eventIsDelegated : function( target, eventKey, scope) {\r\n      return jApp.aG().delegatedEvents.push( scope + '-' + target + '-' + eventKey );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Form boot up function\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    formBootup : function() {\r\n      jUtility.$currentFormWrapper()\r\n        //reset validation stuff\r\n        .find('.has-error').removeClass('has-error').end()\r\n        .find('.has-success').removeClass('has-success').end()\r\n        .find('.help-block').hide().end()\r\n        .find('.form-control-feedback').hide().end()\r\n\r\n        //multiselects\r\n        .find('select').addClass('bsms').end()\r\n        .find('.bsms').each( function(i,elm) {\r\n          $(elm).data('jInput').fn.multiselect().fn.multiselectRefresh();\r\n        } ).end()\r\n        .find('[data-tokens]').each( function(){\r\n          if ( typeof $(this).data('tokenFieldSource') != 'null' ) {\r\n              $(this).tokenfield({\r\n                autocomplete : {\r\n                  source : $(this).data('tokenFieldSource'),\r\n                  delay : 300\r\n                },\r\n                showAutoCompleteOnFocus : false,\r\n                tokens : $(this).val() || []\r\n              })\r\n              $(this).data('tokenFieldSource',null);\r\n          }\r\n          // var val = $(this).data('value').split('|') || []\r\n          // $(this).tokenfield( 'setTokens', val );\r\n\r\n        }).end()\r\n\r\n        .find('[_linkedElmID]').change();\r\n\r\n    }, //end fn\r\n\r\n    /**\r\n     * Load event bindings for processing\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    loadBindings : function() {\r\n        // form bindings\r\n        jApp.opts().events.form = $.extend(true, {\r\n          // the bind function will assume the scope is relative to the current form\r\n          // unless the key is found in the global scope\r\n          // boot functions will be automatically called at runtime\r\n          \"[data-validType='Phone Number']\" : {\r\n            keyup : function() {\r\n              $(this).val( formatPhone( $(this).val() ) );\r\n            }\r\n          },\r\n\r\n          \"[data-validType='Zip Code']\" : {\r\n            keyup : function() {\r\n              $(this).val( formatZip( $(this).val() ) );\r\n            }\r\n          },\r\n\r\n          \"[data-validType='SSN']\" : {\r\n            keyup : function() {\r\n              var This = $(this);\r\n              setTimeout( function() {\r\n                This.val( formatSSN( jApp.aG().val() ) );\r\n              }, 200);\r\n            }\r\n          },\r\n\r\n          \"[data-validType='color']\" : {\r\n            keyup : function() {\r\n              $(this).css('background-color',$(this).val());\r\n            }\r\n          },\r\n\r\n          \"[data-validType='Number']\" : {\r\n            change : function() {\r\n              $(this).val( formatNumber( $(this).val() ) );\r\n            }\r\n          },\r\n\r\n          \"[data-validType='Integer']\" : {\r\n            change : function() {\r\n              $(this).val( formatInteger( $(this).val() ) );\r\n            }\r\n          },\r\n\r\n          \"[data-validType='US State']\" : {\r\n            change : function() {\r\n              $(this).val( formatUC( $(this).val() ) );\r\n            }\r\n          },\r\n\r\n          \"button.close, .btn-cancel\" : {\r\n            click : function() {\r\n              if ( jUtility.needsCheckin() )  {\r\n                console.log('checking in record');\r\n                jUtility.checkin( jUtility.getCurrentRowId() );\r\n              } else {\r\n                console.log('closing current form');\r\n                jUtility.closeCurrentForm();\r\n              }\r\n            }\r\n          },\r\n\r\n          \".btn-go\" : {\r\n            click : jUtility.saveCurrentFormAndClose\r\n          },\r\n\r\n          \".btn-save\" : {\r\n            click : jUtility.saveCurrentForm\r\n          },\r\n\r\n          \".btn-reset\" : {\r\n            click : jUtility.resetCurrentForm\r\n          },\r\n\r\n          \".btn-refreshForm\" : {\r\n            click : jUtility.refreshCurrentForm\r\n          },\r\n\r\n          \".btn-array-add\" : {\r\n            click : jUtility.arrayAddRow\r\n          },\r\n\r\n          \".btn-array-remove\" : {\r\n            click : jUtility.arrayRemoveRow\r\n          },\r\n\r\n          \"input\" : {\r\n            keyup : function(e) {\r\n              e.preventDefault();\r\n              if (e.which === 13) {\r\n                if( jUtility.isConfirmed() ) {\r\n                  jUtility.saveCurrentFormAndClose();\r\n                }\r\n              } else if (e.which === 27) {\r\n                jUtility.closeCurrentForm();\r\n              }\r\n            }\r\n          },\r\n\r\n          \"#confirmation\" : {\r\n            keyup : function() {\r\n              if( $(this).val().toString().toLowerCase() === 'yes' ) {\r\n                jUtility.$currentForm().find('.btn-go').removeClass('disabled');\r\n              } else {\r\n                jUtility.$currentForm().find('.btn-go').addClass('disabled');\r\n              }\r\n            }\r\n          },\r\n\r\n          \"[_linkedElmID]\" : {\r\n            change : function() {\r\n              var This = $(this),\r\n                $col = This.attr('_linkedElmFilterCol'),\r\n                $id\t = This.val(),\r\n                $labels = This.attr('_linkedElmLabels'),\r\n                $options = This.attr('_linkedElmOptions'),\r\n                oFrm = jUtility.oCurrentForm(),\r\n                oElm = oFrm.fn.getElmById( This.attr('_linkedElmID') );\r\n\r\n\r\n              // set data to always expire;\r\n              oElm.fn.setTTL(-1);\r\n              oElm.jApp.opts().hideIfNoOptions = true;\r\n              oElm.jApp.opts().cache = false;\r\n\r\n              oElm.fn.attr( {\r\n                '_optionsFilter' : $col + '=' + $id,\r\n                '_firstoption' : 0,\r\n                '_firstlabel' : '-Other-',\r\n                '_labelsSource' : $labels,\r\n                '_optionsSource' : $options\r\n                } );\r\n\r\n              oElm.fn.initSelectOptions(true);\r\n\r\n            },\r\n          }\r\n\r\n        }, jApp.opts().events.form);\r\n\r\n        // grid events\r\n        jApp.opts().events.grid = $.extend(true, {\r\n          // the bind function will assume the scope is relative to the grid\r\n          // unless the key is found in the global scope\r\n          // boot functions will be automatically called at runtime\r\n          window : {\r\n            resize : function() {\r\n              jUtility.timeout( {\r\n                key : 'resizeTimeout',\r\n                fn : jUtility.DOM.updateColWidths,\r\n                delay : 500\r\n              });\r\n            },\r\n\r\n            beforeunload : jUtility.unloadWarning,\r\n          },\r\n\r\n          \".table-grid\" : {\r\n            \"scroll\" : function() {\r\n              jUtility.timeout( {\r\n                key : 'tableGridScroll',\r\n                fn : jUtility.DOM.pageWrapperScrollHandler,\r\n                delay : 300\r\n              })\r\n            }\r\n          },\r\n\r\n          \".header-filter\" : {\r\n            keyup : function() {\r\n              jUtility.toggleDeleteIcon( $(this) );\r\n\r\n              jUtility.timeout( {\r\n                key : 'applyHeaderFilters',\r\n                fn : jUtility.DOM.applyHeaderFilters,\r\n                delay : 300\r\n              });\r\n\r\n            },\r\n\r\n            boot : jUtility.DOM.applyHeaderFilters\r\n          },\r\n\r\n          \".tbl-sort\" : {\r\n            click : function() {\r\n              var $btn, $btnIndex, $desc\r\n\r\n              //button\r\n              $btn = $(this);\r\n              //index\r\n              $btnIndex = $btn.closest('.table-header').index()+1;\r\n\r\n              //tooltip\r\n              $btn.attr('title', $btn.attr('title').indexOf('Descending') !== -1 ?\r\n                'Sort Ascending' :\r\n                'Sort Descending'\r\n              ).attr('data-original-title', $btn.attr('title') )\r\n              .tooltip({delay:300});\r\n\r\n              //ascending or descending\r\n              $desc = $btn.find('i').hasClass('fa-sort-amount-desc');\r\n\r\n              //other icons\r\n              jApp.tbl().find('.tbl-sort i.fa-sort-amount-desc')\r\n                .removeClass('fa-sort-amount-desc')\r\n                .addClass('fa-sort-amount-asc')\r\n                .end()\r\n                .find('.tbl-sort.btn-primary')\r\n                .removeClass('btn-primary');\r\n\r\n              //btn style\r\n              $btn.addClass('btn-primary');\r\n\r\n              //icon\r\n              $btn.find('i')\r\n                .removeClass( ($desc) ? 'fa-sort-amount-desc' : 'fa-sort-amount-asc')\r\n                .addClass( ($desc) ? 'fa-sort-amount-asc' : 'fa-sort-amount-desc');\r\n\r\n              jApp.tbl().find('.table-body .table-row').show();\r\n\r\n              // perform the sort on the table rows\r\n              jUtility.DOM.sortByCol( $btnIndex, $desc );\r\n            }\r\n          },\r\n\r\n          \"[title]\" : {\r\n            boot : function() {\r\n              $('[title]').tooltip({delay:300});\r\n            }\r\n          },\r\n\r\n          \".btn-readmore\" : {\r\n            click : function()  {\r\n              $(this).toggleClass('btn-success btn-warning');\r\n              $(this).siblings('.readmore').toggleClass('active');\r\n            }\r\n          },\r\n\r\n          \"[name=RowsPerPage]\" : {\r\n            change : function() {\r\n              jApp.tbl().find('[name=RowsPerPage]').val( $(this).val() );\r\n              jUtility.DOM.rowsPerPage( $(this).val() );\r\n            },\r\n            boot : function() {\r\n              if ( jUtility.isPagination() ) {\r\n                $('[name=RowsPerPage]').parent().show();\r\n              } else {\r\n                $('[name=RowsPerPage]').parent().hide();\r\n              }\r\n            }\r\n          },\r\n\r\n          \".deleteicon\" : {\r\n            boot : function() {\r\n              $(this).remove();\r\n            },\r\n            click : function() {\r\n              $(this).prev('input').val('').focus().trigger('keyup');\r\n              jUtility.DOM.applyHeaderFilters();\r\n            }\r\n          },\r\n\r\n          \".chk_all\" : {\r\n            change : function() {\r\n              jApp.aG().$().find('.chk_cid').prop('checked',$(this).prop('checked'));\r\n              $('.chk_cid').eq(0).change();\r\n            }\r\n          },\r\n\r\n          \".chk_cid\" : {\r\n            change : function() {\r\n              var $chk_all,\t// $checkall checkbox\r\n                $checks,\t// $checkboxes\r\n                total_num,\t// total checkboxes\r\n                num_checked,// number of checkboxes checked\r\n\r\n\r\n              $chk_all = jApp.tbl().find('.chk_all');\r\n              $checks = jApp.tbl().find('.chk_cid');\r\n              total_num = $checks.length;\r\n              num_checked = jApp.tbl().find('.chk_cid:checked').length\r\n\r\n              jUtility.DOM.updateRowMenu( num_checked );\r\n\r\n              // set the state of the checkAll checkbox\r\n              $chk_all\r\n              .prop('checked', (total_num === num_checked) ? true : false )\r\n              .prop('indeterminate', (num_checked > 0 && num_checked < total_num) ? true : false );\r\n            }\r\n          },\r\n\r\n          \".btn-new\" : {\r\n            click : function() {\r\n              jUtility.actionHelper('new');\r\n            }\r\n          },\r\n\r\n          \".btn-edit\" : {\r\n            click : function() {\r\n              jUtility.actionHelper('edit');\r\n            }\r\n          },\r\n\r\n          \".btn-headerFilters\" : {\r\n            click : jUtility.DOM.toggleHeaderFilters\r\n          },\r\n\r\n          \".btn-delete\" : {\r\n            click : function() {\r\n              jUtility.withSelected('delete');\r\n            }\r\n          },\r\n\r\n          \".btn-clear\" : {\r\n            click : function() {\r\n              jApp.aG().$().find('.chk_cid').prop('checked',false);\r\n              $('.chk_cid').eq(0).change();\r\n            }\r\n          },\r\n\r\n          \".btn-refresh\" : {\r\n            click : function() {\r\n              $(this).addClass('disabled').delay(2000).removeClass('disabled');\r\n              jUtility.updateAll();\r\n            }\r\n          },\r\n\r\n          // \".btn-showMenu\" : {\r\n          //   click : jUtility.DOM.toggleRowMenu\r\n          // },\r\n\r\n          \".table-body\" : {\r\n            mouseover : function() {\r\n              $(this).focus();\r\n            }\r\n          },\r\n\r\n          // \".table-body .table-row\" : {\r\n          //   mouseover : function() {\r\n          //     var $tr = $(this);\r\n          //\r\n          //     clearTimeout(jApp.aG().dataGrid.intervals.cancelRowMenuUpdate);\r\n          //     jApp.aG().dataGrid.intervals.moveRowMenu = setTimeout( function() {\r\n          //       jApp.tbl().find('.btn-showMenu').removeClass('hover');\r\n          //       if (jApp.tbl().find('.rowMenu').hasClass('expand') === false) {\r\n          //         jApp.tbl().find('.btn-showMenu').removeClass('active');\r\n          //       }\r\n          //       $tr.find('.btn-showMenu').addClass('hover');\r\n          //\r\n          //     }, 250 );\r\n          //   },\r\n          //\r\n          //   mouseout : function() {\r\n          //\r\n          //     var $tr = $(this);\r\n          //     clearTimeout(jApp.aG().dataGrid.intervals.moveRowMenu);\r\n          //     jApp.aG().dataGrid.intervals.cancelRowMenuUpdate = setTimeout( function() {\r\n          //       jApp.tbl().find('.btn-showMenu').removeClass('hover');\r\n          //       if (!jApp.tbl().find('.rowMenu').hasClass('expand')) {\r\n          //         $tr.find('.btn-showMenu').removeClass('active');\r\n          //       }\r\n          //       jApp.tbl().find('.rowMenu').removeClass('active');\r\n          //     }, 100 );\r\n          //   }\r\n          // }\r\n\r\n        }, jApp.opts().events.grid);\r\n    }, //end fn\r\n\r\n    /**\r\n     * Load Form Definitions\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    loadFormDefinitions : function() {\r\n      jApp.opts().formDefs = $.extend(true, {}, {\r\n\r\n        editFrm : {\r\n          model : jApp.opts().model,\r\n          table : jApp.opts().table,\r\n          pkey : jApp.opts().pkey,\r\n          tableFriendly : jApp.opts().tableFriendly,\r\n          atts : { method : 'PATCH' },\r\n          disabledElements : jApp.opts().disabledFrmElements,\r\n        },\r\n\r\n        newFrm : {\r\n          model : jApp.opts().model,\r\n          table : jApp.opts().table,\r\n          pkey : jApp.opts().pkey,\r\n          tableFriendly : jApp.opts().tableFriendly,\r\n          atts : { method : 'POST' },\r\n          disabledElements : jApp.opts().disabledFrmElements\r\n        },\r\n\r\n        colParamFrm : {\r\n          table : 'col_params',\r\n          pkey : 'colparam_id',\r\n          tableFriendly : 'Column Parameters',\r\n          btns : [],\r\n          atts : {\r\n            name : 'frm_element_editor',\r\n          },\r\n          fieldset : {\r\n            'legend' : '3. Edit Column Parameters',\r\n          }\r\n        }\r\n      }, jApp.opts().formDefs);\r\n    }, //end fn\r\n\r\n    /**\r\n     * Grid data request callback methods\r\n     * @type {Object}\r\n     */\r\n    gridDataRequestCallback : {\r\n      /**\r\n       * Grid data request failed\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      fail : function() {\r\n        console.warn( 'update grid data failed, it may have been aborted' );\r\n      }, //end fn\r\n\r\n      /**\r\n       * Always execute after grid data request\r\n       * @method function\r\n       * @param  {[type]} response [description]\r\n       * @return {[type]}          [description]\r\n       */\r\n      always : function(response) {\r\n        jUtility.callback.displayResponseErrors(response);\r\n        if (jUtility.isCaching()) {\r\n            jApp.aG().store.set('data_' + jApp.opts().table,response);\r\n        }\r\n        jUtility.DOM.togglePreloader(true);\r\n        jUtility.buildMenus();\r\n      }, // end fn\r\n\r\n      /**\r\n       * Grid data request completed\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      complete : function() {\r\n        jUtility.DOM.activityPreloader('hide');\r\n      }, // end fn\r\n    }, // end callbacks\r\n\r\n    /**\r\n     * Clear countdown interval\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    clearCountdownInterval : function() {\r\n      try {\r\n        clearInterval( jApp.aG().dataGrid.intervals.countdownInterval );\r\n      } catch(e) {\r\n        // do nothing\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Set the countdown interval\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setCountdownInterval : function() {\r\n      jUtility.clearCountdownInterval();\r\n      jApp.aG().dataGrid.intervals.countdownInterval = setInterval( jUtility.updateCountdown,1000 );\r\n    }, // end fn\r\n\r\n    /**\r\n     * Clear the get checked out records interval\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    clearGetCheckedOutRecordsIntevrval : function() {\r\n      try {\r\n        clearInterval( jApp.aG().dataGrid.intervals.getCheckedOutRecords );\r\n      } catch(e) {\r\n        // do nothing\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Set the get checked out records interval\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setGetCheckedOutRecordsInterval : function() {\r\n      if ( jUtility.isCheckout() ) {\r\n        jUtility.clearGetCheckedOutRecordsIntevrval();\r\n        jApp.aG().dataGrid.intervals.getCheckedOutRecords = setInterval( jUtility.getCheckedOutRecords, 10000 );\r\n      }\r\n    }, // end fn\r\n\r\n    /**\r\n     * Update countdown\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    updateCountdown : function() {\r\n      if (jUtility.isFormOpen()) { return false; }\r\n\r\n      var txt = 'Refreshing in ';\r\n      txt += (jApp.aG().dataGrid.intervals.countdownTimer > 0) ? Math.floor( jApp.aG().dataGrid.intervals.countdownTimer / 1000) : 0;\r\n      txt += 's';\r\n\r\n      jApp.tbl().find('button#btn_table_status').text( txt );\r\n      jApp.aG().dataGrid.intervals.countdownTimer -= 1000;\r\n\r\n      if ( jApp.aG().dataGrid.intervals.countdownTimer <= -1000) {\r\n        jUtility.updateAll();\r\n      }\r\n\r\n    }, // end fn\r\n\r\n    /**\r\n     * Initialize countdown timer value\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    initCountdown : function() {\r\n      jApp.aG().dataGrid.intervals.countdownTimer = jApp.opts().refreshInterval-2000;\r\n    }, // end fn\r\n\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   ellipsis\r\n     *\r\n     *  Truncates cells that are too long\r\n     *  according to the maxCellLength grid\r\n     *  option. Adds a read-more button to\r\n     *  any cells that are truncated.\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    ellipsis : function( txt ) {\r\n      var $rdMr, $dtch, $btn, $truncated, $e;\r\n\r\n      $btn = $('<button/>', {\r\n        'class' : 'btn btn-success btn-xs btn-readmore pull-right',\r\n        'type' : 'button'}\r\n      ).html(' . . . ');\r\n\r\n      $e = $('<div/>').html(txt);\r\n\r\n      if ( $e.text().length > jApp.opts().maxCellLength ) {\r\n        // look for child html elements\r\n        if ( $e.find(':not(i)').length > 0) {\r\n          $rdMr = $('<span/>', {'class':'readmore'});\r\n\r\n          while ( $e.text().length > jApp.opts().maxCellLength ) {\r\n            // keep detaching html elements until the cell length is\r\n            // within allowable limits\r\n\r\n            // store detached element\r\n            $dtch = ( !!$e.find(':not(i)').last().parent('h4').length ) ?\r\n              $e.find(':not(i)').last().parent().detach() :\r\n              $e.find(':not(i)').last().detach();\r\n\r\n            // append the detached element to the readmore span\r\n            $rdMr.html( $rdMr.html( ) + ' ' ).append($dtch);\r\n\r\n            // clean up the element html of extra whitespace\r\n            $e.html( $e.html().replace(/(\\s*)?\\,*(\\s*)?$/ig,'') );\r\n          }\r\n\r\n          $e.append($rdMr).prepend($btn);\r\n        }// end if\r\n\r\n        // all text, no child html elements in the cell\r\n        else {\r\n          // place the extra text in the readmore span\r\n          $rdMr = $('<span/>', {'class':'readmore'})\r\n            .html( $e.html().substr(jApp.opts().maxCellLength) );\r\n\r\n          // truncate the visible text in the cell\r\n          $truncated = $e.html().substr(0,jApp.opts().maxCellLength);\r\n\r\n          $e.empty().append($truncated).append($rdMr).prepend($btn);\r\n        } // end else\r\n      }// end if\r\n\r\n      return $e.html();\r\n\r\n    }, // end fn\r\n\r\n    /**\r\n     * Set up HTML templates\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setupHtmlTemplates : function() {\r\n      /**\r\n       *   HTML TEMPLATES\r\n       *\r\n       *  Place large html templates here.\r\n       *  These are rendered with\r\n       *  the method jUtility.render.\r\n       *\r\n       *  Parameters of the form {@ParamName}\r\n       *  are expanded by the render function\r\n       */\r\n      jApp.aG().html = $.extend(true, {}, {\r\n\r\n        // main grid body\r\n        tmpMainGridBody : `<div class=\"row\">\r\n                            <div class=\"col-lg-12\">\r\n                              <div class=\"panel panel-info panel-grid panel-grid1\">\r\n                                <div class=\"panel-heading\">\r\n                                  <h1 class=\"page-header\"><i class=\"fa {@icon} fa-fw\"></i><span class=\"header-title\"> {@headerTitle} </span></h1>\r\n                                  <div class=\"alert alert-warning alert-dismissible helpText\" role=\"alert\"> <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button> {@helpText} </div>\r\n                                </div>\r\n                                <div class=\"panel-body grid-panel-body\">\r\n                                  <div class=\"table-responsive\">\r\n                                    <div class=\"table table-bordered table-grid\">\r\n                                      <div class=\"table-head\">\r\n                                        <div class=\"table-row table-menu-row\">\r\n                                          <div class=\"table-header table-menu-header\" style=\"width:100%\">\r\n                                            <div class=\"btn-group btn-group-sm table-btn-group\">  </div>\r\n                                          </div>\r\n                                        </div>\r\n                                        <div style=\"display:none\" class=\"table-row table-rowMenu-row\"></div>\r\n                                        <div class=\"table-row tfilters\" style=\"display:none\">\r\n                                          <div style=\"width:10px;\" class=\"table-header\">&nbsp;</div>\r\n                                          <div style=\"width:175px;\" class=\"table-header\" align=\"right\"> <span class=\"label label-info filter-showing\"></span> </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class=\"table-body\" id=\"tbl_grid_body\">\r\n                                        <!--{$tbody}-->\r\n                                      </div>\r\n                                      <div class=\"table-foot\">\r\n                                        <div class=\"row\">\r\n                                          <div class=\"col-md-3\">\r\n                                            <div style=\"display:none\" class=\"ajax-activity-preloader pull-left\"></div>\r\n                                            <div class=\"divRowsPerPage pull-right\">\r\n                                              <select style=\"width:180px;display:inline-block\" type=\"select\" name=\"RowsPerPage\" id=\"RowsPerPage\" class=\"form-control\">\r\n                                                <option value=\"10\">10</option>\r\n                                                <option value=\"15\">15</option>\r\n                                                <option value=\"25\">25</option>\r\n                                                <option value=\"50\">50</option>\r\n                                                <option value=\"100\">100</option>\r\n                                                <option value=\"10000\">All</option>\r\n                                              </select>\r\n                                            </div>\r\n                                          </div>\r\n                                          <div class=\"col-md-9\">\r\n                                            <div class=\"paging\"></div>\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <!-- /. table-foot -->\r\n                                    </div>\r\n                                  </div>\r\n                                  <!-- /.table-responsive -->\r\n                                </div>\r\n                                <!-- /.panel-body -->\r\n                              </div>\r\n                              <!-- /.panel -->\r\n                            </div>\r\n                            <!-- /.col-lg-12 -->\r\n                          </div>\r\n                          <!-- /.row -->`,\r\n\r\n        // check all checkbox template\r\n        tmpCheckAll\t: `<label for=\"chk_all\" class=\"btn btn-default pull-right\"> <input id=\"chk_all\" type=\"checkbox\" class=\"chk_all\" name=\"chk_all\"> </label>`,\r\n\r\n        // header filter clear text button\r\n        tmpClearHeaderFilterBtn : `<span class=\"fa-stack fa-lg\"><i class=\"fa fa-circle-thin fa-stack-2x\"></i><i class=\"fa fa-remove fa-stack-1x\"></i></span>`,\r\n\r\n        // filter showing ie Showing X / Y Rows\r\n        tmpFilterShowing : `<i class=\"fa fa-filter fa-fw\"></i>{@totalVis} / {@totalRows}`,\r\n\r\n        // table header sort button\r\n        tmpSortBtn : `<button rel=\"{@ColumnName}\" title=\"{@BtnTitle}\" class=\"btn btn-sm btn-default {@BtnClass} tbl-sort pull-right\" type=\"button\"> <i class=\"fa fa-sort-{@faClass} fa-fw\"></i> </button>`,\r\n\r\n        // form templates\r\n        forms : {\r\n\r\n          // Edit Form Template\r\n          editFrm\t: `<div id=\"div_editFrm\" class=\"div-btn-edit min div-form-panel-wrapper\">\r\n                      <div class=\"frm_wrapper\">\r\n                        <div class=\"panel panel-blue\">\r\n                          <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-pencil fa-fw\"></i> <span class=\"spn_editFriendlyName\">{@Name}</span> [Editing] </div>\r\n                          <div class=\"panel-overlay\" style=\"display:none\"></div>\r\n                          <div class=\"panel-body\">\r\n                            <div class=\"row side-by-side\">\r\n                              <div class=\"side-by-side editFormContainer formContainer\"> </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>`,\r\n\r\n          // New Form Template\r\n          newFrm\t: `<div id=\"div_newFrm\" class=\"div-btn-new min div-form-panel-wrapper\">\r\n                      <div class=\"frm_wrapper\">\r\n                        <div class=\"panel panel-green\">\r\n                          <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-plus fa-fw\"></i> New: <span class=\"spn_editFriendlyName\">{@tableFriendly}</span> </div>\r\n                          <div class=\"panel-overlay\" style=\"display:none\"></div>\r\n                          <div class=\"panel-body\">\r\n                            <div class=\"row side-by-side\">\r\n                              <div class=\"side-by-side newFormContainer formContainer\"> </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>`,\r\n\r\n          // New Form Template\r\n          newOtherFrm\t: `<div id=\"div_newFrm\" class=\"div-btn-new min div-form-panel-wrapper\">\r\n                          <div class=\"frm_wrapper\">\r\n                            <div class=\"panel panel-info\">\r\n                              <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-plus fa-fw\"></i> New: <span class=\"spn_editFriendlyName\">{@tableFriendly}</span> </div>\r\n                              <div class=\"panel-overlay\" style=\"display:none\"></div>\r\n                              <div class=\"panel-body\">\r\n                                <div class=\"row side-by-side\">\r\n                                  <div class=\"side-by-side newOtherFormContainer formContainer\"> </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>`,\r\n\r\n          // Delete Form Template\r\n          deleteFrm\t: `<div id=\"div_deleteFrm\" class=\"div-btn-delete min div-form-panel-wrapper\">\r\n                        <div class=\"frm_wrapper\">\r\n                          <div class=\"panel panel-red\">\r\n                            <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\">×</button> <i class=\"fa fa-trash-o fa-fw\"></i> <span class=\"spn_editFriendlyName\"></span> : {@deleteText} </div>\r\n                            <div class=\"panel-overlay\" style=\"display:none\"></div>\r\n                            <div class=\"panel-body\">\r\n                              <div class=\"row side-by-side\">\r\n                                <div class=\"delFormContainer formContainer\"></div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          </form>\r\n                        </div>\r\n                      </div>`,\r\n\r\n          // Colparams Form Template\r\n          colParamFrm\t: `<div id=\"div_colParamFrm\" class=\"div-btn-other min div-form-panel-wrapper\">\r\n                          <div class=\"frm_wrapper\">\r\n                            <div class=\"panel panel-lblue\">\r\n                              <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-gear fa-fw\"></i> <span class=\"spn_editFriendlyName\">Form Setup</span> </div>\r\n                              <div class=\"panel-overlay\" style=\"display:none\"></div>\r\n                              <div class=\"panel-body\" style=\"padding:0 0px !important;\">\r\n                                <div class=\"row side-by-side\">\r\n                                  <div class=\"col-lg-3 tbl-list\"></div>\r\n                                  <div class=\"col-lg-2 col-list\"></div>\r\n                                  <div class=\"col-lg-7 param-list\">\r\n                                    <div class=\"side-by-side colParamFormContainer formContainer\"> </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"panel-heading\"> <input type=\"button\" class=\"btn btn-success btn-save\" id=\"btn_save\" value=\"Save\"> <button type=\"reset\" class=\"btn btn-warning btn-reset\" id=\"btn_reset\">Reset</button> <input type=\"button\" class=\"btn btn-warning btn-refreshForm\" id=\"btn_refresh\" value=\"Refresh Form\"> <input type=\"button\" class=\"btn btn-danger btn-cancel\" id=\"btn_cancel\" value=\"Cancel\"> </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>`,\r\n        }\r\n      }, jApp.opts().html);\r\n\r\n      jApp.log('2.1 HTML Templates Done')\r\n\r\n    }, // end fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   render\r\n     *\r\n     *  @str   (string) containing\r\n     *  \t\tmultiline text\r\n     *\r\n     *  @params (obj) contains key/value pairs\r\n     *  \t\t  defining parameters that\r\n     *  \t\t  will be interpolated in\r\n     *  \t\t  the returned text\r\n     *\r\n     *  returns the interpolated text\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    render : function(str,params) {\r\n      var ptrn, key, val;\r\n\r\n      //if (typeof params !== 'object') return '';\r\n\r\n      _.each( params, function(val, key) {\r\n        ptrn = new RegExp( '\\{@' + key + '\\}', 'gi' );\r\n        str = str.replace(ptrn, val );\r\n      })\r\n\r\n      return str.replace(/\\{@.+\\}/gi,'');\r\n    }, //end fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   interpolate\r\n     *\r\n     *  @value (str) string to be interpolated\r\n     *\r\n     *  @return (str) the interpolated string\r\n     *\r\n     *  recursively processes the input value and\r\n     *  replaces parameters of the form\r\n     *  {@ParamName} with the corresponding\r\n     *  value from the JSON data. Uses the\r\n     *  replace callbak jUtility.replacer.\r\n     *\r\n     *  e.g. {@ParamName} -> jApp.aG().dataGrid.data[row][ParamName]\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    interpolate : function(value) {\r\n      return value.replace(/\\{@(\\w+)\\}/gi, jUtility.replacer)\r\n    }, // end fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   replacer - RegExp replace callback\r\n     *\r\n     *  @match \t(str) the match as defined\r\n     *  \t\t\tby the RegExp pattern\r\n     *  @p1\t  \t{str} the partial match as\r\n     *  \t\t\tdefined by the first\r\n     *  \t\t\tcapture group\r\n     *  @offset\t(int) the offset where the\r\n     *  \t\t\tmatch was found in @string\r\n     *  @string\t(str) the original string\r\n     *\r\n     *  @return\t(str) the replacement string\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    replacer : function(match, p1, offset, string) {\r\n      return jApp.aG().currentRow[p1];\r\n    }, // end fn\r\n\r\n    /**\r\n     * Get the rows that match the header filter text\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    getHeaderFilterMatchedRows : function() {\r\n      var columnOffset = (jUtility.isEditable()) ? 3 : 2,\r\n          currentColumn,\r\n          currentMatches,\r\n          matchedRows = [],\r\n          targetString\r\n\r\n\r\n      //iterate through header filters and apply each\r\n      jApp.tbl().find('.header-filter').filter( function() {\r\n        return !!$(this).val().toString().trim().length\r\n      }).each( function(i) {\r\n\r\n        // calculate the 1-indexed index of the current column\r\n        currentColumn = +1+$(this).parent().index();\r\n\r\n        jApp.log( 'The current column is'  + currentColumn);\r\n\r\n        // set the target string for the current column\r\n        // note: using a modified version of $.contains that is case-insensitive\r\n        targetString = \".table-row .table-cell:nth-child(\" + currentColumn + \"):contains('\" + $(this).val() + \"')\";\r\n\r\n        // find the matched rows in the current column\r\n        currentMatches = jApp.tbl().find(targetString)\r\n                            .parent()\r\n                            .map( function(i, obj) { return $(obj).index(); })\r\n                            .get();\r\n\r\n        // if matchedRows is non-empty, find the intersection of the\r\n        // matched rows and the current rows - ie the rows that match\r\n        // all of the criteria processed so far.\r\n        matchedRows = (!matchedRows.length) ?\r\n          currentMatches :\r\n          _.intersection(matchedRows,currentMatches);\r\n\r\n      });\r\n\r\n      return matchedRows;\r\n\r\n    }, //end fn\r\n\r\n    /**\r\n     * Sets the rows that are visible\r\n     * @param  {array} visibleRows [indexes of the visible rows]\r\n     * @return {[type]}             [description]\r\n     */\r\n    setVisibleRows : function( visibleRows ) {\r\n      // show appropriate rows\r\n      jApp.tbl().find('.table-body .table-row').hide()\r\n         .filter( function(i) {\r\n           return _.indexOf(visibleRows, i) !== -1;\r\n      }).show();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Are Header Filters Non-empty\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    areHeaderFiltersNonempty : function() {\r\n      return !!jApp.tbl().find('.header-filter').filter( function() {\r\n        return !!this.value;\r\n      }).length\r\n    }, //end fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   prepareValue\r\n     *\r\n     *  @value \t(str) the column value as\r\n     *  \t\tspecified in the JSON\r\n     *  \t\tdata\r\n     *  @column (str) the column name as\r\n     *  \t\tspecified in the JSON\r\n     *  \t\tdata\r\n     *\r\n     *  @return (str) the prepared value\r\n     *\r\n     *  prepares the value for display in\r\n     *  the DOM, applying a template\r\n     *  function if applicable.\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    prepareValue : function(value,column) {\r\n      var template;\r\n\r\n      if (value == null) {\r\n        value = '';\r\n      }\r\n\r\n      if (value.toString().toLowerCase() === 'null') {\r\n        return '';\r\n      }\r\n\r\n      if (typeof jApp.opts().templates[column] === 'function') {\r\n        template = jApp.opts().templates[column];\r\n        value = template(value);\r\n      }\r\n\r\n      if (value.toString().trim() === '') {\r\n        return '';\r\n      }\r\n\r\n      if (value.toString().indexOf('|') !== -1) {\r\n        value = value.replace(/\\|/gi,', ');\r\n      }\r\n\r\n      if ( jUtility.isEllipses() ) {\r\n        value = jUtility.ellipsis( value );\r\n      }\r\n\r\n      return value;\r\n    }, // end fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   deltaData\r\n     *\r\n     *  @prev (obj) previous state of object\r\n     *  @now  (obj) current state of object\r\n     *\r\n     *  computes and returns the difference\r\n     *  between two objects\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    deltaData : function(prev, now) {\r\n      var changes = {}, prop, c;\r\n      $.each(now, function( i, row) {\r\n        if (typeof prev[i] === 'undefined') {\r\n          changes[i] = row;\r\n        } else {\r\n          $.each( row, function( prop, value) {\r\n            if (prev[i][prop] !== value) {\r\n              if (typeof changes[i] === 'undefined') {\r\n                changes[i] = {};\r\n              }\r\n              changes[i][prop] = value;\r\n            }\r\n          })\r\n        }\r\n      })\r\n      if ($.isEmptyObject(changes)) {\r\n        return false;\r\n      }\r\n      return changes;\r\n\r\n    }, // end fn\r\n\r\n    /**\r\n     * Checkout record\r\n     * @param  {[type]} id [description]\r\n     * @return {[type]}    [description]\r\n     */\r\n    checkout : function(id) {\r\n      jUtility.getJSON( {\r\n        url : '/checkout/_' + jApp.opts().model + '_' + id,\r\n        success : jUtility.callback.checkout\r\n      });\r\n    }, // end fn\r\n\r\n    /**\r\n     * Checkin record\r\n     * @param  {[type]} id [description]\r\n     * @return {[type]}    [description]\r\n     */\r\n    checkin : function(id) {\r\n      jUtility.getJSON({\r\n        url : '/checkin/_' + jApp.opts().model + '_' + id,\r\n        success : jUtility.callback.checkin,\r\n        always : function() { /* ignore */ }\r\n      });\r\n    }, // end fn\r\n\r\n    /**\r\n     * Get all checked out records\r\n     * @return {[type]} [description]\r\n     */\r\n    getCheckedOutRecords : function() {\r\n      jUtility.getJSON({\r\n        url : '/checkedout/_' + jApp.opts().model,\r\n        success : jUtility.callback.getCheckedOutRecords\r\n      });\r\n    }, // end fn\r\n\r\n    /**\r\n     * Set initial parameters\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setInitParams : function() {\r\n      var ag = jApp.aG();\r\n\r\n      /**\r\n       * Placeholders\r\n       */\r\n      ag = $.extend( ag, {\r\n        action : 'new',\r\n        store : $.jStorage,\r\n        currentRow : {},\r\n        permissions : {},\r\n        dataGrid : {\r\n\r\n          // pagination parameters\r\n          pagination : {\r\n            totalPages : -1,\r\n            rowsPerPage : $.jStorage.get('pref_rowsPerPage',ag.options.rowsPerPage)\r\n          },\r\n\r\n          // ajax requests\r\n          requests : [],\r\n\r\n          // request options\r\n          requestOptions : {\r\n            url : ag.options.url,\r\n            data : {\r\n              filter : ag.options.filter,\r\n              filterMine : 0\r\n            }\r\n          },\r\n\r\n          // intervals\r\n          intervals : {},\r\n\r\n          // timeouts\r\n          timeouts : {},\r\n\r\n          // grid data\r\n          data : {},\r\n\r\n          // data delta (i.e. any differences in the data)\r\n          delta : {},\r\n        }, // end dataGrid\r\n\r\n        DOM : {\r\n          $grid : false,\r\n          $currentRow : false,\r\n          $tblMenu : false,\r\n          $rowMenu : $('<div/>', { class : 'btn-group btn-group-sm rowMenu', style : 'position:relative !important' }),\r\n        },\r\n\r\n        forms : {},\r\n        linkTables : [],\r\n        temp : {},\r\n\r\n      });\r\n\r\n      jApp.log('3.1 Initial Params Set')\r\n    }, // end fn\r\n\r\n    /**\r\n     * Get checked items\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     *\r\n     *  $cid = self.DOM.$grid.find('.chk_cid:checked').map( function(i,elm) {\r\n       return $(elm).closest('.table-row').attr('data-identifier');\r\n     }).get(); jUtility.withSelectedAction(action,callback, $cid);\r\n     */\r\n    getCheckedItems : function( includeHidden ) {\r\n      var selector = (!!includeHidden) ? '.chk_cid:checked' : '.chk_cid:checked:visible';\r\n\r\n      return $('.table-grid').find( selector ).map( function(i, elm) {\r\n        return $(elm).closest('.table-row').attr('data-identifier');\r\n      }).get();\r\n\r\n    }, // end fn\r\n\r\n    /**\r\n     * Are any invisible items checked\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    numInvisibleItemsChecked : function() {\r\n      return jApp.tbl().find('.chk_cid:checked:not(:visible)').length;\r\n    }, // end fn\r\n\r\n    /**\r\n     * Determine if invisible checked items\r\n     *  should be included in the operation\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    confirmInvisibleCheckedItems : function(action, callback) {\r\n      bootbox.dialog({\r\n          message: \"There are  \" + jUtility.numInvisibleItemsChecked() + \" items which are checked and are currently not displayed. Include hidden items in the operation?\",\r\n          title: \"Include Hidden Checked Items?\",\r\n          buttons: {\r\n            yes: { label: \"Include Hidden Items\", className: \"btn-primary\", callback: function() { return jUtility.withSelectedAction(action,callback,true); } },\r\n            no:  { label: \"Do Not Include Hidden Items\", className: \"btn-warning\", callback: function() { return jUtility.withSelectedAction(action,callback,false); } },\r\n            cancel : { label : \"Cancel Operation\", className : \"btn-danger\", callback: function() { dialog.modal('hide') } }\r\n          }\r\n        });\r\n\r\n    }, // end fn\r\n\r\n    /**\r\n     * Initialize the grid template\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    initializeTemplate : function() {\r\n      jUtility.DOM.emptyPageWrapper();\r\n      jApp.log('5.1 Page Wrapper Emptied')\r\n      jUtility.DOM.initGrid();\r\n      jApp.log('5.2 Grid Initialized')\r\n    },\r\n\r\n    /**\r\n     * Setup grid intervals\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    setupIntervals : function() {\r\n      if ( jUtility.isAutoUpdate() ) {\r\n        jUtility.setCountdownInterval();\r\n\r\n        if ( jUtility.isCheckout() ) {\r\n          jUtility.setGetCheckedOutRecordsInterval();\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Build all grid menus\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    buildMenus : function() {\r\n      jUtility.DOM.clearMenus();\r\n\r\n      //jUtility.setupVisibleColumnsMenu();\r\n      jUtility.DOM.buildBtnMenu( jApp.opts().tableBtns, jApp.aG().DOM.$tblMenu, true );\r\n      jUtility.DOM.buildBtnMenu( jApp.opts().rowBtns, jApp.aG().DOM.$rowMenu, false);\r\n      //jUtility.DOM.buildLnkMenu( jApp.opts().withSelectedBtns, jApp.aG().DOM.$withSelectedMenu );\r\n\r\n      jUtility.DOM.attachRowMenu();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Build all grid forms\r\n     * @method function\r\n     * @return {[type]} [description]\r\n     */\r\n    buildForms : function() {\r\n      jUtility.loadFormDefinitions();\r\n\r\n      _.each( jApp.opts().formDefs, function( o, key ) {\r\n        jUtility.DOM.buildForm( o, key );\r\n      });\r\n\r\n    },\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   linkTables\r\n     *\r\n     *  iterates through the linktable\r\n     *  definitions in the options and\r\n     *  adds the appropriate elements to the\r\n     *  forms\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    linkTables : function() {\r\n      var oLT;\r\n      _.each( jApp.opts().linkTables, function(o,key) {\r\n        o.callback = jUtility.callback.linkTables;\r\n        oLT = new jLinkTable( o );\r\n      });\r\n    }, // end fn\r\n\r\n    /**\r\n     * Sets up the countdown that displays\r\n     *  the time remaining until the next\r\n     *  refresh\r\n     * @return {[type]} [description]\r\n     */\r\n    countdown : function( ) {\r\n      if ( !jUtility.isAutoUpdate() ) {\r\n        return false;\r\n      }\r\n\r\n      jUtility.clearCountdownInterval();\r\n      jUtility.initCountdown();\r\n      jUtility.setCountdownInterval();\r\n    }, // end fn\r\n\r\n    /**\r\n     * Update all the grids currently on the page\r\n     * @return {[type]} [description]\r\n     */\r\n    updateAll : function() {\r\n      jUtility.getGridData();\r\n    }, //end fn\r\n\r\n    /**\r\n     * get the grid data\r\n     * @method function\r\n     * @param  {[type]} preload [description]\r\n     * @return {[type]}         [description]\r\n     */\r\n    getGridData : function( preload ) {\r\n      // show the preload if needed\r\n      if (!!preload) {\r\n        jUtility.DOM.togglePreloader();\r\n        jUtility.setupIntervals();\r\n      }\r\n\r\n      jApp.log('6.1 Starting Countdown timer')\r\n      // start the countdown timer\r\n      jUtility.countdown();\r\n\r\n      // kill the pending request if it's still going\r\n      jUtility.killPendingRequest('gridData');\r\n\r\n      // use cached copy, if available\r\n      if ( jUtility.isDataCacheAvailable() ) {\r\n        jApp.log('6.2 Updating grid from cache')\r\n        setTimeout( jUtility.updateGridFromCache(), 100);\r\n      } else {\r\n        jApp.log('6.2 Executing data request')\r\n        jUtility.executeGridDataRequest();\r\n      }\r\n    }, // end fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   oCurrentForm\r\n     *\r\n     *  returns the currently active form\r\n     *  or false if the current action is\r\n     *  a non-standard action.\r\n     *\r\n     *  @return jForm (obj) || false\r\n     *\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    oCurrentForm : function() {\r\n      var key;\r\n\r\n      if (!! (key = _.findKey( jApp.aG().forms, function(o, key) {\r\n        if (key.indexOf('o') !== 0) return false;\r\n        return key.toLowerCase().indexOf( jApp.aG().action.toString().toLowerCase() ) !== -1;\r\n      }) )) {\r\n        return jApp.aG().forms[key];\r\n      } else {\r\n        console.warn( 'There is no valid form associated with the current action' );\r\n        return false;\r\n      }\r\n    },\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   $currentForm\r\n     *\r\n     *  returns the currently active form\r\n     *  jQuery handle or false if the current\r\n     *  action is a non-standard action.\r\n     *\r\n     *  @return jQuery (obj) || false\r\n     *\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    $currentForm : function() {\r\n      try {\r\n        return jUtility.oCurrentForm().$()\r\n      } catch(e) {\r\n        console.warn('No current form object found');\r\n        return false\r\n      }\r\n    },\r\n\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   $currentFormWrapper\r\n     *\r\n     *  returns the currently active form\r\n     *  wrapper jQuery handle or false\r\n     *  if the current action is a non-\r\n     *  standard action.\r\n     *\r\n     *  @return jQuery (obj) || false\r\n     *\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    $currentFormWrapper : function() {\r\n      try {\r\n        return jUtility.$currentForm().closest('.div-form-panel-wrapper');\r\n      } catch(e) {\r\n        console.warn('No current form wrapper found');\r\n        return false;\r\n      }\r\n    },\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   bind\r\n     *\r\n     *  binds event handlers to the various\r\n     *  DOM elements.\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    bind : function() {\r\n      jUtility.setupBootpag();\r\n      jUtility.setupSortButtons();\r\n      jUtility.turnOffOverlays();\r\n      jUtility.loadBindings();\r\n      jUtility.setupHeaderFilters();\r\n      jUtility.processGridBindings();\r\n      jUtility.processFormBindings();\r\n    }, // end bind fn\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n     *   setupFormContainer\r\n     *\r\n     *  When a rowMenu button is clicked,\r\n     *  this function sets up the\r\n     *  corresponding div\r\n     **  **  **  **  **  **  **  **  **  **/\r\n    setupFormContainer : function() {\r\n      jUtility.DOM.overlay(2,'on');\r\n      jApp.aG().hideOverlayOnError = false;\r\n      jUtility.resetCurrentForm();\r\n      jUtility.maximizeCurrentForm();\r\n      jUtility.setCurrentFormFocus();\r\n      jUtility.formBootup();\r\n      jUtility.getCurrentFormRowData();\r\n    }, // end fn\r\n\r\n\r\n    /**\r\n     * Messaging functions\r\n     * @type {Object}\r\n     */\r\n    msg : {\r\n\r\n\t\t\t/**\r\n\t\t\t * Clear all messages\r\n\t\t\t * @method function\r\n\t\t\t * @return {[type]} [description]\r\n\t\t\t */\r\n\t\t\tclear : function() {\r\n\t\t\t\t\t$.noty.closeAll();\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Show a message\r\n\t\t\t * @method function\r\n\t\t\t * @param  {[type]} message [description]\r\n\t\t\t * @param  {[type]} type    [description]\r\n\t\t\t * @return {[type]}         [description]\r\n\t\t\t */\r\n\t\t\tshow : function(message, type) {\r\n\t\t\t\tvar n = noty({\r\n\t\t\t\t\tlayout: 'bottomLeft',\r\n\t\t\t\t\ttext : message,\r\n\t\t\t\t\ttype : type || 'info',\r\n\t\t\t\t\tdismissQueue: true,\r\n\t\t\t\t\ttimeout : 3000\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Display a success message\r\n\t\t\t * @method function\r\n\t\t\t * @param  {[type]} message [description]\r\n\t\t\t * @return {[type]}         [description]\r\n\t\t\t */\r\n\t\t\tsuccess : function(message) {\r\n\t\t\t\tjUtility.msg.show(message,'success');\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Display a error message\r\n\t\t\t * @method function\r\n\t\t\t * @param  {[type]} message [description]\r\n\t\t\t * @return {[type]}         [description]\r\n\t\t\t */\r\n\t\t\terror : function(message) {\r\n\t\t\t\tjUtility.msg.show(message,'error');\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Display a warning message\r\n\t\t\t * @method function\r\n\t\t\t * @param  {[type]} message [description]\r\n\t\t\t * @return {[type]}         [description]\r\n\t\t\t */\r\n\t\t\twarning : function(message) {\r\n\t\t\t\tjUtility.msg.show(message,'warning');\r\n\t\t\t}, // end fn\r\n\r\n\t\t},\r\n\r\n    /**\r\n     * DOM Manipulation Functions\r\n     * @type {Object}\r\n     */\r\n    DOM : {\r\n\r\n      /**\r\n       * Hide header filters\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      hideHeaderFilters : function() {\r\n        jApp.aG().$().find('.table-head .tfilters').hide();\r\n        $('#btn_toggle_header_filters').removeClass('active');\r\n      }, // end fn\r\n\r\n      /**\r\n       * Show header filters\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      showHeaderFilters : function() {\r\n        jUtility.DOM.headerFilterDeleteIcons();\r\n        jApp.aG().$().find('.table-head .tfilters').show();\r\n        $('#btn_toggle_header_filters').addClass('active');\r\n      }, // end fn\r\n\r\n      /**\r\n       * Updates the grid when there is\r\n       * or is not any data\r\n       * @method function\r\n       * @return {[type]}              [description]\r\n       */\r\n\r\n      dataEmptyHandler : function() {\r\n        $('.table-cell.no-data').remove();\r\n        $('<div/>', { class : 'table-cell no-data'}).html('<div class=\"alert alert-warning\"> <i class=\"fa fa-fw fa-warning\"></i> I did not find anything matching your query.</div>').appendTo( jApp.tbl().find('#tbl_grid_body') );\r\n        jUtility.DOM.updateColWidths();\r\n      }, // end fn\r\n\r\n      /**\r\n       * Updates the grid when is or is not errors\r\n       * in the response\r\n       * @method function\r\n       * @param  {Boolean} isDataEmpty [description]\r\n       * @return {[type]}              [description]\r\n       */\r\n      dataErrorHandler : function() {\r\n        $('.table-cell.no-data').remove();\r\n        $('<div/>', { class : 'table-cell no-data'}).html('<div class=\"alert alert-danger\"> <i class=\"fa fa-fw fa-warning\"></i> There was an error retrieving the data.</div>').appendTo( jApp.tbl().find('#tbl_grid_body') );\r\n        jUtility.DOM.updateColWidths();\r\n      }, // end fn\r\n\r\n\r\n      /**\r\n       * Update the header title\r\n       * @param  {[type]} newTitle [description]\r\n       * @return {[type]}          [description]\r\n       */\r\n      updateHeaderTitle : function(newTitle) {\r\n        jApp.opts().gridHeader.headerTitle = newTitle;\r\n        jApp.tbl().find('span.header-title').html(newTitle);\r\n      }, // end fn\r\n\r\n      /**\r\n       * Toggle column visibility\r\n       * @param  {[type]} elm [description]\r\n       * @return {[type]}     [description]\r\n       */\r\n      toggleColumnVisibility : function( elm ) {\r\n        var col = elm.data('column'),\r\n          i = +elm.closest('li').index()+2;\r\n\r\n        if (elm.find('i').hasClass('fa-check-square-o')) {\r\n          elm.find('i').removeClass('fa-check-square-o').addClass('fa-square-o');\r\n          jApp.tbl().find('.table-head .table-row:not(:first-child) .table-header:nth-child(' + i +'), .table-body .table-cell:nth-child(' + i +')').hide();\r\n        } else {\r\n          elm.find('i').addClass('fa-check-square-o').removeClass('fa-square-o');\r\n          jApp.tbl().find('.table-head .table-row:not(:first-child) .table-header:nth-child(' + i +'), .table-body .table-cell:nth-child(' + i +')').show();\r\n        }\r\n\r\n        jUtility.DOM.updateColWidths();\r\n\r\n      }, //end fn\r\n\r\n      /**  **  **  **  **  **  **  **  **  **\r\n       *   rowsPerPage\r\n       *\r\n       *  @rowsPerPage (int) hide the preloader\r\n       *\r\n       *  show/hide the preload animation\r\n       **  **  **  **  **  **  **  **  **  **/\r\n      rowsPerPage : function( rowsPerPage ) {\r\n        if ( isNaN(rowsPerPage) ) return false;\r\n\r\n        jApp.aG().store.set('pref_rowsPerPage',rowsPerPage);\r\n        jApp.opts().pageNum = 1;\r\n        jApp.aG().dataGrid.pagination.rowsPerPage = Math.floor(rowsPerPage);\r\n        jUtility.updatePagination();\r\n        jUtility.DOM.page(1);\r\n        jUtility.DOM.updateColWidths();\r\n      }, // end fn\r\n\r\n      /**  **  **  **  **  **  **  **  **  **\r\n       *   preload\r\n       *\r\n       *  @hide (bool) hide the preloader\r\n       *\r\n       *  show/hide the preload animation\r\n       **  **  **  **  **  **  **  **  **  **/\r\n      togglePreloader : function( hide ) {\r\n        if (typeof hide === 'undefined') { hide = false; }\r\n\r\n        if (!hide) {\r\n          jApp.tbl().css('background','url(\"/images/tbody-preload.gif\") no-repeat center 175px rgba(0,0,0,0.15)')\r\n           .find('[name=RowsPerPage],[name=q]').prop('disabled',true).end()\r\n           .find('.table-body').css('filter','blur(1px) grayscale(100%)').css('-webkit-filter','blur(2px) grayscale(100%)') .css('-moz-filter','blur(2px) grayscale(100%)')\r\n           //.find('.table-cell, .table-header').css('border','1px solid transparent').css('background','none');\r\n        } else {\r\n          jApp.tbl().css('background','')\r\n           .find('[name=RowsPerPage],[name=q]').prop('disabled',false).end()\r\n           .find('.table-body').css('filter','').css('-webkit-filter','').css('-moz-filter','')\r\n           //.find('.table-cell, .table-header').css('border','').css('background','');\r\n        }\r\n      }, // end fn\r\n\r\n      /**  **  **  **  **  **  **  **  **  **\r\n       *   page\r\n       *\r\n       *  @pageNum (int) the new page number\r\n       *  \t\t\t\tto display\r\n       *\r\n       *  jumps to the desired page number\r\n       **  **  **  **  **  **  **  **  **  **/\r\n      page : function( pageNum ) {\r\n        var first, last;\r\n\r\n        jUtility.DOM.togglePreloader();\r\n\r\n        if (isNaN(pageNum)) return false;\r\n        pageNum = Math.floor(pageNum);\r\n\r\n        jApp.opts().pageNum = pageNum;\r\n        first = +( (pageNum-1) * jApp.aG().dataGrid.pagination.rowsPerPage );\r\n        last  = +(first+jApp.aG().dataGrid.pagination.rowsPerPage);\r\n        jApp.tbl().find('.table-body .table-row').hide().slice(first,last).show();\r\n\r\n        // set col widths\r\n        setTimeout(\tjUtility.DOM.updateColWidths, 100 );\r\n      }, // end fn\r\n\r\n      /**  **  **  **  **  **  **  **  **  **\r\n       *   updatePanelHeader\r\n       *\r\n       *  @text\t(string) text to display\r\n       *\r\n       *  updates the text display in the\r\n       *  header of the form wrapper\r\n       *\r\n       **  **  **  **  **  **  **  **  **  **/\r\n      updatePanelHeader : function(text) {\r\n        jUtility.$currentFormWrapper().find('.spn_editFriendlyName').html( text );\r\n      }, // end fn\r\n\r\n      /**\r\n       * Remove rows from the DOM that do not have corresponding data\r\n       * @param  {[type]} all [description]\r\n       * @return {[type]}     [description]\r\n       */\r\n      removeRows : function(all) {\r\n        var identifiers = _.pluck(jApp.aG().dataGrid.data, jApp.opts().pkey);\r\n\r\n        if (typeof all !== 'undefined' && all) {\r\n          jApp.tbl().find('.table-body .table-row').remove();\r\n        } else {\r\n          //--jApp.aG().DOM.$rowMenu.detach();\r\n\r\n          jApp.tbl().find('.table-row[data-identifier]')\r\n             .filter( function(i, row) {\r\n                return _.indexOf( identifiers, $(row).attr('data-identifier') ) === -1;\r\n             }\r\n          ).remove();\r\n        }\r\n      }, // end fn\r\n\r\n      /**\r\n       * Apply the header filters\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      applyHeaderFilters : function() {\r\n        var matchedRows = [];\r\n\r\n        jApp.log('Applying Header Filters');\r\n\r\n        if ( !jUtility.areHeaderFiltersNonempty() ) {\r\n          return jUtility.DOM.removeHeaderFilters();\r\n        }\r\n\r\n        jUtility.DOM.hidePaginationControls();\r\n\r\n        jApp.log('Getting matched rows');\r\n        matchedRows = jUtility.getHeaderFilterMatchedRows();\r\n\r\n        jUtility.setVisibleRows( matchedRows );\r\n\r\n        jApp.tbl().find('.filter-showing').html(\r\n             jUtility.render( jApp.aG().html.tmpFilterShowing,\r\n               {\r\n                 'totalVis' : matchedRows.length,\r\n                 'totalRows' : jApp.tbl().find('.table-body .table-row').length\r\n               }\r\n              )\r\n           );\r\n\r\n        // update column widths\r\n        jUtility.DOM.updateColWidths();\r\n\r\n      }, // end fn\r\n\r\n      /**\r\n       * Remove the header filters\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      removeHeaderFilters : function() {\r\n        if ( jUtility.isPagination() ) {\r\n          jUtility.DOM.showPaginationControls();\r\n          jUtility.DOM.updateFilterText('');\r\n          jUtility.DOM.page(jApp.opts().pageNum);\r\n        }\r\n      }, // end fn\r\n\r\n      /**\r\n       * Update the Showing x/x filter text\r\n       * @method function\r\n       * @param  {[type]} text [description]\r\n       * @return {[type]}      [description]\r\n       */\r\n      updateFilterText : function(text) {\r\n        jApp.tbl().find('.filter-showing').html( text );\r\n      }, // end fn\r\n\r\n      /**\r\n       * Show the pagination controls\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      showPaginationControls : function() {\r\n        jApp.tbl().find('.divRowsPerPage, .paging').show();\r\n      }, // end fn\r\n\r\n      /**\r\n       * Hide the pagination controls\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      hidePaginationControls : function() {\r\n        jApp.tbl().find('.divRowsPerPage, .paging').hide();\r\n      }, // end fn\r\n\r\n      /**\r\n       * Header Filter Delete Icons\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      headerFilterDeleteIcons : function() {\r\n        if ( !$('.table-header .deleteicon').length ) {\r\n          jApp.log('Adding header filter delete icons');\r\n          $('.header-filter').after(\r\n            $('<span/>', {'class':'deleteicon','style':'display:none'})\r\n            .html(\r\n              jUtility.render( jApp.aG().html.tmpClearHeaderFilterBtn )\r\n            )\r\n          )\r\n        } else {\r\n          jApp.log('Delete icons already added');\r\n        }\r\n      }, // end fn\r\n\r\n      /**  **  **  **  **  **  **  **  **  **\r\n       *   sortByCol\r\n       *\r\n       *  @colNum (int) the 1-indexed html\r\n       *  \t\t\tcolumn to sort by\r\n       *\r\n       *  @desc \t(bool) sort descending\r\n       *\r\n       *  sorts the table rows in the DOM\r\n       *  according the the input column\r\n       *  and direction (asc default)\r\n       **  **  **  **  **  **  **  **  **  **/\r\n      sortByCol : function( colNum, desc ) {\r\n        var $col;\r\n\r\n        if (typeof colNum === 'undefined' && typeof jApp.aG().temp.sortOptions === 'undefined') {\r\n          return false;\r\n        }\r\n\r\n        if (typeof colNum === 'undefined') {\r\n          colNum = jApp.aG().temp.sortOptions.colNum;\r\n          desc = jApp.aG().temp.sortOptions.desc;\r\n        } else {\r\n            jApp.aG().temp.sortOptions = { colNum : colNum, desc : desc };\r\n        }\r\n\r\n\r\n        //col\r\n        $col = jApp.tbl().find('.table-body .table-row .table-cell:nth-child(' + colNum + ')')\r\n          .map( function(i,elm) {\r\n            return [[\r\n                  $(elm).text().toLowerCase(),\r\n                  $(elm).parent()\r\n                ]];\r\n          })\r\n          .sort(function(a,b) {\r\n\r\n            if (jQuery.isNumeric(a[0]) && jQuery.isNumeric(b[0])) {\r\n              return a[0]-b[0];\r\n            }\r\n\r\n            if (a[0] > b[0]) {\r\n              return 1;\r\n            }\r\n\r\n            if (a[0] < b[0]) {\r\n              return -1;\r\n            }\r\n\r\n            // a must be equal to b\r\n            return 0;\r\n          }\r\n        );\r\n\r\n        // iterate through col\r\n        $.each($col, function(i,elm){\r\n          var $e = $(elm[1]);\r\n\r\n          // detach the row from the DOM\r\n          $e.detach();\r\n\r\n          // attach the row in the correct order\r\n          (!desc) ?\r\n            jApp.tbl().find('.table-body').append( $e ) :\r\n            jApp.tbl().find('.table-body').prepend( $e );\r\n        });\r\n\r\n        // go to the appropriate page to refresh the view\r\n        jUtility.DOM.page( jApp.opts().pageNum );\r\n\r\n        // apply header filters\r\n        jUtility.DOM.applyHeaderFilters()\r\n      }, // end fn\r\n\r\n      /**\r\n       * Hide or show the activity preloader\r\n       * @method function\r\n       * @param  {[type]} action [description]\r\n       * @return {[type]}        [description]\r\n       */\r\n      activityPreloader : function( action ) {\r\n        if (action !== 'hide') {\r\n          $('.ajax-activity-preloader').show();\r\n        } else {\r\n          $('.ajax-activity-preloader').hide();\r\n        }\r\n      }, //end fn\r\n\r\n      /**\r\n       * Empty the page wrapper div\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      emptyPageWrapper : function() {\r\n        $('#page-wrapper').empty();\r\n      }, //end fn\r\n\r\n      /**\r\n       * Toggle header filters\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      toggleHeaderFilters : function() {\r\n        jApp.log('headerFilters toggled');\r\n\r\n        jApp.opts().toggles.headerFiltersDisplay =\r\n          !jApp.opts().toggles.headerFiltersDisplay;\r\n\r\n        if ( $('.tfilters:visible').length ) {\r\n          jUtility.DOM.hideHeaderFilters();\r\n        } else {\r\n          jUtility.DOM.showHeaderFilters();\r\n        }\r\n\r\n        jUtility.DOM.updateColWidths();\r\n      }, //end fn\r\n\r\n      /**\r\n       * Update the grid position\r\n       * @return {[type]} [description]\r\n       */\r\n      updateGridPosition : function() {\r\n        var p = jUtility.calculateGridPosition();\r\n        if (!p) return false;\r\n\r\n        $('.grid-panel-body')\r\n          .css({ 'marginTop' : p.marginTop })\r\n          .find('.table')\r\n            .css({ 'height' : p.height });\r\n\r\n        $('.table-grid').perfectScrollbar('update');\r\n      }, // end fn\r\n\r\n      /**\r\n       * Handles the page wrapper after scrolling\r\n       * @return {[type]} [description]\r\n       */\r\n      pageWrapperScrollHandler : function() {\r\n\r\n        var pw = $('#page-wrapper'),\r\n            isScrolled = pw.hasClass('scrolled'),\r\n            offsetTop = $('.table-body').offset().top,\r\n            lowerBound = 150,\r\n            upperBound = 180;\r\n\r\n        if ( !isScrolled && offsetTop < lowerBound ) {\r\n          pw.addClass('scrolled');\r\n          jUtility.DOM.updateGridPosition();\r\n        } else if ( isScrolled && offsetTop > upperBound  ) {\r\n          pw.removeClass('scrolled');\r\n          jUtility.DOM.updateGridPosition();\r\n        }\r\n\r\n      }, // end fn\r\n\r\n      /**\r\n       * Clear the column widths\r\n       * @return {[type]} [description]\r\n       */\r\n      clearColumnWidths : function() {\r\n        $('.grid-panel-body .table-row').find('.table-cell, .table-header').css('width','');\r\n      }, //end fn\r\n\r\n      /**\r\n       * Update column widths\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      updateColWidths : function() {\r\n        var headerRowIndex = 3,\r\n            bottomOffset = 0;\r\n\r\n        jUtility.DOM.updateGridPosition();\r\n        jUtility.setupSortButtons();\r\n\r\n        jUtility.DOM.clearColumnWidths();\r\n\r\n        // perfect scrollbar\r\n        $('.table-grid').perfectScrollbar('update');\r\n\r\n        jApp.opts().maxColWidth =  +350/1920 * +$(window).innerWidth();\r\n\r\n        //visible columns\r\n        var visCols = +$('.table-head .table-row.colHeaders').find('.table-header:visible').length-1;\r\n\r\n        for(var ii=1; ii <= visCols; ii++ ) {\r\n\r\n          var colWidth = Math.max.apply( Math, $('.grid-panel-body .table-row').map(function(i) {\r\n            return $(this).find('.table-cell:visible,.table-header-text:visible').eq(ii).innerWidth() } ).get()\r\n          );\r\n\r\n          if ( +colWidth > jApp.opts().maxColWidth && ii < visCols ) {\r\n            colWidth = jApp.opts().maxColWidth;\r\n          }\r\n\r\n          if ( ii == visCols ) {\r\n            colWidth = +$(window).innerWidth()-$('.table-head .table-row.colHeaders').find('.table-header:visible').slice(0,-1)\r\n                            .map( function(i) { return $(this).innerWidth() } ).get().reduce( function(p,c) { return p+c } )-40;\r\n          }\r\n\r\n          var nindex = +ii+1;\r\n\r\n          // set widths of each cell\r\n          $(  '.grid-panel-body .table-row:not(.tr-no-data) .table-cell:visible:nth-child(' + nindex + '),' +\r\n            '.grid-panel-body .table-row:not(.tr-no-data) .table-header:nth-child(' + nindex + ')').css('width',+colWidth+14);\r\n        }\r\n\r\n        //hide preload mask\r\n        jUtility.DOM.togglePreloader(true);\r\n      }, // end fn\r\n\r\n      /**  **  **  **  **  **  **  **  **  **\r\n       *   moveRowMenu\r\n       *\r\n       *  @tr - target table row element\r\n       *\r\n       *  Moves the row menu to the target\r\n       **  **  **  **  **  **  **  **  **  **/\r\n      moveRowMenu : function($tr) {\r\n        // jApp.aG().DOM.$rowMenu.detach().appendTo( $tr.find('.table-cell .rowMenu-container').eq(0) );\r\n      }, // end fn\r\n\r\n      /**\r\n       * Attach Row Menu To The DOM\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      attachRowMenu : function() {\r\n        $('.table-rowMenu-row').empty().append( jApp.aG().DOM.$rowMenu.wrap('<div class=\"table-header\"></div>').parent() );\r\n      }, //end fn\r\n\r\n      /**\r\n       * Update the row menu\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      updateRowMenu : function(num_checked) {\r\n        switch( num_checked ) {\r\n          case 0 :\r\n            jUtility.DOM.toggleRowMenu(false);\r\n\r\n          break;\r\n\r\n          case 1 :\r\n            jUtility.DOM.toggleRowMenu(true);\r\n            jUtility.DOM.toggleRowMenuItems( false );\r\n          break;\r\n\r\n          default :\r\n            jUtility.DOM.toggleRowMenu(true);\r\n            jUtility.DOM.toggleRowMenuItems( true );\r\n          break;\r\n        }\r\n      }, // end fn\r\n\r\n      /**\r\n       * Toggle Row Menu Items\r\n       * @method function\r\n       * @param  {[type]} hideNonMultiple [description]\r\n       * @return {[type]}                 [description]\r\n       */\r\n      toggleRowMenuItems : function( disableNonMultiple ) {\r\n        if (disableNonMultiple) {\r\n          $( '.table-row.table-rowMenu-row .btn[data-multiple=false]').addClass('disabled').prop('disabled',true);\r\n        } else {\r\n          var p = jApp.aG().permissions;\r\n          $( '.table-row.table-rowMenu-row .btn').each( function() {\r\n            if ( $(this).attr('data-permission') == null ||  !!p[ $(this).attr('data-permission')  ] ) {\r\n                $(this).removeClass('disabled').prop('disabled',false);\r\n            }\r\n          });\r\n        }\r\n      }, //end fn\r\n\r\n      /**\r\n       * Toggle Row Menu visibility\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      toggleRowMenu : function( on ) {\r\n        if (on != null) {\r\n          $('.table-row.table-rowMenu-row').toggle(on);\r\n          $('.table-row.table-menu-row').toggle(!on);\r\n        } else {\r\n          $('.table-row.table-rowMenu-row').toggle();\r\n          $('.table-row.table-menu-row').toggle();\r\n        }\r\n        jUtility.DOM.updateColWidths();\r\n      }, // end fn\r\n\r\n\r\n      /**\r\n       * Reset row menu to non-expanded state\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      resetRowMenu : function() {\r\n        //$('.btn-showMenu').removeClass('rotate');\r\n        //jApp.aG().DOM.$rowMenu.removeClass('expand');\r\n      }, // end fn\r\n\r\n      /**\r\n       * Initialize grid\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      initGrid : function() {\r\n        var id = jApp.opts().table + '_' + Date.now();\r\n\r\n        jApp.aG().DOM.$grid = $('<div/>' , { id : id }).html(\r\n          jUtility.render(\r\n            jApp.aG().html.tmpMainGridBody , jApp.opts().gridHeader\r\n          )\r\n        ).find('select#RowsPerPage')\r\n          .val( jApp.aG().dataGrid.pagination.rowsPerPage )\r\n          .end()\r\n        .appendTo('#page-wrapper');\r\n\r\n        jApp.aG().DOM.$tblMenu = jApp.aG().DOM.$grid.find('.table-btn-group');\r\n\r\n        if ( !jApp.opts().gridHeader.helpText ) {\r\n          jApp.tbl().find('.helpText').hide();\r\n        }\r\n\r\n      }, // end fn\r\n\r\n      /**\r\n       * iterates through changed data and updates the DOM\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      updateGrid : function() {\r\n        // init vars\r\n        var appendTR = false,\r\n          appendTD = false;\r\n\r\n        if (!!jApp.aG().dataGrid.delta[0] && jApp.aG().dataGrid.delta[0][jApp.opts().pkey] === 'NoData') {\r\n          var tr = $('<div/>', { class : 'table-row tr-no-data'} ).append( $('<div/>', { class : 'table-cell'} ).html('No Data') );\r\n\r\n          jApp.tbl().find('.table-body').empty().append( tr );\r\n          return false;\r\n        }\r\n\r\n        // iterate through the changed data\r\n        $.each( jApp.aG().dataGrid.delta, function(i,oRow) {\r\n\r\n          jApp.tbl().find('.table-body .tr-no-data').remove();\r\n\r\n          // save the current row.\r\n          jApp.aG().currentRow = jApp.aG().dataGrid.data[i];\r\n\r\n          // find row in the table if it exists\r\n          var\ttr = jApp.tbl().find('.table-row[data-identifier=\"' + oRow[jApp.opts().pkey] + '\"]');\r\n\r\n          // try the json key if you can't find the row by the pkey\r\n          if (!tr.length) tr = jApp.tbl().find('.table-row[data-jsonkey=' + i + ']');\r\n\r\n          // create the row if it does not exist\r\n          if (!tr.length) {\r\n            tr = $('<div/>', { 'class' : 'table-row', 'data-identifier' : oRow[jApp.opts().pkey], 'data-jsonkey' : i } );\r\n            appendTR = true;\r\n\r\n            if (jUtility.isEditable()) {\r\n\r\n\r\n              var td_chk = $('<div/>', { 'class' : 'table-cell', \"nowrap\" : \"nowrap\",  \"style\" : \"position:relative;\"} );\r\n              //var td_chk = $('<div/>', { 'class' : 'table-cell', \"nowrap\" : \"nowrap\" } );\r\n              if (!!jApp.opts().cellAtts['*']) {\r\n                $.each( jApp.opts().cellAtts['*'], function(at, fn) {\r\n                  td_chk.attr( at,fn() );\r\n                });\r\n              }\r\n\r\n              var collapseMenu = '';\r\n\r\n              var\ttdCheck = (!!oRow[jApp.opts().pkey]) ? '<input type=\"checkbox\" class=\"chk_cid\" name=\"cid[]\" />' : '';\r\n\r\n              var lblCheck = '<label class=\"btn btn-default pull-right lbl-td-check\" style=\"margin-left:20px;\"> ' + tdCheck + '</label>';\r\n\r\n              td_chk.html( \tcollapseMenu +\r\n                        lblCheck +\r\n                      '<div class=\"rowMenu-container\"></div> \\\r\n                      </div>&nbsp;'\r\n              );\r\n              tr.append(td_chk);\r\n            }\r\n\r\n          } else { // update the row data- attributes\r\n            tr.attr('data-identifier',oRow[jApp.opts().pkey]).attr('data-jsonkey',i);\r\n\r\n            var td_chk = tr.find('.table-cell').eq(0);\r\n            // update the attributes on the first cell\r\n            if (!!jApp.opts().cellAtts['*']) {\r\n              $.each( jApp.opts().cellAtts['*'], function(at, fn) {\r\n                td_chk.attr( at,fn() );\r\n              });\r\n            }\r\n          }\r\n\r\n\r\n\r\n          // iterate through the columns\r\n          //$.each( jApp.aG().currentRow, function(key, value) {\r\n          $.each( jApp.opts().columns, function(i, key) {\r\n\r\n            // get the value of the current key\r\n            var value = jApp.aG().currentRow[key];\r\n\r\n            // determine if the column is hidden\r\n            if ( _.indexOf(jApp.opts().hidCols, key) !== -1) {\r\n              return false;\r\n            }\r\n\r\n            // find the cell if it exists\r\n            var td = tr.find('.table-cell[data-identifier=\"' + key + '\"]');\r\n\r\n            // create the cell if needed\r\n            if (!td.length) {\r\n              td = $('<div/>', { 'class' : 'table-cell', 'data-identifier' : key} );\r\n              appendTD = true;\r\n            }\r\n\r\n            // set td attributes\r\n            if (!!jApp.opts().cellAtts['*']) {\r\n              $.each( jApp.opts().cellAtts['*'], function(at, fn) {\r\n                td.attr( at,fn() );\r\n              });\r\n            }\r\n\r\n            if(!!jApp.opts().cellAtts[key]) {\r\n              $.each( jApp.opts().cellAtts[key], function(at, fn) {\r\n                td.attr( at,fn() );\r\n              });\r\n            }\r\n\r\n            // prepare the value\r\n            value = jUtility.prepareValue(value,key);\r\n\r\n            if ( td.html().trim() !== value.trim() ) {\r\n              // set the cell value\r\n              td\r\n               .html(value)\r\n               .addClass('changed')\r\n            }\r\n\r\n\r\n            // add the cell to the row if needed\r\n            if (appendTD) {\r\n              tr.append(td);\r\n            }\r\n\r\n          });// end each\r\n\r\n          // add the row if needed\r\n          if (appendTR) {\r\n            jApp.tbl().find('.table-body').append(tr);\r\n          }\r\n        }); // end each\r\n\r\n        // reset column widths\r\n        jUtility.DOM.updateColWidths();\r\n\r\n        // animate changed cells\r\n\r\n          // .stop()\r\n          // .css(\"background-color\", \"#FFFF9C\")\r\n          // .animate({ backgroundColor: 'transparent'}, 1500, function() { $(this).removeAttr('style');  } );\r\n\r\n\r\n        setTimeout( function() { jApp.tbl().find('.table-cell.changed').removeClass('changed') }, 2000 );\r\n\r\n\r\n        jUtility.countdown();\r\n        jUtility.DOM.page( jApp.opts().pageNum );\r\n\r\n        // deal with the row checkboxes\r\n        jApp.tbl().find('.table-row')\r\n          .filter(':not([data-identifier])')\r\n            .find('.lbl-td-check').remove() // remove the checkbox if there is no primary key for the row\r\n            .end()\r\n          .end()\r\n          .filter('[data-identifier]') // add the checkbox if there is a primary key for the row\r\n          .each(function(i,elm) {\r\n            if ( jUtility.isEditable() && $(elm).find('.lbl-td-check').length === 0 ) {\r\n              $('<label/>', { class : 'btn btn-default pull-right lbl-td-check', style : 'margin-left:20px' })\r\n                .append( $('<input/>', { type: 'checkbox', class : 'chk_cid', name : 'cid[]' } ))\r\n                .appendTo ( $(elm) );\r\n            }\r\n          });\r\n\r\n        jApp.tbl().find('.table-body .table-row, .table-head .table-row:last-child').each( function(i,elm) {\r\n          if ( $(elm).find('.table-cell,.table-header').length < 4 ) {\r\n            $('<div/>', {'class' : 'table-cell'}).appendTo( $(elm) );\r\n          }\r\n        });\r\n\r\n        jApp.tbl().find('.table-head .table-row:nth-child(2)').each( function(i,elm) {\r\n          if ( $(elm).find('.table-cell,.table-header').length < 3 ) {\r\n            $('<div/>', {'class' : 'table-cell'}).appendTo( $(elm) );\r\n          }\r\n        });\r\n\r\n        // process pagination\r\n        jUtility.updatePagination();\r\n\r\n\r\n      },\r\n\r\n      /**\r\n       * Clear the menus so they can be rebuilt\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      clearMenus : function() {\r\n        jApp.aG().DOM.$tblMenu.find( '.btn:not(.btn-toggle)' ).remove();\r\n        jApp.aG().DOM.$rowMenu.empty();\r\n        //jApp.aG().DOM.$withSelectedMenu.empty();\r\n      }, // end fn\r\n\r\n      /**\r\n       * Build a menu\r\n       * @method function\r\n       * @param  {obj} collection \tcollection of menu options to iterate over\r\n       * @param  {jQuery} target    DOM target for new buttons/links\r\n       * @param  {string} type \t\t\tbuttons | links\r\n       */\r\n      buildMenu : function(collection, target, type, order) {\r\n        var o, key, oo, kk, btn;\r\n\r\n        if (typeof type === 'undefined') { type = 'buttons'}\r\n\r\n        //build menu\r\n        _.each( collection, function(o, key) {\r\n          if (!!o.ignore) return false;\r\n          if ( jUtility.isButtonEnabled(key) ) {\r\n            if (key === 'custom') {\r\n              _.each( o, function( oo, kk ) {\r\n                if (!!oo.ignore) return false;\r\n\r\n                if ( jUtility.isPermission(oo) ) {\r\n                  jApp.log('Button enabled : ' + kk);\r\n                  delete oo.disabled;\r\n                } else {\r\n                  jApp.log('Button disabled : ' + kk);\r\n                  oo.disabled = true;\r\n                }\r\n\r\n                if (type == 'buttons') {\r\n                  jUtility.DOM.createMenuButton( oo ).appendTo( target );\r\n                } else {\r\n                  jUtility.DOM.createMenuLink( oo ).appendTo( target );\r\n                }\r\n              });\r\n            } else {\r\n\r\n                if ( jUtility.isPermission(o) ) {\r\n                  jApp.log('Button enabled : ' + key);\r\n                  delete o.disabled;\r\n                } else {\r\n                  jApp.log('Button disabled : ' + key);\r\n                  o.disabled = true;\r\n                }\r\n\r\n                //jApp.log(o);\r\n                if (type == 'buttons') {\r\n                  jUtility.DOM.createMenuButton( o ).clone().appendTo( target );\r\n                } else {\r\n                  jUtility.DOM.createMenuLink( o ).appendTo( target );\r\n                }\r\n              }\r\n            }\r\n          }\r\n        );\r\n\r\n        //sort buttons by data-order\r\n        if (!!order) {\r\n          var btns = target.find('.btn');\r\n\r\n          btns.detach().sort( function(a,b) {\r\n            var an = +a.getAttribute('data-order'),\r\n                bn = +b.getAttribute('data-order');\r\n\r\n            if (an > bn) return 1;\r\n            if (an < bn) return -1;\r\n            return 0;\r\n          }).appendTo(target);\r\n        }\r\n      }, //end fn\r\n\r\n      /**\r\n       * Build a button menu\r\n       * @method function\r\n       */\r\n      buildBtnMenu : function(collection, target, order) {\r\n        jUtility.DOM.buildMenu(collection, target, 'buttons', order);\r\n      }, //end fn\r\n\r\n      /**\r\n       * Build a link menu\r\n       * @method function\r\n       */\r\n      buildLnkMenu : function(collection, target, order) {\r\n        jUtility.DOM.buildMenu(collection, target, 'links', order);\r\n      }, // end fn\r\n\r\n      /**\r\n       * Helper function to create menu links\r\n       * @method function\r\n       * @param  {obj} o html parameters of the link\r\n       * @return {jQuery obj}\r\n       */\r\n      createMenuLink : function( o ) {\r\n        var $btn, $btn_a, $btn_choice, $ul;\r\n\r\n        $btn_choice = $('<a/>', { href : 'javascript:void(0)', 'data-permission' : (o['data-permission'] != null) ? o['data-permission'] : '' });\r\n\r\n        //add the icon\r\n        if (!!o.icon) {\r\n          $btn_choice.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + o.icon } ) );\r\n        }\r\n        // add the label\r\n        if (!!o.label) {\r\n          $btn_choice.append( $('<span/>').html(o.label) );\r\n        }\r\n\r\n        // disable/enable the button\r\n        if (o.disabled === true) {\r\n          $btn_choice.prop('disabled',true).addClass('disabled');\r\n        } else {\r\n          $btn_choice.prop('disabled',false).removeClass('disabled');\r\n        }\r\n\r\n        // add the click handler\r\n        if (!!o.fn) {\r\n          if (typeof o.fn === 'string') {\r\n            if (o.fn !== 'delete') {\r\n              $btn_choice.off('click.custom').on('click.custom', function() {\r\n              jApp.aG().withSelectedButton = $(this);\r\n              jUtility.withSelected( 'custom', jApp.aG().fn[o.fn] )\r\n              } );\r\n            } else {\r\n              $btn_choice.off('click.custom').on('click.custom', function() {\r\n              jApp.aG().withSelectedButton = $(this);\r\n              jUtility.withSelected( 'delete', null )\r\n              } );\r\n            }\r\n          } else if (typeof o.fn === 'function') {\r\n            $btn_choice.off('click.custom').on('click.custom', function() {\r\n            jApp.aG().withSelectedButton = $(this);\r\n            jUtility.withSelected( 'custom', o.fn )\r\n            } );\r\n          }\r\n        }\r\n\r\n        // add the html5 data\r\n        if (!!o.data) {\r\n          _.each( o.data, function(v,k) {\r\n            $btn_choice.attr('data-'+k,v);\r\n          });\r\n        }\r\n\r\n        return $('<li/>', {class : o.class, title : o.title}).append( $btn_choice );\r\n\r\n      }, // end fn\r\n\r\n      /**\r\n       * Helper function to create menu buttons\r\n       * @method function\r\n       * @param  {obj} o html parameters of the button\r\n       * @return {jQuery obj}\r\n       */\r\n      createMenuButton : function( params ) {\r\n        var $btn, $btn_a, $btn_choice, $ul;\r\n\r\n\r\n        if ( typeof params[0] === 'object') { // determine if button is a dropdown menu\r\n          $btn = $('<div/>', { class : 'btn-group btn-group-sm'})\r\n          // params[0] will contain the dropdown toggle button\r\n          $btn_a = $('<a/>', {\r\n                    type : 'button',\r\n                    class : params[0].class + ' dropdown-toggle',\r\n                    href : '#',\r\n                    'data-toggle' : 'dropdown'\r\n                 });\r\n\r\n\r\n\r\n          // add the icon if applicable\r\n          if (!!params[0].icon) {\r\n            $btn_a.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + params[0].icon } ) );\r\n          }\r\n          // add the label if applicable\r\n          if (!!params[0].label) {\r\n            $btn_a.append( $('<span/>').html(params[0].label) );\r\n          }\r\n          // add the click handler, if applicable\r\n          if (typeof params[0].fn !== 'undefined') {\r\n            if (typeof params[0].fn === 'string') {\r\n              $btn_a.off('click.custom').on('click.custom', jApp.aG().fn[params[0].fn ] );\r\n            } else if (typeof params[0].fn === 'function') {\r\n              $btn_a.off('click.custom').on('click.custom', params[0].fn );\r\n            }\r\n          }\r\n          // add the dropdown if there are multiple options\r\n          if (params.length > 1) {\r\n            $btn_a.append( $('<span/>', {class : 'fa fa-caret-down'}));\r\n            $btn.append($btn_a);\r\n            $ul = $('<ul/>', { class : 'dropdown-menu'});\r\n\r\n            _.each( params, function(o,key) {\r\n              if (key == 0) return false;\r\n              var signature = 'btn_' + Array(26).join((Math.random().toString(36)+'000000000000000000000').slice(2, 18)).slice(0, 25);\r\n\r\n              $btn_choice = $('<a/>', $.extend(true, { 'data-permission' : '' }, _.omit(o,'fn') , { href : '#', 'data-signature' : signature }) );\r\n\r\n              // disable/enable the button\r\n              if (o.disabled === true) {\r\n                $btn_choice.prop('disabled',true).addClass('disabled');\r\n              } else {\r\n                $btn_choice.prop('disabled',false).removeClass('disabled');\r\n              }\r\n\r\n              //add the icon\r\n              if (!!o.icon) {\r\n                $btn_choice.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + o.icon } ) );\r\n              }\r\n              // add the label\r\n              if (!!o.label) {\r\n                $btn_choice.append( $('<span/>').html(o.label) );\r\n              }\r\n\r\n              // add the click handler\r\n              if (!!o.fn) {\r\n                if (typeof o.fn === 'string') {\r\n                  $(document).delegate( 'a[data-signature=' + signature + ']', 'click.custom', jApp.aG().fn[o.fn] );\r\n                } else if (typeof o.fn === 'function') {\r\n                  $(document).delegate( 'a[data-signature=' + signature + ']', 'click.custom', o.fn );\r\n                }\r\n              }\r\n\r\n              $btn_choice.wrap('<li></li>').parent().appendTo($ul);\r\n            });\r\n\r\n            $btn.append($ul);\r\n          } else {\r\n            $btn.append($btn_a);\r\n          }\r\n\r\n        } else {\r\n          // generate a random, unique button signature\r\n          var signature = 'btn_' + Array(26).join((Math.random().toString(36)+'000000000000000000000').slice(2, 18)).slice(0, 25);\r\n\r\n          $btn = $('<button/>', _.omit(params, ['fn']) ).attr('data-signature',signature);\r\n\r\n          //add ignore flag for toggle buttons\r\n          if ( $btn.hasClass('btn-toggle') ) {\r\n            params.ignore = true;\r\n          }\r\n          if (!!params.icon) {\r\n            $btn.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + params.icon } ) );\r\n          }\r\n          if (!!params.label) {\r\n            $btn.append( $('<span/>').html(params.label) );\r\n          }\r\n          if (!!params.fn) {\r\n            if (typeof params.fn === 'string') {\r\n              $(document).delegate( 'button[data-signature=' + signature + ']', 'click.custom', jApp.aG().fn[params.fn] );\r\n            } else if (typeof params.fn === 'function') {\r\n              $(document).delegate( 'button[data-signature=' + signature + ']', 'click.custom', params.fn );\r\n            }\r\n          }\r\n          // disable/enable the button\r\n          if (params.disabled === true) {\r\n            $btn.prop('disabled',true).addClass('disabled');\r\n          } else {\r\n            $btn.prop('disabled',false).removeClass('disabled');\r\n          }\r\n        }\r\n\r\n        return $btn;\r\n      }, // end fn\r\n\r\n      /**\r\n       * Build form\r\n       * @method function\r\n       * @param  {[type]} params [description]\r\n       * @param  {[type]} key    [description]\r\n       * @return {[type]}        [description]\r\n       */\r\n      buildForm : function( params, key, htmlKey, tableFriendly ) {\r\n        var $frmHandle = '$' + key,\r\n            oFrmHandle = 'o' + key.ucfirst(),\r\n            oFrm;\r\n\r\n        htmlKey = ( htmlKey != null ) ? htmlKey : key;\r\n\r\n        // make sure the form template exists\r\n        if ( typeof jApp.aG().html.forms[htmlKey] === 'undefined' ) return false;\r\n\r\n        // create form object\r\n        jApp.aG().forms[oFrmHandle] = oFrm = new jForm( params );\r\n\r\n        // create form container\r\n        jApp.aG().forms[$frmHandle] = $('<div/>', { 'class' : 'gridFormContainer' })\r\n          .html( jUtility.render( jApp.aG().html.forms[htmlKey], { tableFriendly : tableFriendly || jApp.opts().model } ) )\r\n          .find( '.formContainer' ).append( oFrm.fn.handle() ).end()\r\n          .appendTo( jApp.aG().$() );\r\n      }, // end fn\r\n\r\n      /**  **  **  **  **  **  **  **  **  **\r\n       *   overlay\r\n       *\r\n       *  Controls the modal overlays\r\n       **  **  **  **  **  **  **  **  **  **/\r\n      overlay : function(which,action) {\r\n        var $which = (which == 1) ? '#modal_overlay' : '#modal_overlay2';\r\n        if (action == 'on') {\r\n          $($which).show();\r\n        } else {\r\n          $($which).hide();\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Setup Grid Headers\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      setupGridHeaders : function() {\r\n        // init vars\r\n\t\t\t\tvar\tappendTH = false,\r\n\t\t\t\t\ttheaders,\r\n\t\t\t\t\ttfilters,\r\n\t\t\t\t\tbtn,\r\n\t\t\t\t\tisActive,\r\n          self = jApp.aG();\r\n\r\n        // find the header row\r\n\t\t\t\ttheaders = self.DOM.$grid.find('.table-head .table-row.colHeaders');\r\n\r\n\t\t\t\t// create the header row if needed\r\n\t\t\t\tif (!theaders.length) {\r\n\t\t\t\t\ttfilters = self.DOM.$grid.find('.table-row.tfilters');\r\n\t\t\t\t\ttheaders = $('<div/>', {'class' : 'table-row colHeaders'});\r\n\t\t\t\t\tappendTH = true;\r\n\r\n\t\t\t\t\t// Append the check all checkbox\r\n\t\t\t\t\tif (jUtility.isEditable()) {\r\n\t\t\t\t\t\ttheaders.append( $('<div/>', {'class' : 'table-header table-header-text'}).html( jUtility.render( self.html.tmpCheckAll ) ));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// create header for this column if needed\r\n\t\t\t\t\t$.each( self.options.headers, function(i,v) {\r\n\t\t\t\t\t\t// determine if the current column is the active sortBy column\r\n\t\t\t\t\t\tisActive = (self.options.columns[i] === self.options.sortBy) ? true : false;\r\n\r\n\t\t\t\t\t\t// render the button\r\n\t\t\t\t\t\tbtn = jUtility.render( self.html.tmpSortBtn, {\r\n\t\t\t\t\t\t\t'ColumnName' : self.options.columns[i],\r\n\t\t\t\t\t\t\t'BtnClass' : (isActive) ? 'btn-primary' : '',\r\n\t\t\t\t\t\t\t'faClass' : (isActive) ? 'amount-desc' : 'amount-asc',\r\n\t\t\t\t\t\t\t'BtnTitle' : (isActive) ? 'Sort Descending' : 'Sort Ascending'\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t// append the header\r\n\t\t\t\t\t\ttheaders.append( $('<div/>', { 'class' : 'table-header table-header-text' }).html( btn + v ) );\r\n\r\n\t\t\t\t\t\tif ( i > 0 ) { // skip the id column\r\n\t\t\t\t\t\t\ttfilters.append( $('<div/>', { 'class' : 'table-header', 'style' : 'position:relative'}).append( $('<input/>',\r\n\t\t\t\t\t\t\t//tfilters.append( $('<div/>', { 'class' : 'table-header'}).append( $('<input/>',\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t'rel' : self.options.columns[i],\r\n\t\t\t\t\t\t\t\t\t'id'  :\t'filter_' + self.options.columns[i],\r\n\t\t\t\t\t\t\t\t\t'name' : 'filter_' + self.options.columns[i],\r\n\t\t\t\t\t\t\t\t\t'class' : 'header-filter form-control',\r\n\t\t\t\t\t\t\t\t\t'style' : 'width:100%',\r\n                  'placeholder' : self.options.headers[i]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tself.DOM.$grid.find('.table-head').append(theaders);\r\n\t\t\t\t\tself.DOM.$grid.find('.paging').parent().attr('colspan',self.options.headers.length-2);\r\n\t\t\t\t\t//self.DOM.$grid.find('.with-selected-menu').append( self.DOM.$withSelectedMenu.find('li') );\r\n\t\t\t\t}\r\n      }\r\n\r\n    }, // end DOM fns\r\n\r\n    /**  **  **  **  **  **  **  **  **  **\r\n\t\t *   CALLBACK\r\n\t\t *\r\n\t\t *  Defines the callback functions\r\n\t\t *  used by the various AJAX calls\r\n\t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tcallback : {\r\n\r\n\t\t\t/**\r\n\t\t\t * Process the result of the form submission\r\n\t\t\t * @method function\r\n\t\t\t * @param  {[type]} response [description]\r\n\t\t\t * @return {[type]}          [description]\r\n\t\t\t */\r\n\t\t\tsubmitCurrentForm : function(response) {\r\n\t\t\t\tif ( jUtility.isResponseErrors(response) ) {\r\n\t\t\t\t\tjUtility.msg.error( jUtility.getErrorMessage(response) )\r\n\t\t\t\t} else {\r\n\t\t\t\t\tjUtility.msg.success( 'Operation Completed Successfully!');\r\n\t\t\t\t\tif (jApp.opts().closeOnSave) {\r\n            if ( jUtility.needsCheckin() )  {\r\n              jUtility.checkin( jUtility.getCurrentRowId() );\r\n            } else {\r\n              jUtility.closeCurrentForm();\r\n            }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tjUtility.getGridData();\r\n\t\t\t\t\tjUtility.DOM.resetRowMenu();\r\n\t\t\t\t}\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**  **  **  **  **  **  **  **  **  **\r\n\t\t\t *   update\r\n\t\t\t *\r\n\t\t\t *  @response (obj) The JSON object\r\n\t\t\t *  returned by the ajax request\r\n\t\t\t *\r\n\t\t\t *  processes the result of the AJAX\r\n\t\t\t *  request\r\n\t\t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\t\tupdate : function(response) {\r\n\t\t\t\tjApp.log('6.6 data received. processing...')\r\n\r\n        jUtility.DOM.setupGridHeaders();\r\n\r\n        $('.table-cell.no-data').remove();\r\n\r\n        if ( jUtility.isResponseErrors(response) ) {\r\n          return jUtility.DOM.dataErrorHandler();\r\n        }\r\n\r\n        if ($.isEmptyObject(response)) {\r\n          return jUtility.DOM.dataEmptyHandler();\r\n        }\r\n\r\n\t\t\t\t// init vars\r\n\t\t\t\tvar\tappendTH = false,\r\n\t\t\t\t\ttheaders,\r\n\t\t\t\t\ttfilters,\r\n\t\t\t\t\tbtn,\r\n\t\t\t\t\tisActive,\r\n          self = jApp.aG();\r\n\r\n\t\t\t\t// detect changes in data;\r\n\t\t\t\tself.dataGrid.delta = ( !$.isEmptyObject(self.dataGrid.data) ) ?\r\n\t\t\t\t\tjUtility.deltaData(self.dataGrid.data,response) :\r\n\t\t\t\t\tresponse;\r\n\r\n\t\t\t\t// merge the changes into self.dataGrid.data\r\n\t\t\t\tif (!!self.dataGrid.delta) {\r\n\t\t\t\t\tself.dataGrid.data = response;\r\n\t\t\t\t} else { // abort if no changes in the data\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// remove all rows, if needed\r\n\t\t\t\tif (self.options.removeAllRows) {\r\n\t\t\t\t\tjUtility.DOM.removeRows(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// show the preloader, then update the contents\r\n\t\t\t\tjUtility.DOM.togglePreloader();\r\n\r\n\t\t\t\t// update the DOM\r\n\t\t\t\tjUtility.DOM.updateGrid();\r\n\r\n\t\t\t\t// remove the rows that may have been removed from the data\r\n\t\t\t\tjUtility.DOM.removeRows();\r\n\t\t\t\tjUtility.buildMenus();\r\n\t\t\t\tjUtility.DOM.togglePreloader(true);\r\n\t\t\t\tself.options.removeAllRows = false;\r\n\r\n\t\t\t\tif (!self.loaded) {\r\n\t\t\t\t\t// custom init fn\r\n\t\t\t\t\tif ( self.fn.customInit && typeof self.fn.customInit === 'function' ) {\r\n\t\t\t\t\t\tself.fn.customInit();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.loaded = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// adjust column widths\r\n\t\t\t\tjUtility.DOM.updateColWidths();\r\n\r\n        // adjust permissions\r\n        jUtility.callback.getPermissions( jApp.aG().permissions );\r\n\r\n        // perform sort if needed\r\n        jUtility.DOM.sortByCol();\r\n\r\n\t\t\t}, // end fn\r\n\r\n      /**\r\n       * Update panel header from row data\r\n       * @method function\r\n       * @param  {[type]} response [description]\r\n       * @return {[type]}          [description]\r\n       */\r\n\t\t\tupdateDOMFromRowData : function(response) {\r\n\t\t\t\t\tvar data = response,\r\n              self = jApp.aG();\r\n\t\t\t\t\tself.rowData = response;\r\n\t\t\t\t\t//jUtility.DOM.updatePanelHeader( data[ self.options.columnFriendly ] );\r\n\t\t\t}, // end fn\r\n\r\n      /**\r\n       * Check out row\r\n       * @method function\r\n       * @param  {[type]} response [description]\r\n       * @return {[type]}          [description]\r\n       */\r\n\t\t\tcheckout : function(response) {\r\n\t\t\t\tif ( !jUtility.isResponseErrors(response) ) {\r\n          jUtility.msg.success('Record checked out for editing.');\r\n          jUtility.setupFormContainer();\r\n          jUtility.getCheckedOutRecords();\r\n        }\r\n\t\t\t}, //end fn\r\n\r\n      /**\r\n       * Check in row\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n\t\t\tcheckin : function(response) {\r\n        if ( jUtility.isResponseErrors(response) ) {\r\n          jUtility.msg.warning( jUtility.getErrorMessage(response) )\r\n        }\r\n        jUtility.getCheckedOutRecords();\r\n        jUtility.closeCurrentForm();\r\n\t\t\t}, //end fn\r\n\r\n      /**\r\n       * Display response errors\r\n       * @method function\r\n       * @param  {[type]} response [description]\r\n       * @return {[type]}          [description]\r\n       */\r\n      displayResponseErrors : function(response) {\r\n        if ( jUtility.isResponseErrors(response) ) {\r\n          jUtility.msg.clear();\r\n          jUtility.msg.error( jUtility.getErrorMessage(response) )\r\n        }\r\n      }, //end fn\r\n\r\n      /**\r\n       * Get Checked out records\r\n       * @method function\r\n       * @param  {[type]} response [description]\r\n       * @return {[type]}          [description]\r\n       */\r\n\t\t\tgetCheckedOutRecords : function(response) {\r\n        /**\r\n         * To do\r\n         */\r\n\r\n        var $tr,\r\n            $i = $('<i/>', { class : 'fa fa-lock fa-fw checkedOut'}),\r\n            self = jApp.aG();\r\n\r\n\t\t\t\tself.DOM.$grid.find('.chk_cid').parent().removeClass('disabled').show();\r\n\t\t\t\tself.DOM.$grid.find('.rowMenu-container').removeClass('disabled');\r\n\t\t\t\tself.DOM.$grid.find('.checkedOut').remove();\r\n\r\n\t\t\t\t_.each(response, function(o,key) {\r\n\r\n\t\t\t\t\tif (!!o && !!o.lockable_id) {\r\n\t\t\t\t\t\t$tr = $('.table-row[data-identifier=\"' + o.lockable_id + '\"]');\r\n\r\n\t\t\t\t\t\t$tr.find('.chk_cid').parent().addClass('disabled').hide()\r\n\t\t\t\t\t\t\t.closest('.table-cell').append( $('<span/>',{class : 'btn btn-default btn-danger pull-right checkedOut'})\r\n              .html($i.prop('outerHTML')).clone().attr('title','Locked By ' + o.user.person.name));\r\n\t\t\t\t\t\t$tr.find('.rowMenu-container').addClass('disabled').find('.rowMenu.expand').removeClass('expand');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n      }, //end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Process the grid link tables\r\n\t\t\t * @method function\r\n\t\t\t * @param  {[type]} colParams [description]\r\n\t\t\t * @return {[type]}           [description]\r\n\t\t\t */\r\n\t\t\tlinkTables : function( colParams ) {\r\n        var self = jApp.aG();\r\n\r\n\t\t\t\t// add the colParams to the linkTable store\r\n\t\t\t\tself.linkTables = _.union( self.linkTables, colParams );\r\n\r\n\t\t\t\t// count the number of completed requests\r\n\t\t\t\tif ( !self.linkTableRequestsComplete ) {\r\n\t\t\t\t\tself.linkTableRequestsComplete = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.linkTableRequestsComplete++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// once all linkTable requests are complete, apply the updates to the forms\r\n\t\t\t\tif (self.linkTableRequestsComplete == self.options.linkTables.length) {\r\n\t\t\t\t\t// update the edit form\r\n\t\t\t\t\tself.forms.oEditFrm.options.colParamsAdd = self.linkTables;\r\n\t\t\t\t\tself.forms.oEditFrm.fn.processColParams();\r\n\t\t\t\t\tself.forms.oEditFrm.fn.processBtns();\r\n\r\n\t\t\t\t\t// update the new form\r\n\t\t\t\t\tself.forms.oNewFrm.options.colParamsAdd = self.linkTables;\r\n\t\t\t\t\tself.forms.oNewFrm.fn.processColParams();\r\n\t\t\t\t\tself.forms.oNewFrm.fn.processBtns();\r\n\t\t\t\t}\r\n\r\n\t\t\t}, //end fn\r\n\r\n      /**\r\n       * Show or hide controls based on permissions.\r\n       * @method function\r\n       * @param  {[type]} response [description]\r\n       * @return {[type]}          [description]\r\n       */\r\n      getPermissions : function(response) {\r\n\r\n        jApp.log( 'Setting activeGrid permissions');\r\n        jApp.activeGrid.permissions = response;\r\n\r\n        jApp.log( jApp.aG().permissions );\r\n\r\n        _.each(response, function(value, key) {\r\n          jApp.log( '12.1 Setting Permission For ' + key + ' to ' + value )\r\n          if (value !== 1) {\r\n            $('[data-permission=' + key + ']').remove();\r\n          }\r\n        })\r\n      }, // end fn\r\n\r\n\t\t} // end callback defs\r\n\r\n  }\r\n\r\n  // add it to the global scope\r\n  window.jUtility = jUtility;\r\n\r\n})(window, $, jApp);\r\n"," /**\r\n  *  jForm.class.js - Custom Form JS class\r\n  *\r\n  *  Defines the properties and methods of the\r\n  *  custom form class.\r\n  *\r\n  *  Jeremy Bloomstrom | jeremy@in.genio.us\r\n  *  Released under the MIT license\r\n  *\r\n  *  Prereqs: \tjQuery, underscore.js, jStorage.js\r\n  */\r\n\r\n // jquery function for clearing a form of all its values\r\n $.fn.clearForm = function() {\r\n  return this.each(function() {\r\n    if ( !!$(this).prop('disabled') || !!$(this).prop('readonly') ) return false;\r\n\r\n\tvar type = this.type, tag = this.tagName.toLowerCase();\r\n    if (tag == 'form')\r\n      return $(':input',this).clearForm();\r\n    if (type == 'text' || type == 'password' || tag == 'textarea')\r\n      this.value = '';\r\n    else if (type == 'checkbox' || type == 'radio')\r\n      this.checked = false;\r\n    else if (tag == 'select')\r\n       this.selectedIndex = (!!$(this).prop('multiple')) ? -1 : 0;\r\n\t$(this).psiblings('.form-control-feedback').removeClass('glyphicon-remove').removeClass('glyphicon-ok').hide();\r\n\t$(this).closest('.form_element').removeClass('has-error').removeClass('has-success');\r\n  });\r\n};\r\n\r\n// javascript closure\r\n;(function( window, $, jQuery ) {\r\n\r\n\t'use strict';\r\n\r\n\tvar jForm = function( options ) {\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   VARS\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\r\n\t\t// alias this\r\n\t\tvar self = this;\r\n\r\n\t\tthis.$frm = false;\r\n\t\tthis.store = $.jStorage;\r\n    this.submitted = false;\r\n\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n\t\t *   DEFAULT OPTIONS\r\n\t\t *\r\n\t\t *  Set the default options for the\r\n\t\t *  instance here. Any values specified\r\n\t\t *  at runtime will overwrite these\r\n\t\t *  values.\r\n\t\t **  **  **  **  **  **  **  **  **  **/\r\n\r\n\t\tthis.options = {\r\n\t\t\t// form setup\r\n\t\t\tmodel : '',\r\n      table : '',\r\n      atts : {\t\t\t\t\t\t// form html attributes\r\n\t\t\t\t'method' : 'POST',\r\n        'action' : '',\r\n\t\t\t\t'role' : 'form',\r\n\t\t\t\t'onSubmit' : 'return false',\r\n\t\t\t\t'name' : false,\r\n        'enctype' : 'multipart/form-data'\r\n\t\t\t},\r\n\t\t\thiddenElms : false,\r\n\t\t\twrap : '',\r\n\t\t\tbtns : false,\r\n\t\t\tfieldset : false,\r\n\t\t\tdisabledElements : [],\r\n\t\t\t/* colParams - \taccept, alt, autocomplete, autofocus, checked, cols,\r\n\t\t\t\t\t\t\tdisabled, form, formaction, formenctype, formmethod,\r\n\t\t\t\t\t\t\tformnovalidate, formtarget, height, id, list, max,\r\n\t\t\t\t\t\t\tmaxlength, min, multiple, name, pattern, placeholder,\r\n\t\t\t\t\t\t\treadonly, required, rows, size, src, step, type, data-validType,\r\n\t\t\t\t\t\t\tvalue, width, wrap, onClick, onChange, class, _labels,\r\n\t\t\t\t\t\t\t_options, _firstlabel, _firstoption, _label, _enabled,\r\n\t\t\t\t\t\t\tviewName, data-ordering, fieldset, _optionsSource, _labelsSource,\r\n\t\t\t\t\t\t\t_optionsFilter, _linkedElmID, _linkedElmOptions,\r\n\t\t\t\t\t\t\t_linkedElmLabels, _linkedElmFilterCol\r\n\t\t\t*/\r\n\t\t\tcolParams : {},\r\n\t\t\tcolParamsAdd : [], // storage container for additional colParams such as from linkTables\r\n\t\t\tloadExternal : true, // load external colParams e.g. from a db\r\n\t\t\tttl : 30, // TTL for external data (mins)\r\n\t\t\ttableFriendly : '', // friendly name of table e.g. Application\r\n\t\t\tlayout : 'standard' // standard (three-column layout) | single (one-col layout)\r\n\t\t};\r\n\r\n\t\t// set the runtime values for the options\r\n\t\t$.extend(true, this.options,options);\r\n\r\n    // set up the callback functions\r\n    $.extend(true, this.callback, options.callback);\r\n\r\n    // alias for attributes container\r\n\t\tvar oAtts = this.options.atts;\r\n\r\n\t\t// set default values\r\n\t\tif (!this.options.fieldset) {\r\n\t\t\tthis.options.fieldset = {\r\n\t\t\t\t'legend' : self.options.tableFriendly + ' Details',\r\n\t\t\t\t'id' : 'fs_details'\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// set the default buttons, if not present\r\n\t\tif (!this.options.btns) {\r\n\t\t\tthis.options.btns = [\r\n        { type : 'button', class : 'btn btn-primary btn-formMenu',  id : 'btn_form_menu_heading', value : '<i class=\"fa fa-fw fa-bars\"></i>',},\r\n\t\t\t\t{ type : 'button', class : 'btn btn-primary btn-go', \t      id : 'btn_go',                value : '<i class=\"fa fa-fw fa-floppy-o\"></i> Save &amp; Close' },\r\n\t\t\t\t{ type : 'button', class : 'btn btn-primary btn-reset',     id : 'btn_reset',             value : '<i class=\"fa fa-fw fa-refresh\"></i> Reset' },\r\n\t\t\t\t{ type : 'button', class : 'btn btn-primary btn-cancel',    id : 'btn_cancel',            value : '<i class=\"fa fa-fw fa-times\"></i> Cancel' },\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// set the default name for the form, if not present\r\n\t\tif (!this.options.atts.name) {\r\n\t\t\tthis.options.atts.name = 'frm_edit' + this.options.tableFriendly;\r\n\t\t}\r\n\r\n\t\t// set the default hidden elements if not present\r\n\t\tif (!this.options.hiddenElms) {\r\n\t\t\t// setup the hidden elements\r\n\t\t\tthis.options.hiddenElms = [\r\n\t\t\t\t{ atts : { 'type' : 'hidden', 'readonly' : 'readonly', 'name' : '_method', 'value' : options.atts.method, 'data-static' : true } },\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// container for jQuery DOM elements\r\n\t\tthis.DOM = {\r\n\t\t\t$prnt : $('<div/>'),\r\n\t\t\t$frm : false,\r\n\t\t\t$fs : false\r\n\t\t};\r\n\r\n\t\tthis.oInpts = {};\r\n\t\tthis.DOM.$Inpts = $('<div/>');\r\n\t\tthis.rowData = {};\r\n\t\tthis.readonlyFields = [];\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n\t\t *   HTML TEMPLATES\r\n\t\t *\r\n\t\t *  Place large html templates here\r\n\t\t *  as functions. These are rendered with\r\n\t\t *  the method self.fn.render.\r\n\t\t *\r\n\t\t *  Parameters of the form {@ParamName}\r\n\t\t *  are expanded by the render function\r\n\t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.html = {\r\n\r\n\t\t};// end html templates\r\n\r\n\t\t// create shortcut to the form\r\n\t\tthis.$ = function() {\r\n\t\t\treturn this.DOM.$frm;\r\n\t\t}\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   FUNCTION DEFS\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.fn = {\r\n\t\t\t_init : function() {\r\n\t\t\t\tvar inpt, hdn;\r\n\r\n\t\t\t\t// create the form\r\n\t\t\t\tself.DOM.$frm = $('<form/>', oAtts )\r\n\t\t\t\t\t.wrap(self.options.wrap);\r\n\r\n        // add the fieldset if we are not loading external col params\r\n        if ( !self.options.loadExternal ) {\r\n          self.DOM.$frm\r\n           .append(  $('<fieldset/>', self.options.fieldset)\r\n\t\t\t\t\t      .append( $('<legend/>').html( self.options.fieldset.legend ) )\r\n          );\r\n        }\r\n\r\n        // add the inputs to the DOM\r\n        self.DOM.$frm.append( self.DOM.$Inpts )\r\n\r\n\r\n\t\t\t\t// append the form to the parent container\r\n\t\t\t\tself.DOM.$prnt.append( ( !!self.DOM.$frm.parents().length ) ?\r\n\t\t\t\t\t  self.DOM.$frm.parents().last() :\r\n\t\t\t\t\t  self.DOM.$frm\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// create and append the hidden elements\r\n\t\t\t\t_.each( self.options.hiddenElms, function( o, key )  {\r\n\t\t\t\t\tinpt = new jInput( o );\r\n\t\t\t\t\tself.oInpts[ o.atts.name ] = inpt ;\r\n\t\t\t\t\tself.DOM.$Inpts.append( inpt.fn.handle() );\r\n\t\t\t\t\tif (o.atts.readonly === 'readonly') {\r\n\t\t\t\t\t\tself.readonlyFields.push( o.atts.name );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// get the colParams\r\n\t\t\t\tif ( !!self.options.loadExternal ) { // get the colparams from an external json source\r\n\t\t\t\t\tself.fn.getColParams();\r\n\t\t\t\t} else { // colparams must be specified locally, so process them\r\n\t\t\t\t\tself.fn.processColParams();\r\n\t\t\t\t\tself.fn.processBtns();\r\n\t\t\t\t}\r\n\t\t\t}, // end fn\r\n\r\n      /**\r\n       * Get the form data as a FormData object\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      getFormData : function() {\r\n        // var data = new FormData;\r\n        //\r\n        // _.each( self.$().serializeObject(), function(value,name) {\r\n        //   data.append(name, value);\r\n        // });\r\n        //\r\n        // self.$().find('input[type=file]').each( function(i, elm) {\r\n        //     jApp.log('adding files to the FormData object');\r\n        //\r\n        //     jApp.log( elm.files );\r\n        //\r\n        //     _.each( elm.files, function( o ) {\r\n        //       jApp.log( 'Adding ' + elm.name );\r\n        //       jApp.log( o );\r\n        //\r\n        //       data.append( elm.name, o );\r\n        //     });\r\n        // })\r\n\r\n        return self.$().serialize();\r\n\r\n      }, // end fn\r\n\r\n\t\t\thandle : function() {\r\n\t\t\t\treturn self.DOM.$prnt;\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t$fieldset : function() {\r\n\t\t\t\treturn self.DOM.$frm.find('fieldset');\r\n\t\t\t}, //end fn\r\n\r\n\t\t\tgetElmById : function(id) {\r\n\t\t\t\tid = id.replace('#','');\r\n\r\n\t\t\t\treturn self.oInpts[id];\r\n\t\t\t},\r\n\r\n\t\t\trender : function(params) {\r\n\t\t\t\tvar tmp = self.DOM.$prnt.prop('outerHTML');\r\n\r\n\t\t\t\tif (!!params && !$.isEmptyObject(params)) {\r\n\t\t\t\t\tfor (key in params ) {\r\n\t\t\t\t\t\tptrn = new RegExp( '\\{@' + key + '\\}', 'gi' );\r\n\t\t\t\t\t\ttmp = tmp.replace(ptrn, params[key] );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp;\r\n\t\t\t}, //end fn\r\n\r\n\t\t\taddElements : function(arr) {\r\n\t\t\t\tself.options.colParamsAdd = _.union( self.options.colParamsAdd, arr );\r\n\t\t\t}, //end fn\r\n\r\n\t\t\tgetColParams : function() {\r\n        jApp.log('A. Getting external colparams');\r\n        self.options.colParams = jApp.colparams[ self.options.model ];\r\n        jApp.log(self.options.colParams);\r\n\r\n        //process the colParams;\r\n\t\t\t\tself.fn.processExternalColParams();\r\n\r\n\t\t\t\t//add the buttons\r\n\t\t\t\tself.fn.processBtns();\r\n\r\n\t\t\t}, //end fn\r\n\r\n      preFilterColParams : function( unfilteredParams ) {\r\n        return _.filter( unfilteredParams, function(o) {\r\n          if (o == null) return false;\r\n          if (typeof o._enabled == 'undefined') return false;\r\n          if (o._enabled == false) return false;\r\n          if ( _.indexOf( self.options.disabledElements, o.name ) !== -1 ) return false;\r\n\r\n          return _.omit(o, function(value, key, object ) {\r\n            return ( value == null || value == 'null' || value.toString().toLowerCase() == '__off__' || +value == 0 || value == false  );\r\n          });\r\n\r\n        });\r\n      }, // end fn\r\n\r\n\r\n\t\t\tgetRowData : function( url, callback ) {\r\n\r\n        $('.panel-overlay').show();\r\n\r\n\t\t\t\t$.getJSON( url\r\n\t\t\t\t\t, {}\r\n\t\t\t\t\t, self.callback.getRowData\r\n\t\t\t\t).fail( function() {\r\n\t\t\t\t\tconsole.error('There was a problem getting the row data');\r\n\t\t\t\t}).always( function(response) {\r\n\t\t\t\t\tif (typeof callback !== 'undefined' && typeof callback === 'function' ) {\r\n\t\t\t\t\t\tcallback(response);\r\n\t\t\t\t\t} else if ( typeof callback !== 'undefined' && typeof callback === 'string' && typeof self.fn[callback] !== 'undefined' && typeof self.fn[callback] === 'function' ) {\r\n\t\t\t\t\t\tself.fn[callback](response);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//console.log('Got the row data');\r\n\t\t\t\t\t//console.log(response);\r\n\t\t\t\t})\r\n\t\t\t}, //end fn\r\n\r\n      /**\r\n       * Process externally loaded column parameters\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n      processExternalColParams : function() {\r\n        _.each( self.options.colParams, function(o, index) {\r\n          self.fn.processFieldset(o, index);\r\n        });\r\n      }, // end fn\r\n\r\n      /**\r\n       * Process fieldset\r\n       * @method function\r\n       * @param  {[type]} o     [description]\r\n       * @param  {[type]} index [description]\r\n       * @return {[type]}       [description]\r\n       */\r\n      processFieldset : function( o, index ) {\r\n\r\n        jApp.log('A. Processing the fieldset');\r\n        jApp.log(o);\r\n        //create the fieldset\r\n        var $fs = $('<div/>', {\r\n          class : o.class\r\n        });\r\n\r\n        // add the label, if necessary\r\n        if (o.label != null) {\r\n          $fs.append( $('<legend/>').html(o.label) );\r\n        }\r\n\r\n        // add the helptext if necessary\r\n        if (o.helpText != null) {\r\n          $fs.append( $('<div/>', { class : 'alert alert-info' } ).html(o.helpText) )\r\n        }\r\n\r\n        // add the fields\r\n        _.each( self.fn.preFilterColParams( o.fields ), function(oo) {\r\n          self.fn.processField(oo, $fs);\r\n        });\r\n\r\n        // add the fieldset to the DOM\r\n        self.DOM.$Inpts.append( $fs )\r\n\r\n      }, // end fn\r\n\r\n      /**\r\n       * Process form field from parameters\r\n       * @method function\r\n       * @param  {[type]} params [description]\r\n       * @param  {[type]} target [description]\r\n       * @return {[type]}        [description]\r\n       */\r\n      processField : function( params, target ) {\r\n        var inpt;\r\n\r\n        jApp.log('B. Processing Field')\r\n        jApp.log(params);\r\n\r\n\r\n        // check if the type is array\r\n        if (params.type == 'array') return self.fn.processArrayField(params, target);\r\n\r\n\r\n        inpt = new jInput( { atts : params} );\r\n        self.oInpts[ params.name ] = inpt;\r\n        target.append( inpt.fn.handle() );\r\n        if (params.readonly === 'readonly') self.readonlyFields.push(params.name);\r\n\r\n      }, // end fn\r\n\r\n      /**\r\n       * Process array field from parameters\r\n       * @method function\r\n       * @param  {[type]} params [description]\r\n       * @param  {[type]} target [description]\r\n       * @return {[type]}        [description]\r\n       */\r\n      processArrayField : function( params, target ) {\r\n        var $container = $('<div/>', { class : 'array-field-container alert alert-info' }).data('colparams', params),\r\n            $table = $('<table/>', { class : 'table' } ),\r\n            $label = $('<label/>').html( params._label ),\r\n            $tr, $th, $td, inpt, hidNames = [];\r\n\r\n        _.each( params.fields, function(o) {\r\n          o['data-name'] = o.name;\r\n          hidNames.push(o.name.replace('[]',''));\r\n        });\r\n\r\n        console.log(hidNames);\r\n\r\n        // build up the table\r\n        $table.append(\r\n          [\r\n            // first row - array label\r\n            $('<tr/>').append([\r\n              $('<th/>', { colspan : 100 }).append( $label ),\r\n              $('<th/>').html('&nbsp;')\r\n            ]),\r\n\r\n            // second row - column headers\r\n            // $('<tr/>').append(\r\n            //   _.map( params.headers, function( header ) {\r\n            //       return $('<th/>').html( header );\r\n            //   })\r\n            //\r\n            // ).append(\r\n            //   [\r\n            //       $('<th/>'),\r\n            //   ]\r\n            // ),\r\n\r\n            // third row - inputs\r\n\r\n          ]\r\n        );\r\n\r\n        // append the inputs\r\n        if (params.min != null ) {\r\n          for ( var ii = +params.min-1; ii >= 0; ii--  ) {\r\n            $table.append( self.fn.populateFieldRow( params, ii ) );\r\n          }\r\n        } else {\r\n          $table.append( self.fn.populateFieldRow( params ) );\r\n        }\r\n\r\n        // append the table to the container\r\n        $container.append($table);\r\n\r\n        // rename inputs so they all have unique names\r\n        // $table.find('tr').each( function( i, elm ) {\r\n        //   $(elm).find(':input').each( function(ii, ee) {\r\n        //     $(ee).attr('name', $(ee).attr('data-name') + '_' + i)\r\n        //   });\r\n        // });\r\n\r\n        // append the container to the target\r\n        target.append($container);\r\n\r\n        var hid = {\r\n          name : params.name + '_extra_columns',\r\n          type : 'hidden',\r\n          value : hidNames.join()\r\n        }\r\n\r\n        var oHid = new jInput({ atts : hid } );\r\n        self.oInpts[ hid.name ] = oHid;\r\n        target.append( oHid.fn.handle() );\r\n\r\n\r\n      }, // end fn\r\n\r\n      /**\r\n       * Populate a row with the field inputs\r\n       * @method function\r\n       * @param  {[type]} params [description]\r\n       * @return {[type]}        [description]\r\n       */\r\n      populateFieldRow : function(params, index) {\r\n        var $td,\r\n            $btn_add = $('<button/>', {type : 'button', class : 'btn btn-primary btn-array-add'}).html( '<i class=\"fa fa-fw fa-plus\"></i>' ),\r\n            $btn_remove = $('<button/>', {type : 'button', class : 'btn btn-danger btn-array-remove'}).html( '<i class=\"fa fa-fw fa-trash-o\"></i>' ),\r\n            index = (typeof index === 'undefined') ? 0 : index;\r\n\r\n        return $('<tr/>').append(\r\n          _.map( params.fields, function( oo ) {\r\n              var $td = $('<td/>');\r\n\r\n              self.fn.processField( oo, $td );\r\n\r\n              return $td;\r\n          })\r\n\r\n        ).append(\r\n          [\r\n              $('<td/>').append([$btn_remove, (index === 0) ? $btn_add : null])\r\n          ]\r\n        );\r\n      }, // end fn\r\n\r\n\t\t\tprocessColParams : function() {\r\n\t\t\t\tself.DOM.$Inpts.find('.fs, .panel-heading').remove();\r\n\r\n\t\t\t\tif (self.options.layout === 'standard') {\r\n\r\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs col-lg-4' }) )\r\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs col-lg-4' }) )\r\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs col-lg-4' }) )\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs' }) )\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// process static or dynamically loaded colParams\r\n\t\t\t\t_.each( _.sortBy( self.options.colParams, function( o ) { return (!isNaN(o['data-ordering'])) ? +o['data-ordering'] : 1000 } ) , function( o, key ) {\r\n          var inpt, eq;\r\n\t\t\t\t\tif (!!o && !!o.name && _.indexOf( self.options.disabledElements, o.name ) === -1 ) {\r\n\r\n\t\t\t\t\t\teq = ( !!o['data-fieldset'] ) ? Number( o['data-fieldset'] )-1 : 0;\r\n\t\t\t\t\t\tinpt = new jInput( { atts : o } );\r\n\t\t\t\t\t\tself.oInpts[ o.name ] = inpt ;\r\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq( (self.options.layout === 'standard') ? eq : 0 ).append( inpt.fn.handle() );\r\n\t\t\t\t\t\tif (o.readonly === 'readonly') {\r\n\t\t\t\t\t\t\tself.readonlyFields.push( o.name );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//console.log('Now adding the colParamsAdd : ' + self.options.colParamsAdd.length);\r\n\t\t\t\t// process additional colParams that may have come from linkTables\r\n\t\t\t\t_.each( _.sortBy( self.options.colParamsAdd, function( o ) { return (!isNaN(o['data-ordering'])) ? +o['data-ordering'] : 1000 } ) , function( o, key ) {\r\n\t\t\t\t\tvar inpt, eq;\r\n\t\t\t\t\tif (!!o && !!o.name && _.indexOf( self.options.disabledElements, o.name ) === -1 ) {\r\n\r\n\t\t\t\t\t\teq = ( !!o['data-fieldset'] ) ? Number( o['data-fieldset'] )-1 : 0;\r\n\t\t\t\t\t\tinpt = new jInput( { atts : o } );\r\n\t\t\t\t\t\tself.oInpts[ o.name ] = inpt ;\r\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq( (self.options.layout === 'standard') ? eq : 0 ).append( inpt.fn.handle() );\r\n\t\t\t\t\t\tif (o.readonly === 'readonly') {\r\n\t\t\t\t\t\t\tself.readonlyFields.push( o.name );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (self.options.layout === 'standard') {\r\n\t\t\t\t\t// set fieldset classes\r\n\t\t\t\t\tif ( self.DOM.$Inpts.find('.fs').eq(1).find('div').length === 0  ) {\r\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq(1).removeClass('col-lg-4').end()\r\n\t\t\t\t\t\t\t\t\t\t\t\t   .eq(0).removeClass('col-lg-4').addClass('col-lg-8');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq(1).addClass('col-lg-4').end()\r\n\t\t\t\t\t\t\t\t\t\t\t\t   .eq(0).addClass('col-lg-4').removeClass('col-lg-8');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// handle linked Elements\r\n\t\t\t\tself.$().find('[_linkedElmID]').off('change.linkedelm').on('change.linkedelm', function() {\r\n\t\t\t\t\t//console.log( 'Setting up linked Element' );\r\n\t\t\t\t\tvar This = $(this),\r\n\t\t\t\t\t\t$col = This.attr('_linkedElmFilterCol'),\r\n\t\t\t\t\t\t$id\t = This.val(),\r\n\t\t\t\t\t\t$labels = This.attr('_linkedElmLabels'),\r\n\t\t\t\t\t\t$options = This.attr('_linkedElmOptions'),\r\n\t\t\t\t\t\toElm = self.fn.getElmById( This.attr('_linkedElmID') ),\r\n\t\t\t\t\t\tatts;\r\n\r\n\t\t\t\t\t//console.log(This.attr('name'));\r\n\t\t\t\t\t//console.log($id);\r\n\t\t\t\t\t//console.log(oElm);\r\n\r\n\t\t\t\t\t// set data to always expire;\r\n\t\t\t\t\toElm.fn.setTTL(-1);\r\n\t\t\t\t\toElm.options.hideIfNoOptions = true;\r\n\t\t\t\t\toElm.options.cache = false;\r\n\r\n\t\t\t\t\tif (typeof $id === 'string') { $id = \"'\" + $id + \"'\" }\r\n\t\t\t\t\tif (typeof $id === 'object') { $id = _.map($id, function(elm) { return \"'\" + elm + \"'\" }) }\r\n\r\n\t\t\t\t\tatts = {\r\n\t\t\t\t\t\t'_optionsFilter' : $col + ' in (' + $id + ')',\r\n\t\t\t\t\t\t'_labelsSource' : $labels,\r\n\t\t\t\t\t\t'_optionsSource' : $options,\r\n\t\t\t\t\t\t'getExtData' : true,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( !oElm.fn.attr('multiple') || oElm.fn.attr('multiple') != 'multiple' ) {\r\n\t\t\t\t\t\tatts = _.extend( atts, { '_firstoption' : 0, '_firstlabel' : '-Other-' } );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\toElm.fn.attr( atts );\r\n\r\n\t\t\t\t\toElm.fn.initSelectOptions(true);\r\n\r\n\t\t\t\t}).change();\r\n\r\n\t\t\t}, //end fn\r\n\r\n      /**\r\n       * Add the form buttons\r\n       * @method function\r\n       * @return {[type]} [description]\r\n       */\r\n\t\t\tprocessBtns : function() {\r\n\t\t\t\tvar btnPanel = $('<div/>', { 'class' : 'panel-btns header' } ),\r\n            btnFooter = $('<div/>', { 'class' : 'panel-btns footer' } );\r\n\r\n\t\t\t\t_.each( self.options.btns, function( o, key ) {\r\n          if (o.type === 'button') {\r\n            var inpt = $('<button/>',o).html(o.value);\r\n          } else {\r\n            var inpt = $('<input/>', o);\r\n          }\r\n\r\n\t\t\t\t\tbtnPanel.append( inpt );\r\n          btnFooter.append( inpt.clone() );\r\n\t\t\t\t});\r\n\r\n        self.DOM.$Inpts.append([btnPanel, btnFooter]);\r\n\t\t\t}, //end fn\r\n\r\n\t\t\tsubmit : function() {\r\n\r\n        self.fn.toggleSubmitted();\r\n\r\n        $.ajax({\r\n          //dataType : 'json',\r\n          method : 'POST',\r\n          url : self.options.atts.action,\r\n          data : self.$().serialize(),\r\n          success : self.callback.submit,\r\n        }).done( self.fn.toggleSubmitted );\r\n\r\n      }, //end fn\r\n\r\n      toggleSubmitted : function() {\r\n        if (!self.submitted) {\r\n          self.submitted = true;\r\n          //self.oElms['btn_go'].fn.disable();\r\n        } else {\r\n          self.submitted = false;\r\n          //self.oElms['btn_go'].fn.enable();\r\n        }\r\n      }\r\n\r\n\t\t}; // end fns\r\n\r\n    // alias the submit function\r\n    this.submit = this.fn.submit;\r\n\r\n\t\tthis.callback = {\r\n\r\n\t\t\tgetRowData : function(response) {\r\n        var oInpt, $inpt;\r\n\r\n        if (typeof response[0] !== 'undefined') {\r\n          response = response[0];\r\n        }\r\n\r\n        self.rowData = response;\r\n\r\n\t\t\t\tself.DOM.$frm.clearForm();\r\n\r\n\t\t\t\t_.each( response, function( value, key ) {\r\n          jApp.log('Setting up input ' + key);\r\n          jApp.log(value);\r\n\r\n          if ( typeof self.oInpts[key] === 'undefined' || typeof self.oInpts[key].$ !== 'function' ) {\r\n            jApp.log('No input associated with this key.');\r\n            return false;\r\n          }\r\n\r\n          oInpt = self.oInpts[key];\r\n          $inpt = oInpt.$();\r\n\r\n          // enable the input\r\n          oInpt.fn.enable();\r\n\r\n\t\t\t\t\tif (value != null && value.indexOf('|') !== -1 && key !== '_labelssource' && key !== '_optionssource') {\r\n\t\t\t\t\t\tvalue = value.split('|');\r\n\t\t\t\t\t}\r\n\r\n          if (typeof value === 'object' && !!_.pluck(value,'name').length && typeof $inpt.attr('data-tokens') !== 'undefined' ) {\r\n            $inpt.tokenfield('setTokens', _.pluck(value,'name'));\r\n          }\r\n          else if (typeof value === 'object' && !!_.pluck(value,'id').length) {\r\n            oInpt.fn.val(_.pluck(value,'id'));\r\n          } else {\r\n            oInpt.fn.val(value);\r\n          }\r\n\t\t\t\t\tif (oInpt.options.atts.type === 'select') {\r\n\t\t\t\t\t\t$inpt.multiselect('refresh').change();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself.DOM.$frm.find('.bsms').multiselect('refresh');\r\n\t\t\t\t$('.panel-overlay').hide();\r\n\t\t\t},\r\n\r\n      // do something with the response\r\n      submit : function(response) {\r\n        console.log(response);\r\n      }\r\n\t\t}; // end fns\r\n\r\n\r\n\r\n\t\t// initialize\r\n\t\tthis.fn._init();\r\n\r\n\t} // end jForm declaration\r\n\r\n\twindow.jForm = jForm; // add to global scope\r\n\r\n})(window, $, jQuery);\r\n","/* jshint ignore:start */\r\n/**  **  **  **  **  **  **  **  **  **  **  **  **  **  **  **  **\r\n *\r\n *  jInput.class.js - Custom Form Input JS class\r\n *\r\n *  Defines the properties and methods of the\r\n *  custom input class.\r\n *\r\n *  Jeremy Bloomstrom | jeremy@in.genio.us\r\n *\r\n *  Created: \t\t4/20/15\r\n *  Last Updated: \t4/20/15\r\n *\r\n *  Prereqs: \tjQuery, underscore.js, jStorage.js\r\n *\r\n *  Changelog:\r\n *   4-20-15\tCreated the jInput class\r\n *\r\n *   4-30-15\tAdded the feedback icon container and help block container\r\n */\r\n// javascript closure\r\n/* jshint ignore:end */\r\n;(function( window, $) {\r\n\r\n\t'use strict';\r\n\r\n\tvar jInput = function( options ) {\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   VARS\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\r\n\t\t// alias this\r\n\t\tvar self = this;\r\n\t\tthis.store = $.jStorage;\r\n\t\tthis.readonly = false;\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n\t\t *   DEFAULT OPTIONS\r\n\t\t *\r\n\t\t *  Set the default options for the\r\n\t\t *  instance here. Any values specified\r\n\t\t *  at runtime will overwrite these\r\n\t\t *  values.\r\n\t\t **  **  **  **  **  **  **  **  **  **/\r\n\r\n\t\tthis.options = {\r\n\t\t\t// html attributes\r\n\t\t\tatts : {\r\n\t\t\t\t'type' : 'text',\r\n\t\t\t\t'class' : 'form-control'\r\n\t\t\t},\r\n\r\n\t\t\t// DOM presentation options\r\n\t\t\tparent : $('<div/>', { 'class' : 'form_element has-feedback'}),\r\n\r\n\t\t\t// wrap - wrap the label and input elements with something e.g. <div></div>\r\n\t\t\twrap : false,\r\n\r\n\t\t\t// separator - separate the label and input elements\r\n\t\t\tseparator : true,\r\n\r\n\t\t\t// external data for options, etc.\r\n\t\t\textData : false,\r\n\r\n\t\t\t// TTL for external data (mins)\r\n\t\t\tttl : 10,\r\n\r\n\t\t\t// cache options locally\r\n\t\t\tcache : true,\r\n\r\n\t\t\t// hide if no options\r\n\t\t\thideIfNoOptions : false,\r\n\r\n\t\t\t// multiselect defaults\r\n\t\t\tbsmsDefaults : {\t\t\t\t\t\t\t\t\t// bootstrap multiselect default options\r\n\t\t\t\t//buttonContainer : '<div class=\"btn-group\" />',\r\n\t\t\t\tenableCaseInsensitiveFiltering: true,\r\n\t\t\t\tincludeSelectAllOption: true,\r\n\t\t\t\tmaxHeight: 185,\r\n\t\t\t\tnumberDisplayed: 1,\r\n\t\t\t\tdropUp: true\r\n\t\t\t},\r\n\r\n\t\t}; // end options\r\n\r\n\t\t// set the runtime values for the options\r\n\t\t$.extend(true,this.options, { atts : { 'id' : this.options.atts.name } }, options);\r\n\r\n\t\tthis.readonly = (this.options.atts.readonly === 'readonly') ? true : false;\r\n\r\n\t\t// alias to attributes object\r\n\t\tvar oAtts = self.options.atts;\r\n\r\n\t\toAtts.name = (Number(oAtts.multiple) || oAtts.multiple === true || oAtts.multiple === 'multiple') ? oAtts.name.replace('[]','') + '[]' : oAtts.name;\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   ALLOWABLE ATTRIBUTES BY INPUT TYPE\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.allowedAtts = {\r\n\t\t\tdate : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\r\n\t\t\tdatetime : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\r\n\t\t\t'datetime-local' :\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\r\n\t\t\tmonth : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\r\n\t\t\ttime : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\r\n\t\t\tweek : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\r\n\r\n\t\t\turl : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\r\n\t\t\ttext : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\r\n\t\t\ttokens :\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\r\n\t\t\tsearch : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\r\n\r\n\t\t\tnumber : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','placeholder','readOnly','required','step','type','value'],\r\n\t\t\trange : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','step','type','value'],\r\n\r\n\t\t\tpassword : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\r\n\r\n\t\t\tbutton : \t\t\t['autofocus','defaultValue','disabled','form','name','type','value'],\r\n\t\t\treset : \t\t\t['autofocus','defaultValue','disabled','form','name','type','value'],\r\n\t\t\tsubmit : \t\t\t['autofocus','defaultValue','disabled','form','name','type','value'],\r\n\r\n\t\t\tradio : \t\t\t['autofocus','checked','defaultChecked','defaultValue','disabled','form','name','required','type','value'],\r\n\t\t\tcheckbox : \t\t\t['autofocus','checked','defaultChecked','defaultValue','disabled','form','indeterminate','name','required','type','value'],\r\n\r\n\t\t\tfile : \t\t\t\t['accept','autofocus','defaultValue','disabled','files','form','multiple','name','required','type','value'],\r\n\r\n\t\t\thidden : \t\t\t['defaultValue','form','name','type','value','readonly'],\r\n\r\n\t\t\timage : \t\t\t['alt','autofocus','defaultValue','disabled','form','height','name','src','type','value','width'],\r\n\r\n\t\t\tselect : \t\t\t['disabled','form','multiple','name','size','type','value','_linkedElmID','_linkedElmFilterCol','_linkedElmLabels','_linkedElmOptions'],\r\n\r\n\t\t\ttextarea : \t\t\t['autofocus','cols','defaultValue','disabled','form','maxLength','name','placeholder','readOnly','required','rows','type','value','wrap'],\r\n\r\n\t\t\tcolor : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','name','type','value'],\r\n\r\n\t\t\temail : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','multiple','name','pattern','placeholder','readOnly','required','size','type','value'],\r\n\t\t\ttel : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','pattern','placeholder','readOnly','required','size','type','value'],\r\n\t\t}; // end allowable attributes\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   ALLOWABLE COLPARAMS BY INPUT TYPE\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.allowedColParams = {\r\n\t\t\tradio : \t\t\t['_labelssource','_optionssource','_optionsfilter'],\r\n\t\t\tselect : \t\t\t['_firstoption','_firstlabel','_labelssource','_optionssource','_optionsfilter'],\r\n\t\t}; // end allowable attributes\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   DISALLOWABLE COLPARAMS BY INPUT TYPE\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.disallowedColParams = {\r\n\t\t\thidden : \t\t\t['_label','onClick','onChange'],\r\n\t\t}; // end allowable attributes\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   GLOBAL HTML ATTRIBUTES TO ALLOW\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.globalAtts = [\r\n\t\t\t'accesskey', 'class', 'contenteditable', 'contextmenu', 'dir',\r\n\t\t\t'draggable', 'dropzone', 'hidden', 'id', 'lang', 'lang',\r\n\t\t\t'spellcheck', 'style', 'tabindex', 'title', 'translate',\r\n\t\t\t'data-validType', 'readonly', 'required', 'onClick', 'onChange', 'form'\r\n\t\t];\r\n\r\n\t\tthis.globalColParams = [\r\n\t\t\t'_enabled', '_label', 'data-fieldset', 'data-ordering', 'data-validType-template', 'type'\r\n\t\t];\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   DOM ELEMENTS\r\n \t\t *\r\n \t\t *  These placeholders get replaced\r\n \t\t *  by their jQuery handles\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.DOM = {\r\n\t\t\t$prnt : false,\r\n\t\t\t$inpt : false,\r\n\t\t\t$lbl  : false,\r\n\t\t};\r\n\r\n\t\tthis.$ = function() {\r\n\t\t\treturn self.DOM.$inpt;\r\n\t\t};\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   FUNCTION DEFS\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.fn = {\r\n\r\n\r\n\t\t\t_init : function() {\r\n\t\t\t\tvar $br = (!!self.options.separator) ? $('<br/>') : false;\r\n\t\t\t\tself.type = oAtts.type;\r\n\r\n\t\t\t\t//set the parent element\r\n\t\t\t\tself.DOM.$prnt = self.options.parent;\r\n\r\n\t\t\t\t//create the label\r\n\t\t\t\tif ( self.type !== 'hidden' ) {\r\n\t\t\t\t\tself.DOM.$lbl = $('<label/>', { 'for' : oAtts.id } )\r\n\t\t\t\t\t\t\t\t  .html( oAtts._label )\r\n\t\t\t\t\t\t\t\t  .wrap( self.options.wrap );\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//create the input element\r\n\t\t\t\tswitch ( self.type ) {\r\n\t\t\t\t\tcase 'textarea' :\r\n\t\t\t\t\t\tself.DOM.$inpt = $('<textarea/>', self.fn.getAtts() ).wrap( self.options.wrap );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'select' :\r\n\t\t\t\t\t\tself.DOM.$inpt = $('<select/>', self.fn.getAtts() ).wrap( self.options.wrap );\r\n\t\t\t\t\t\tself.fn.initSelectOptions();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'tokens' :\r\n\t\t\t\t\t\tjApp.log('Tokens Attributes')\r\n\t\t\t\t\t\tjApp.log($.extend(true, self.fn.getAtts(), { type : 'text', 'data-tokens' : true, 'data-url' : self.fn.getExtUrl('tokens')} ));\r\n\t\t\t\t\t\tself.DOM.$inpt = $('<input/>', $.extend(true, self.fn.getAtts(), { type : 'text', 'data-tokens' : true, 'data-url' : self.fn.getExtUrl('tokens')} ) );\r\n\t\t\t\t\t\tself.fn.getExtOptions();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'radio' :\r\n\t\t\t\t\tcase 'checkbox' :\r\n\t\t\t\t\t\toAtts._options = [];\r\n\t\t\t\t\t\toAtts._labels = [];\r\n\t\t\t\t\t\t// determine if we are loading options from an external source (db)\r\n\t\t\t\t\t\tif ( typeof oAtts._labelssource !== 'undefined' && oAtts._labelssource.indexOf('.') !== -1 ) {\r\n\t\t\t\t\t\t\tself.options.extData = true;\r\n\t\t\t\t\t\t\tself.fn.getExtOptions();\r\n\t\t\t\t\t\t} else { // options are loaded locally\r\n\t\t\t\t\t\t\tif ( typeof oAtts._labelssource !== 'undefined' && typeof oAtts._optionssource !== 'undefined') {\r\n\t\t\t\t\t\t\t\toAtts._options = oAtts._optionssource.split('|');\r\n\t\t\t\t\t\t\t\toAtts._labels = ( !!oAtts._labelssource ) ?\r\n\t\t\t\t\t\t\t\t\toAtts._labelssource.split('|') :\r\n\t\t\t\t\t\t\t\t\toAtts._optionssource.split('|');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t// shift off the first elements of the labels and options arrays and create the first radio element\r\n\t\t\t\t\t\tvar firstOpt = (typeof oAtts._options[0] !== 'undefined') ? oAtts._options[0] : false;\r\n\t\t\t\t\t\tvar firstLbl = (typeof oAtts._labels[0] !== 'undefined') ?  oAtts._labels[0] : false;\r\n\r\n\t\t\t\t\t\t// set the attributes of the first element\r\n\t\t\t\t\t\tvar atts = _.extend( self.fn.getAtts(), {\r\n\t\t\t\t\t\t\t'value' : firstOpt,\r\n\t\t\t\t\t\t\t'checked' : ( _.indexOf( oAtts.value, firstOpt ) !== -1 ) ? 'checked' : '',\r\n\t\t\t\t\t\t\t'id' : oAtts.name + '_0'\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// add the first element\r\n\t\t\t\t\t\tself.DOM.$inpt = $('<label/>', {'class' : 'form-control'})\r\n\t\t\t\t\t\t\t\t\t\t\t.append( $('<input/>', atts) )\r\n\t\t\t\t\t\t\t\t\t\t\t.append( $('<div/>', { style : 'width:200px' }).html( firstLbl ) )\r\n\t\t\t\t\t\t\t\t\t\t\t.wrap('<div class=\"radio-group\"></div>');\r\n\r\n\t\t\t\t\t\t//iterate through the remaining options\r\n\t\t\t\t\t\t_.each( oAtts._options, function( v, k ) {\r\n\t\t\t\t\t\t\tif ( k>0 ) { // skip the first one\r\n\t\t\t\t\t\t\t\tvar lbl = oAtts._labels[k];\r\n\t\t\t\t\t\t\t\tvar atts = _.extend( self.fn.getAtts(), {\r\n\t\t\t\t\t\t\t\t\t'value' : v,\r\n\t\t\t\t\t\t\t\t\t'checked' : ( _.indexOf( oAtts.value, v ) !== -1 ) ? 'checked' : false,\r\n\t\t\t\t\t\t\t\t\t'id' : oAtts.name + '_' + k,\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// add the radio options\r\n\t\t\t\t\t\t\t\tself.DOM.$inpt\r\n\t\t\t\t\t\t\t\t.after( $('<label/>', {'class' : 'form-control'})\r\n\t\t\t\t\t\t\t\t  .append( $('<input/>', atts) )\r\n\t\t\t\t\t\t\t\t  .append( $('<div/>', { style : 'width:200px' } ).html( lbl ) )\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}); // end each\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'button' :\r\n\t\t\t\t\t\tself.DOM.$inpt = $('<button/>', self.fn.getAtts() ).html(oAtts.value).wrap(self.options.wrap );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tself.DOM.$inpt = $('<input/>', self.fn.getAtts() ).wrap( self.options.wrap );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// assign a reference to the jInput object to the DOM element\r\n\t\t\t\tself.DOM.$inpt.data('jInput',self);\r\n\r\n\t\t\t\t//bind change handler to keep this object updated\r\n\t\t\t\tself.DOM.$inpt.off('change.jInput').on('change.jInput', function() {\r\n\t\t\t\t\toAtts.value = $(this).val();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t//append the label, if applicable\r\n\t\t\t\tif (!!self.DOM.$lbl && self.type !== 'hidden' && oAtts._label != null) {\r\n\t\t\t\t\tself.DOM.$prnt\r\n\t\t\t\t\t .append(  ( !!self.DOM.$lbl.parents().length ) ? self.DOM.$lbl.parents().last() : self.DOM.$lbl );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//append the separator, if applicable\r\n\t\t\t\tif (!!self.options.separator && self.type !== 'hidden' && oAtts._label != null) {\r\n\t\t\t\t\tself.DOM.$prnt.append( $br.clone() );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//append the input\r\n\t\t\t\tself.DOM.$prnt.append( ( !!self.DOM.$inpt.parents().length ) ? self.DOM.$inpt.parents().last() : self.DOM.$inpt );\r\n\r\n\t\t\t\t//append the feedback icon container and help block\r\n\t\t\t\tself.DOM.$prnt.append( $('<i/>', { class : 'form-control-feedback glyphicon', style : 'display:none'}) );\r\n\t\t\t\tself.DOM.$prnt.append( $('<small/>', { class : 'help-block', style : 'display:none' }));\r\n\r\n\t\t\t\t//update reference to $inpt for radio groups\r\n\t\t\t\tif (self.type === 'radio') {\r\n\t\t\t\t\tself.DOM.$inpt = self.DOM.$prnt.find( '[name=' + oAtts.name + ']' );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//place in DOM\r\n\t\t\t\t//self.DOM.$prnt.appendTo('body');\r\n\r\n\r\n\t\t\t}, // end fn\r\n\r\n\t\t\tgetAtts : function( ) {\r\n\t\t\t\tvar gblAtts = self.globalAtts;\r\n\t\t\t\tvar stdAtts = self.allowedAtts[ self.type ];\r\n\t\t\t\tvar allowedAttributes = _.union(stdAtts,gblAtts);\r\n\r\n\t\t\t\t//console.log( 'allowed attributes ' + oAtts.name );\r\n\t\t\t\t//console.log( allowedAttributes );\r\n\r\n\t\t\t\tvar filteredAtts = _.pick( oAtts, function( value, key) {\r\n\t\t\t\t\tif ( \ttypeof value === 'undefined' ||\r\n\t\t\t\t\t\t\ttypeof value === 'object' ||\r\n\t\t\t\t\t\t\t!value ||\r\n\t\t\t\t\t\t\tvalue == '__OFF__' ||\r\n\t\t\t\t\t\t\tvalue == '__off__' ||\r\n\t\t\t\t\t\t\t\t( _.indexOf( allowedAttributes, key ) === -1 && key.indexOf('data-') === -1 )\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t//console.log(key + ' not allowed for ' + oAtts.name);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//console.log(key + ' allowed for ' + oAtts.name);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t//console.log(filteredAtts);\r\n\t\t\t\treturn filteredAtts;\r\n\t\t\t},\r\n\r\n\t\t\thide : function() {\r\n\t\t\t\tself.DOM.$prnt.hide();\r\n\t\t\t\treturn self.fn;\r\n\t\t\t},\r\n\r\n\t\t\tshow : function() {\r\n\t\t\t\tself.DOM.$prnt.show();\r\n\t\t\t\treturn self.fn;\r\n\t\t\t},\r\n\r\n\t\t\tdisable : function() {\r\n\t\t\t\tif (oAtts.type !== 'hidden') {\r\n\t\t\t\t\tself.DOM.$inpt.prop('disabled',true);\r\n\t\t\t\t\tself.DOM.$inpt.addClass('disabled');\r\n\t\t\t\t}\r\n\t\t\t\treturn self.fn;\r\n\t\t\t},\r\n\r\n\t\t\tenable : function() {\r\n\t\t\t\tself.DOM.$inpt.prop('disabled',false);\r\n\t\t\t\tself.DOM.$inpt.removeClass('disabled');\r\n\t\t\t\treturn self.fn;\r\n\t\t\t},\r\n\r\n\t\t\tsetTTL : function(ttl) {\r\n\t\t\t\tself.store.setTTL( ttl );\r\n\t\t\t}, //end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Initialize the select options\r\n\t\t\t * @param  {[type]} refresh [description]\r\n\t\t\t * @return {[type]}         [description]\r\n\t\t\t */\r\n\t\t\tinitSelectOptions : function(refresh) {\r\n\r\n\t\t\t\t//console.log('Initializing Select Options');\r\n\t\t\t\t//console.log(oAtts);\r\n\r\n\t\t\t\tself.refreshAfterLoadingOptions = (!!refresh) ? true : false;\r\n\r\n\t\t\t\t// local data\r\n\t\t\t\tif ( oAtts._optionssource != null && oAtts._optionssource.indexOf('|') !== -1 ) {\r\n\t\t\t\t\tjApp.log(' - local options data - ');\r\n\t\t\t\t\tself.options.extData = false;\r\n\t\t\t\t\toAtts._options = oAtts._optionssource.split('|');\r\n\t\t\t\t\toAtts._labels = ( !!oAtts._labelssource ) ?\r\n\t\t\t\t\t\toAtts._labelssource.split('|') :\r\n\t\t\t\t\t\toAtts._optionssource.split('|');\r\n\t\t\t\t\tself.fn.buildOptions();\r\n\t\t\t\t}\r\n\t\t\t\t// external data\r\n\t\t\t\telse if ( oAtts._optionssource != null && oAtts._optionssource.indexOf('.') !== -1 ) {\r\n\t\t\t\t\tjApp.log(' - external options data -');\r\n\t\t\t\t\tself.options.extData = true;\r\n\t\t\t\t\t//console.log('Getting External Options');\r\n\t\t\t\t\tself.fn.getExtOptions();\r\n\t\t\t\t}\r\n\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Get the external url of the options\r\n\t\t\t * @return {[type]} [description]\r\n\t\t\t */\r\n\t\t\tgetExtUrl : function( type ) {\r\n\t\t\t\tvar model, lbl, opt, tmp;\r\n\r\n\t\t\t\ttype = (type != null) ? type : oAtts.type;\r\n\r\n\t\t\t\ttmp = oAtts._labelssource.split('.');\r\n\t\t\t\tself.model = model = tmp[0]; // db table that contains option/label pairs\r\n\t\t\t\tlbl = tmp[1]; // db column that contains labels\r\n\t\t\t\topt = oAtts._optionssource.split('.')[1];\r\n\t\t\t\t//where = ( !!oAtts._optionsFilter && !!oAtts._optionsFilter.length ) ? oAtts._optionsFilter : '1=1';\r\n\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase 'select' :\r\n\t\t\t\t\t\treturn \"/selopts/_\" + model + \"_\" + opt + \"_\" + lbl;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\treturn \"/tokenopts/_\" + model + \"_\" + opt + \"_\" + lbl;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}, // end fn\r\n\r\n\t\t\tgetModel : function() {\r\n\t\t\t\tvar tmp = oAtts._optionssource.split('.');\r\n\t\t\t\treturn tmp[0];\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Retrieve external options\r\n\t\t\t * @param  {[type]}   force    [description]\r\n\t\t\t * @param  {Function} callback [description]\r\n\t\t\t * @return {[type]}            [description]\r\n\t\t\t */\r\n\t\t\tgetExtOptions : function( force, callback ) {\r\n\t\t\t\tconsole.log('getting external options');\r\n\t\t\t\tself.options.extData = true;\r\n\r\n\t\t\t\tforce = ( typeof force !== 'undefined' ) ? force : false;\r\n\r\n\t\t\t\t// use the copy in storage if available;\r\n\t\t\t\tif (!force && self.options.cache && !!self.store.get( 'selectOptions_' + self.options.atts.name, false )) {\r\n\t\t\t\t\t//console.log('using local copy of options');\r\n\t\t\t\t\treturn self.fn.buildOptions( JSON.parse( self.store.get( 'selectOptions_' + self.options.atts.name ) ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar url, data;\r\n\r\n\t\t\t\turl = self.fn.getExtUrl();\r\n\t\t\t\tdata = {};\r\n\r\n\t\t\t\tself.buildOptionsCallback = callback;\r\n\r\n\t\t\t\t//console.log('executing request for external options');\r\n\t\t\t\t$.getJSON( url, data, self.fn.buildOptions )\r\n\t\t\t\t .always( function() {\r\n\t\t\t\t\t\tif (self.options.cache) {\r\n\t\t\t\t\t\t\tself.store.setTTL( 'selectOptions_' + self.options.atts.name, 1000*60*self.options.ttl ); // expire in 10 mins.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t });\r\n\t\t\t},\r\n\r\n\t\t\tbuildOptions : function( data ) {\r\n\t\t\t\t// load JSON data if applicable\r\n\t\t\t\tif (data != null) {\r\n\t\t\t\t\tself.JSON = data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (oAtts.type === 'select') {\r\n\t\t\t\t\tself.fn.populateSelectOptions()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.fn.populateTokensOptions();\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tpopulateTokensOptions : function() {\r\n\t\t\t\tjApp.log('--- Building TokenField Input ---');\r\n\t\t\t\tjApp.log(self.JSON);\r\n\r\n\t\t\t\tself.DOM.$inpt.data( 'tokenFieldSource', _.pluck( self.JSON, 'name' ) );\r\n\t\t\t}, //end fn\r\n\r\n\t\t\tpopulateSelectOptions : function() {\r\n\r\n\t\t\t\t// grab the external data if applicable\r\n\t\t\t\tif (self.options.extData ) {\r\n\t\t\t\t\toAtts._labels = _.pluck(self.JSON,'label');\r\n\t\t\t\t\toAtts._options = _.pluck(self.JSON,'option');\r\n\r\n\t\t\t\t\tif (self.options.cache) {\r\n\t\t\t\t\t\tself.store.set( 'selectOptions_' + self.options.atts.name, JSON.stringify(self.JSON) );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// hide if empty options\r\n\t\t\t\tif ( ( !oAtts._options || !oAtts._options.length ) && !!self.options.hideIfNoOptions ) {\r\n\t\t\t\t\t//console.log('Hiding the element because there are no options ' + oAtts.name)\r\n\t\t\t\t\treturn self.fn.disable().hide();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.fn.enable().show();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// remove all options\r\n\t\t\t\tself.DOM.$inpt.find('option').remove();\r\n\r\n\t\t\t\t// append first option if applicable\r\n\t\t\t\tif (!!oAtts._firstlabel) {\r\n\t\t\t\t\tvar firstOption = (!!oAtts._firstoption) ? oAtts._firstoption : '';\r\n\t\t\t\t\tself.DOM.$inpt.append(\r\n\t\t\t\t\t\t$('<option/>', { value : firstOption }).html( oAtts._firstlabel )\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// iterate over the label/value pairs and build the options\r\n\t\t\t\t_.each( oAtts._options, function( v, k ) {\r\n\t\t\t\t\tself.DOM.$inpt.append(\r\n\t\t\t\t\t\t// determine if the current value is currently selected\r\n\t\t\t\t\t\t( _.indexOf( oAtts.value, v ) !== -1 || ( !!self.$().attr('data-value') &&  _.indexOf( self.$().attr('data-value').split('|'), v ) !== -1 )) ?\r\n\t\t\t\t\t\t\t$('<option/>', { value : v, 'selected' : 'selected' }).html( oAtts._labels[k] ) :\r\n\t\t\t\t\t\t\t$('<option/>', { value : (!!v) ? v : '' }).html( oAtts._labels[k] )\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// remove the unneeded data-value attribute\r\n\t\t\t\tself.$().removeAttr('data-value');\r\n\r\n\t\t\t\t// call the callback if applicable\r\n\t\t\t\tif (typeof self.buildOptionsCallback === 'function') {\r\n\t\t\t\t\tself.buildOptionsCallback();\r\n\t\t\t\t\tdelete self.buildOptionsCallback;\r\n\t\t\t\t}\r\n\r\n\t\t\t}, // end fn\r\n\r\n\t\t\tattr : function( key, value ) {\r\n\t\t\t\tif (typeof key === 'object') {\r\n\t\t\t\t\t//console.log( 'Setting the attrs' );\r\n\t\t\t\t\t//console.log(key);\r\n\t\t\t\t\t_.each( key, function( v, k ) {\r\n\t\t\t\t\t\toAtts[k] = v;\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//console.log(oAtts);\r\n\t\t\t\t\tself.fn.refresh();\r\n\t\t\t\t} else if (!!value) {\r\n\t\t\t\t\tself.options.atts[key] = value;\r\n\t\t\t\t\tself.fn.refresh();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn oAtts[key];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tval : function( value ) {\r\n\r\n\t\t\t\tif (!!value) {\r\n\t\t\t\t\tif (typeof value !== 'object') {\r\n\t\t\t\t\t\tif (oAtts.name == '_labelssource' || oAtts.name == '_optionssource') {\r\n\t\t\t\t\t\t\tvalue = value.replace(/\\,/gi,'|');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tself.$().attr('data-value',value);\r\n\t\t\t\t\t\treturn self.fn.attr('value',[value]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tself.$().attr('data-value',value.join('|'));\r\n\t\t\t\t\t\treturn self.fn.attr('value',value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch( self.type ) {\r\n\t\t\t\t\tcase 'radio' :\r\n\t\t\t\t\tcase 'checkbox' :\r\n\t\t\t\t\t\treturn $.map( self.DOM.$prnt.find(':checked'), function(elm, i) {\r\n\t\t\t\t\t\t\treturn $(elm).val();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\treturn self.DOM.$inpt.val();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\trefresh : function() {\r\n\t\t\t\t_.each( self.fn.getAtts(), function(v, k) {\r\n\t\t\t\t\tif ( k !== 'type' ) { // cannot refresh type\r\n\t\t\t\t\t\tself.DOM.$inpt.attr(k,v);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tself.DOM.$inpt.val( oAtts.value );\r\n\t\t\t},\r\n\r\n\t\t\trender : function() {\r\n\t\t\t\treturn self.DOM.$prnt.prop('outerHTML');\r\n\t\t\t},\r\n\r\n\t\t\thandle : function() {\r\n\t\t\t\treturn self.DOM.$prnt;\r\n\t\t\t},\r\n\r\n\t\t\tmultiselectDestroy : function() {\r\n\t\t\t\tself.$().multiselect('destroy');\r\n\t\t\t}, // end fn\r\n\r\n\t\t\tmultiselectRefresh : function() {\r\n\t\t\t\tif ( !self.options.extData ) { return false; }\r\n\r\n\t\t\t\t$(this).prop('disabled',true).find('i').addClass('fa-spin');\r\n\r\n\t\t\t\tself.$().attr('data-tmpVal', self.$().val() || '' )\r\n\t\t\t\t\t\t.val('')\r\n\t\t\t\t\t\t.multiselect('refresh')\r\n\t\t\t\t\t\t//.multiselect('disable');\r\n\r\n\t\t\t\tself.fn.getExtOptions(true, function() {\r\n\t\t\t\t\tjUtility.$currentForm()\r\n\t\t\t\t\t\t .find('.btn.btn-refresh').prop('disabled',false)\r\n\t\t\t\t\t\t\t .find('i').removeClass('fa-spin').end()\r\n\t\t\t\t\t\t .end()\r\n\t\t\t\t\t\t.find('[data-tmpVal]').each( function(i,elm) {\r\n\t\t\t\t\t\t\t$(elm).val( $(elm).attr('data-tmpVal') )\r\n\t\t\t\t\t\t\t\t.multiselect('enable')\r\n\t\t\t\t\t\t\t\t.multiselect('refresh')\r\n\t\t\t\t\t\t\t\t.multiselect('rebuild')\r\n\t\t\t\t\t\t\t\t.removeAttr('data-tmpVal')\r\n\r\n\t\t\t\t\t\t\t\t//.data('jInput').fn.multiselect();\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Add button and refresh button for multiselect elements\r\n\t\t\t * @return {[type]} [description]\r\n\t\t\t */\r\n\t\t\tmultiselectExtraButtons : function() {\r\n\t\t\t\tif ( !self.options.extData ) return self;\r\n\r\n\t\t\t\t// make an add button, if the model is not the same as the current form\r\n\t\t\t\tif ( self.fn.getModel() !== jApp.opts().model ) {\r\n\r\n\t\t\t\t\tvar frmDef = {\r\n\t\t\t\t\t\ttable : jApp.model2table( self.fn.getModel() ),\r\n\t\t\t\t\t\tpkey : 'id',\r\n\t\t\t\t\t\ttableFriendly : self.fn.getModel(),\r\n\t\t\t\t\t\tatts : { method : 'POST'}\r\n\t\t\t\t\t}, key = 'new' + self.fn.getModel() + 'Frm';\r\n\r\n\t\t\t\t\tif ( !jUtility.isFormExists( key ) ) {\r\n\t\t\t\t\t\tconsole.log('building the form: ' + key);\r\n\t\t\t\t\t\tjUtility.DOM.buildForm( frmDef, key, 'newOtherFrm', self.fn.getModel() );\r\n\t\t\t\t\t\tjUtility.processFormBindings();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar $btnAdd = $('<button/>', {\r\n\t\t\t\t\t\ttype : 'button',\r\n\t\t\t\t\t\tclass : 'btn btn-primary btn-add',\r\n\t\t\t\t\t\ttitle : 'Add ' + self.fn.getModel()\r\n\t\t\t\t\t}).html('<i class=\"fa fa-fw fa-plus\"></i> ' + self.fn.getModel() + ' <i class=\"fa fa-fw fa-external-link\"></i>')\r\n\t\t\t\t\t\t.off('click.custom').on('click.custom', function() {\r\n\r\n\t\t\t\t\t\t\tjUtility.actionHelper( 'new' + self.fn.getModel() + 'Frm' );\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\tself.DOM.$prnt.find('.btn-group .btn-add').remove().end()\r\n\t\t\t\t\t.find('.btn-group').append( $btnAdd );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar $btnRefresh = $('<button/>', {\r\n\t\t\t\t\ttype : 'button',\r\n\t\t\t\t\tclass : 'btn btn-primary btn-refresh',\r\n\t\t\t\t\ttitle : 'Refresh Options'\r\n\t\t\t\t}).html('<i class=\"fa fa-fw fa-refresh\"></i>')\r\n\t\t\t\t\t.off('click.custom').on('click.custom', self.fn.multiselectRefresh);\r\n\r\n\t\t\t\tself.DOM.$prnt.find('.btn-group .btn-refresh').remove().end()\r\n\t\t\t\t\t\t.find('.btn-group').prepend( $btnRefresh );\r\n\r\n\t\t\t\treturn self;\r\n\t\t\t}, // end fn\r\n\r\n\t\t\t/**\r\n\t\t\t * Multiselect handler\r\n\t\t\t * @return {[type]} [description]\r\n\t\t\t */\r\n\t\t\tmultiselect : function() {\r\n\t\t\t\tself.$().multiselect( self.options.bsmsDefaults ).multiselect('refresh');\r\n\t\t\t\tself.fn.multiselectExtraButtons();\r\n\t\t\t\treturn self;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// initialize\r\n\t\tthis.fn._init();\r\n\r\n\t}; // end jInput declaration\r\n\r\n\twindow.jInput = jInput; // add to global scope\r\n\r\n})( window, $);\r\n","/**  **  **  **  **  **  **  **  **  **  **  **  **  **  **  **  **\r\n *\r\n *  jLinkTable.class.js - Aysnc Grid LinkTable Class\r\n *\r\n *  Matsu Borough IT Dashboard\r\n *\r\n *  Defines the properties and methods of the\r\n *  custom LinkTable Class.\r\n *\r\n *  Jeremy Bloomstrom | jeremy.bloomstrom@matsugov.us\r\n *  Programmer Analyst\r\n *  Matsu Borough IT\r\n *\r\n *  Created: \t\t5/1/15\r\n *  Last Updated: \t4/20/15\r\n *\r\n *  Prereqs: \tjQuery, jStorage.js\r\n *\r\n *  Changelog:\r\n *   5-1-15\t\tCreated the class\r\n *\r\n */\r\n// javascript closure\r\n;(function( window, jQuery, $, jInput, jForm, jApp ) {\r\n\r\n\t'use strict';\r\n\r\n\tvar jLinkTable = function( options ) {\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   VARS\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\r\n\t\t// alias this\r\n\t\tvar self = this;\r\n\t\tthis.store = $.jStorage;\r\n\t\tthis.form = {};\r\n\t\tthis.linkTable = '';\r\n\t\tthis.colParams = [];\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n\t\t *   DEFAULT OPTIONS\r\n\t\t *\r\n\t\t *  Set the default options for the\r\n\t\t *  instance here. Any values specified\r\n\t\t *  at runtime will overwrite these\r\n\t\t *  values.\r\n\t\t **  **  **  **  **  **  **  **  **  **/\r\n\r\n\t\tthis.options = {\r\n\r\n\t\t\toFrm : {},\r\n\r\n\t\t\t// the name of the input element\r\n\t\t\tselectLabel : '',\r\n\t\t\tselectName : '',\r\n\r\n\t\t\t// the eloquent model name, value column and label column\r\n\t\t\tmodel : '',\r\n\t\t\tvalueColumn : '',\r\n\t\t\tlabelColumn: '',\r\n\r\n\t\t\t// whether to allow multiple\r\n\t\t\tmultiple : true,\r\n\r\n\t\t\t// whether the value is required\r\n\t\t\trequired : false,\r\n\r\n\t\t\t// html attributes\r\n\t\t\tatts : {\r\n\t\t\t\t'type' : 'text',\r\n\t\t\t\t'class' : 'form-control'\r\n\t\t\t},\r\n\r\n\t\t\t// external data for tables, etc.\r\n\t\t\textData : false,\r\n\r\n\t\t\t// TTL for external data (mins)\r\n\t\t\tttl : 60*60000,\r\n\r\n\t\t\t// callback for the completed colParams\r\n\t\t\tcallback : alert,\r\n\r\n\t\t}; // end options\r\n\r\n\t\t// set the runtime values for the options\r\n\t\t$.extend(true,this.options, options);\r\n\r\n\t\t/**  **  **  **  **  **  **  **  **  **\r\n \t\t *   FUNCTION DEFS\r\n \t\t **  **  **  **  **  **  **  **  **  **/\r\n\t\tthis.fn = {\r\n\r\n\t\t\t_init : function() {\r\n\t\t\t\tself.colParams = [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttype : 'select',\r\n\t\t\t\t\t\t\tname : self.options.selectName,\r\n\t\t\t\t\t\t\tmultiple : self.options.multiple,\r\n\t\t\t\t\t\t\t_label : self.options.selectLabel,\r\n\t\t\t\t\t\t\t_optionssource : self.options.model + '.' + self.options.valueColumn,\r\n\t\t\t\t\t\t\t_labelssource : self.options.model + '.' + self.options.labelColumn,\r\n\t\t\t\t\t\t\t_firstlabel : (!!self.options.multiple) ? false : '--Choose--',\r\n\t\t\t\t\t\t\t_firstoption : (!!self.options.multiple) ? false : '0',\r\n\t\t\t\t\t\t\trequired : (!!self.options.required) ? 'required' : '__OFF__',\r\n\t\t\t\t\t\t\t'data-validType' : (!!self.options.required) ? 'select' : '__OFF__',\r\n\t\t\t\t\t\t\t'data-fieldset' : 3,\r\n\t\t\t\t\t\t\t'data-ordering' : 3\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t];\r\n\r\n\r\n\t\t\t}, // end fn\r\n\t\t}\r\n\r\n\t\t// initialize\r\n\t\tthis.fn._init();\r\n\r\n\t\t// callback the processed result\r\n\t\tthis.options.callback( this.colParams );\r\n\t}; // end jInput declaration\r\n\r\n\twindow.jLinkTable = jLinkTable; // add to global scope\r\n\r\n})( window, jQuery, $, jInput, jForm, jApp );\r\n","/**\r\n *  jGrid.class.js - Custom Data Grid JS class\r\n *\r\n *  Defines the properties and methods of the\r\n *  custom grid class. This version asynchronously\r\n *  keeps the grid updated by receiving JSON data\r\n *  from the server\r\n *\r\n *  Jeremy Bloomstrom | jeremy@in.genio.us\r\n *  Released under the MIT license\r\n *\r\n *  Prereqs: \tjQuery, underscore.js,\r\n *  \t\t\t\t\tjInput, jForm, $.validator\r\n *  \t\t\t  \tjApp, jUtility\r\n */\r\n\r\n;(function(window, jQuery, $, jInput, jForm, jApp, jUtility) {\r\n\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * jGrid instance constructor\r\n\t * @method function\r\n\t * @param  {object} options\r\n\t * @return /jGrid         \tjGrid instance\r\n\t */\r\n\tvar jGrid = function(options) {\r\n\r\n\t\tvar self = jApp.activeGrid = this;\r\n\r\n\t\t/**\r\n\t\t * Alias handle to the grid\r\n\t\t * @method function\r\n\t\t * @return {[type]} [description]\r\n\t\t */\r\n\t\tthis.$ = function() {\r\n\t\t\treturn self.DOM.$grid;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Declare Options vars\r\n\t\t * @type {Object}\r\n\t\t */\r\n \t\tthis.options = {\r\n \t\t\tformDefs : {},\r\n \t\t\tbind : {},\r\n\t\t\tevents : {},\r\n \t\t\tfn : {},\r\n \t\t\ttoggles : {},\r\n \t\t\tbsmsDefaults : {},\r\n \t\t\tgridHeader : {},\r\n \t\t\ttableBtns : {},\r\n \t\t\trowBtns : {},\r\n \t\t\twithSelectedBtns : {},\r\n\t\t\truntimeParams : options\r\n \t\t}; // end options\r\n\r\n\t\t/**\r\n\t\t * HTML Templates\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.html = {}\r\n\r\n\t\t/**\r\n\t\t * Container for events once they have been delegated to avoid collisions\r\n\t\t * @type {Array}\r\n\t\t */\r\n\t\tthis.delegatedEvents = [];\r\n\r\n\t\t/**\r\n\t\t * Class Methods\r\n\t\t * @type {Object}\r\n\t\t */\r\n\t\tthis.fn = {\r\n\r\n\t\t\t/**\r\n\t\t\t * init the instance\r\n\t\t\t * @method function\r\n\t\t\t * @return {[type]} [description]\r\n\t\t\t */\r\n\t\t\t_init : function() {\r\n\r\n\t\t\t\tjApp.log('1. Setting Options');\r\n\t\t\t\tjUtility.setOptions( $.extend(true, {}, jUtility.getDefaultOptions(), { tableBtns : { new : { label : 'New ' + options.model }} }, options) );\r\n\r\n\t\t\t\tjApp.log('2. Setting up html templates');\r\n\t\t\t\tjUtility.setupHtmlTemplates();\r\n\r\n\t\t\t\tjApp.log('3. Setting up initial parameters');\r\n\t\t\t\tjUtility.setInitParams();\r\n\r\n\t\t\t\tjApp.log('0. Get User Permissions');\r\n\t\t\t\tjUtility.getPermissions( options.model );\r\n\r\n\t\t\t\tjApp.log('4. Setting Ajax Defaults');\r\n\t\t\t\tjUtility.setAjaxDefaults();\r\n\r\n\t\t\t\tjApp.log('5. Initializing Template')\r\n\t\t\t\tjUtility.initializeTemplate();\r\n\r\n\t\t\t\tjApp.log('6. Getting grid data')\r\n\t\t\t\tjUtility.getGridData();\r\n\r\n\t\t\t\tjApp.log('7. Setting up intervals')\r\n\t\t\t\tjUtility.setupIntervals();\r\n\r\n\t\t\t\tjApp.log('8. Building Menus')\r\n\t\t\t\tjUtility.buildMenus();\r\n\r\n\t\t\t\tjApp.log('9. Building Forms')\r\n\t\t\t\tjUtility.buildForms();\r\n\r\n\t\t\t\tjApp.log('10. Setting up bindings')\r\n\t\t\t\tjUtility.bind();\r\n\r\n\t\t\t\tjApp.log('11. Setting up link tables')\r\n\t\t\t\tjUtility.linkTables();\r\n\r\n\r\n\r\n\t\t\t\t// toggle the mine button if needed\r\n\t\t\t\t// if ( jUtility.isToggleMine() ) {\r\n\t\t\t\t// \tself.fn.toggleMine();\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tjUtility.getCheckedOutRecords();\r\n\t\t\t\tjUtility.initScrollbar();\r\n\t\t\t}, // end fn\r\n\t\t}; // end fn defs\r\n\r\n\t\t// add any functions to this.fn\r\n\t\tthis.fn = $.extend(true,  this.fn, options.fn );\r\n\r\n\t\t// initialize\r\n\t\tthis.fn._init();\r\n\r\n\t}; // end jGrid\r\n\r\n\twindow.jGrid = jGrid;\r\n\r\n\r\n})(window, jQuery, $, jInput, jForm, jApp, jUtility);\r\n"],"sourceRoot":"/source/"}
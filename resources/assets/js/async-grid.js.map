{"version":3,"sources":["jApp.class.js","jUtility.class.js","jForm.class.js","jInput.class.js","jGrid.class.js"],"names":[],"mappings":";;;;;;;;;;;;;AAWA,CAAA,CAAA,UAAA,MAAA,EAAA;;AAEA,MAAA,IAAA,GAAA,SAAA,IAAA,GAAA;;AAEA,QAAA,IAAA,GAAA,IAAA,CAAA;;AAEA,QAAA,CAAA,KAAA,GAAA,KAAA,CAAA;;AAEA,QAAA,IAAA,CAAA,KAAA,EAAA;AACA,aAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA;AACA,OAAA,CAAA,QAAA,CAAA,KAAA,EAAA,CAAA;KACA;;AAEA,QAAA,CAAA,EAAA,GAAA;AACA,WAAA,EAAA,EAEA;;KAEA,CAAA;;AAEA,QAAA,CAAA,KAAA,GAAA;;AAEA,WAAA,EAAA,EAEA;KACA,CAAA;;AAEA,QAAA,CAAA,KAAA,GAAA;AACA,WAAA,EAAA,EAEA;KACA,CAAA;;AAEA,QAAA,CAAA,UAAA,GAAA,EAAA,CAAA;;AAEA,QAAA,CAAA,SAAA,GAAA,EAAA,CAAA;;;;;;AAMA,QAAA,CAAA,SAAA,GAAA,EAAA,CAAA;;;;;;;AAOA,QAAA,CAAA,EAAA,GAAA,YAAA;AACA,aAAA,IAAA,CAAA,UAAA,CAAA;KACA,CAAA;;;;;;;AAOA,QAAA,CAAA,WAAA,GAAA,UAAA,KAAA,EAAA;;AAEA,UAAA,cAAA,GAAA;AACA,cAAA,EAAA,QAAA;OACA,CAAA;;AAEA,aAAA,cAAA,CAAA,KAAA,CAAA,IAAA,IAAA,GACA,CAAA,KAAA,GAAA,GAAA,CAAA,CAAA,WAAA,EAAA,GACA,cAAA,CAAA,KAAA,CAAA,CAAA;KACA,CAAA;;;;;;;;AAQA,QAAA,CAAA,GAAA,GAAA,YAAA;AACA,aAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA;KACA,CAAA;;;;;;;;AASA,QAAA,CAAA,IAAA,GAAA,YAAA;AACA,aAAA,IAAA,CAAA,UAAA,CAAA,OAAA,CAAA;KACA,CAAA;;AAEA,QAAA,CAAA,GAAA,GAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA,CAAA,IAAA,CAAA,KAAA,EAAA;AACA,eAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA;OACA;KACA,CAAA;;AAEA,QAAA,CAAA,IAAA,GAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,KAAA,IAAA,CAAA,CAAA,IAAA,CAAA,KAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;OACA;KACA,CAAA;GAEA,CAAA;;AAEA,QAAA,CAAA,IAAA,GAAA,IAAA,CAAA;CAGA,CAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,IAAA,IAAA,GAAA,IAAA,IAAA,EAAA,CAAA;;;;;;;;;;;;;;AC3GA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,IAAA,EAAA;AACA,OAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACA,WAAA,IAAA,CAAA,IAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;GACA,CAAA;CACA,CAAA;;AAEA,CAAA,CAAA,UAAA,MAAA,EAAA,CAAA,EAAA,IAAA,EAAA;;AAEA,cAAA,CAAA;;AAEA,GAAA,CAAA,EAAA,CAAA,eAAA,GAAA,YAAA;AACA,QAAA,CAAA,GAAA,EAAA,CAAA;AACA,QAAA,CAAA,GAAA,IAAA,CAAA,cAAA,EAAA,CAAA;AACA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,YAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,OAAA,KAAA,CAAA;;AAEA,UAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,aAAA,CAAA,EAAA;AACA,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,eAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA,KAAA,CAAA,EAAA,MAAA,CAAA,CAAA;OACA;;AAEA,UAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA;AACA,YAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,IAAA,EAAA;AACA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;SACA;AACA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,KAAA,IAAA,EAAA,CAAA,CAAA;OACA,MAAA;AACA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA,KAAA,IAAA,EAAA,CAAA;OACA;KACA,CAAA,CAAA;AACA,WAAA,CAAA,CAAA;GACA,CAAA;;AAEA,MAAA,QAAA,GAAA;;;;;;;AAOA,mBAAA,EAAA,2BAAA;AACA,OAAA,CAAA,SAAA,CAAA;AACA,eAAA,EAAA;AACA,wBAAA,EAAA,CAAA,CAAA,yBAAA,CAAA,CAAA,IAAA,CAAA,SAAA,CAAA;SACA;OACA,CAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,uBAAA,CAAA,CAAA;KACA;;;;;;;AAOA,qBAAA,EAAA,6BAAA;;;;;AAKA,aAAA;;;;;AAKA,gBAAA,EAAA,EAAA;;;;;;AAMA,YAAA,EAAA,EAAA;;;;;;AAMA,UAAA,EAAA,EAAA;;;;;;AAMA,eAAA,EAAA;;;;;;AAMA,kBAAA,EAAA,IAAA;;;;;;AAMA,iBAAA,IAAA;;;;;;AAMA,cAAA,EAAA,IAAA;;;;;;AAMA,aAAA,EAAA,IAAA;;;;;;AAMA,cAAA,EAAA,IAAA;;;;;;AAMA,oBAAA,EAAA,IAAA;;;;;;AAMA,kBAAA,EAAA,IAAA;;;;;;AAMA,uBAAA,EAAA,IAAA;;;;;AAKA,8BAAA,EAAA,KAAA;;;;;;AAMA,sBAAA,EAAA,IAAA;;;;;;AAMA,iBAAA,EAAA,KAAA;;;;;;AAMA,kBAAA,EAAA,IAAA;;;;;;AAMA,kBAAA,EAAA,IAAA;;;;;;AAMA,qBAAA,EAAA,IAAA;;;;;;AAMA,uBAAA,EAAA,KAAA;SACA;;;;;;;;;;AAUA,uBAAA,EAAA,MAAA;;;;;;AAMA,cAAA,EAAA,mBAAA;;;;;;;;;;AAUA,WAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,KAAA,GAAA,OAAA;;;;;;AAMA,aAAA,EAAA,EAAA;;;;;;AAMA,YAAA,EAAA,IAAA;;;;;;AAMA,cAAA,EAAA,EAAA;;;;;;AAMA,eAAA,EAAA,EAAA;;;;;;AAMA,eAAA,EAAA,EAAA;;;;;;;;;;AAWA,mBAAA,EAAA,EAAA;;;;;;AAMA,eAAA,EAAA,CAAA;;;;;;AAMA,qBAAA,EAAA,EAAA;;;;;;AAMA,sBAAA,EAAA,EAAA;;;;;;AAMA,kBAAA,EAAA,UAAA;;;;;;AAMA,gBAAA,EAAA,EAAA;;;;;;AAMA,iBAAA,EAAA,EAAA;;;;;;AAMA,qBAAA,EAAA,EAAA;;;;;;AAMA,mBAAA,EAAA,GAAA;;;;;;AAMA,oBAAA,EAAA;;AAEA,wCAAA,EAAA,IAAA;AACA,gCAAA,EAAA,IAAA;AACA,mBAAA,EAAA,GAAA;AACA,yBAAA,EAAA,CAAA;AACA,gBAAA,EAAA,IAAA;SACA;;;;;;AAMA,kBAAA,EAAA;AACA,cAAA,EAAA,cAAA;AACA,qBAAA,EAAA,QAAA;AACA,kBAAA,EAAA,KAAA;SACA;;;;;;AAMA,2BAAA,EAAA,EAAA;;;;;;AAMA,iBAAA,EAAA;;AAGA,mBAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,6BAAA;AACA,cAAA,EAAA,wBAAA;AACA,gBAAA,EAAA,UAAA;AACA,iBAAA,EAAA,QAAA;AACA,wBAAA,EAAA,CAAA;WACA;;;;;;AAMA,iBAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,gBAAA,EAAA,kBAAA;AACA,qBAAA,6BAAA;AACA,gBAAA,EAAA,YAAA;AACA,iBAAA,EAAA,SAAA;AACA,wBAAA,EAAA,CAAA;WACA;;;;;;AAMA,iBAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,yBAAA;AACA,cAAA,EAAA,UAAA;AACA,gBAAA,EAAA,gBAAA;AACA,iBAAA,EAAA,KAAA;AACA,6BAAA,EAAA,gBAAA;AACA,wBAAA,EAAA,CAAA;WACA;;;;;;AAMA,uBAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,8CAAA;AACA,cAAA,EAAA,2BAAA;AACA,gBAAA,EAAA,WAAA;AACA,iBAAA,EAAA,aAAA;AACA,wBAAA,EAAA,CAAA;WACA;;;;;;AAMA,gBAAA,EAAA;;;;;WAKA;;;;;;AAMA,qBAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,qBAAA;AACA,cAAA,EAAA,kBAAA;AACA,gBAAA,EAAA,EAAA;AACA,iBAAA,EAAA,EAAA;AACA,wBAAA,EAAA,IAAA;WACA;SACA;;;;;;AAOA,eAAA,EAAA;;;;;;AAMA,iBAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,6BAAA;AACA,cAAA,EAAA,sBAAA;AACA,gBAAA,EAAA,mBAAA;AACA,iBAAA,EAAA,QAAA;WACA;;;;;;AAMA,uBAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,2BAAA;AACA,cAAA,EAAA,WAAA;AACA,gBAAA,EAAA,aAAA;AACA,iBAAA,EAAA,iBAAA;WACA;;;;;;AAMA,cAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,0BAAA;AACA,cAAA,EAAA,UAAA;AACA,gBAAA,EAAA,WAAA;AACA,iBAAA,EAAA,UAAA;AACA,6BAAA,EAAA,gBAAA;AACA,2BAAA,EAAA,KAAA;WACA;;;;;;AAMA,aAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,4BAAA;AACA,cAAA,EAAA,YAAA;AACA,gBAAA,EAAA,YAAA;AACA,iBAAA,EAAA,YAAA;;AAEA,6BAAA,EAAA,gBAAA;WACA;;;;;;AAMA,gBAAA,EAAA;;WAEA;SACA;;;;;;AAMA,wBAAA,EAAA;;;;;;AAMA,aAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,QAAA;AACA,cAAA,EAAA,YAAA;AACA,gBAAA,EAAA,YAAA;AACA,iBAAA,EAAA,qBAAA;AACA,cAAA,EAAA,QAAA;AACA,6BAAA,EAAA,gBAAA;WACA;;;;;;AAMA,gBAAA,EAAA;;WAEA;SACA;;;;;;AAMA,kBAAA,EAAA,EAAA;;OAEA,CAAA;KAEA;;;;;;;AAOA,4BAAA,EAAA,kCAAA,UAAA,EAAA,IAAA,EAAA;AACA,UAAA,MAAA,GAAA,UAAA,CAAA,IAAA,CAAA,QAAA,CAAA;UACA,MAAA,GAAA,UAAA,CAAA,IAAA,CAAA,WAAA,CAAA;UACA,OAAA,GAAA,QAAA,CAAA,YAAA,EAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,IAAA,EAAA,IAAA,CAAA;UACA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,CAAA,+BAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,6BAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;KAEA;;AAEA,eAAA,EAAA,qBAAA,IAAA,EAAA;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,IAAA,IAAA,IAAA,CAAA;UACA,UAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,wBAAA,CAAA;UACA,MAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,QAAA,CAAA;UACA,GAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA;UACA,MAAA,GAAA,UAAA,CAAA,IAAA,CAAA,WAAA,CAAA;UACA,OAAA,GAAA,QAAA,CAAA,YAAA,EAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,UAAA,MAAA,CAAA,GAAA,IAAA,IAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,GAAA,CAAA,KAAA,MAAA,CAAA,GAAA,EAAA;AACA,eAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAA,8BAAA,GAAA,MAAA,CAAA,GAAA,GAAA,cAAA,CAAA,CAAA;OACA;;AAEA,YAAA,CAAA,IAAA,CAAA,+BAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;AASA,cAAA,CAAA,UAAA,EAAA,CAAA;KACA;;;;;;AAMA,kBAAA,EAAA,0BAAA;AACA,UAAA,IAAA,GAAA,CAAA,CAAA,IAAA,CAAA;UACA,UAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,wBAAA,CAAA;UACA,MAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,QAAA,CAAA;UACA,GAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA;UACA,MAAA,GAAA,UAAA,CAAA,IAAA,CAAA,WAAA,CAAA;UACA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAGA,UAAA,MAAA,CAAA,GAAA,IAAA,IAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,GAAA,CAAA,KAAA,MAAA,CAAA,GAAA,EAAA;AACA,cAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;AACA,eAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAA,+BAAA,GAAA,MAAA,CAAA,GAAA,GAAA,cAAA,CAAA,CAAA;OACA;;AAEA,SAAA,CAAA,MAAA,EAAA,CAAA;;;;;;;;AAQA,UAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA;AACA,cAAA,CAAA,MAAA,CAAA,0CAAA,CAAA,CAAA;OACA;;AAEA,YAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,6BAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;KACA;;;;;;;AAOA,sBAAA,EAAA,4BAAA,UAAA,EAAA;AACA,UAAA,MAAA,GAAA,UAAA,CAAA,IAAA,CAAA,OAAA,CAAA;UACA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,KAAA,EAAA,CAAA;AACA,YAAA,CAAA,MAAA,CAAA,0CAAA,CAAA,CAAA;AACA,YAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,6BAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;KACA;;;;;;;AAOA,kBAAA,EAAA,wBAAA,KAAA,EAAA;AACA,WAAA,GAAA,KAAA,IAAA,IAAA,GAAA,KAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,CAAA;;AAEA,UAAA,QAAA,GAAA,KAAA,GAAA,cAAA,CAAA;;AAEA,UAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,CAAA,EAAA;AACA,eAAA,QAAA,CAAA,QAAA,CAAA,cAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA;OACA;;AAEA,UAAA,CAAA,GAAA,CAAA,uCAAA,CAAA,CAAA;;AAEA,UAAA,cAAA,GAAA;AACA,WAAA,EAAA,kBAAA,GAAA,KAAA;AACA,eAAA,EAAA,iBAAA,QAAA,EAAA;AACA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA;;AAEA,kBAAA,CAAA,QAAA,CAAA,cAAA,CAAA,QAAA,CAAA,CAAA;AACA,kBAAA,CAAA,UAAA,EAAA,CAAA;SACA;OACA,CAAA;;AAEA,UAAA,CAAA,GAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA;;AAEA,cAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;KACA;;;;;;;;AAQA,gBAAA,EAAA,sBAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,iBAAA,CAAA,IAAA,IAAA,EAAA,OAAA,IAAA,CAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,WAAA,CAAA,MAAA,CAAA,iBAAA,CAAA,CAAA,CAAA;KACA;;;;;;AAMA,yBAAA,EAAA,iCAAA;AACA,UAAA,OAAA,CAAA,CAAA,aAAA,CAAA,CAAA,MAAA,EAAA,KAAA,WAAA,EAAA;AAAA,eAAA,KAAA,CAAA;OAAA,CAAA;AACA,aAAA;AACA,iBAAA,EAAA,CAAA,CAAA,CAAA,aAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA,aAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA;AACA,cAAA,EAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,GAAA,CAAA,CAAA,aAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA;OACA,CAAA;KACA;;;;;;;;;;;AAWA,gBAAA,EAAA,sBAAA,MAAA,EAAA,QAAA,EAAA;AACA,aAAA,CAAA,GAAA,CAAA,SAAA,CAAA,CAAA;AACA,OAAA,CAAA,QAAA,CAAA,wBAAA,EAAA,GACA,QAAA,CAAA,4BAAA,CAAA,MAAA,EAAA,QAAA,CAAA,GACA,QAAA,CAAA,kBAAA,CAAA,MAAA,EAAA,QAAA,EAAA,IAAA,CAAA,CAAA;KACA;;;;;;;;;AASA,sBAAA,EAAA,4BAAA,MAAA,EAAA,QAAA,EAAA,aAAA,EAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,eAAA,CAAA,aAAA,CAAA,CAAA;;AAEA,UAAA,CAAA,IAAA,CAAA,MAAA,EAAA;AAAA,eAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;OAAA;;AAEA,cAAA,MAAA;;AAEA,aAAA,QAAA;AACA,cAAA,CAAA,EAAA,EAAA,CAAA,MAAA,GAAA,oBAAA,CAAA;AACA,iBAAA,CAAA,OAAA,CAAA,kCAAA,GAAA,IAAA,CAAA,MAAA,GAAA,SAAA,EAAA,UAAA,QAAA,EAAA;AACA,gBAAA,CAAA,CAAA,QAAA,EAAA;AACA,sBAAA,CAAA,QAAA,CAAA;AACA,mBAAA,EAAA,QAAA,CAAA,oBAAA,EAAA;AACA,uBAAA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA;AACA,oBAAA,EAAA,EAAA,SAAA,EAAA,QAAA,EAAA,OAAA,EAAA,IAAA,EAAA;eACA,CAAA,CAAA;aACA;WACA,CAAA,CAAA;AACA,gBAAA;;AAAA,AAEA,aAAA,QAAA;AACA,iBAAA,OAAA,QAAA,KAAA,UAAA,GACA,QAAA,CAAA,IAAA,CAAA,GACA,OAAA,CAAA,IAAA,CAAA,kCAAA,CAAA,CAAA;AACA,gBAAA;;AAAA,AAEA;AACA,iBAAA,CAAA,IAAA,CAAA,MAAA,GAAA,qCAAA,CAAA,CAAA;AACA,gBAAA;AAAA,OACA;KAEA;;;;;;;AAOA,wBAAA,EAAA,gCAAA;AACA,cAAA,IAAA,CAAA,EAAA,EAAA,CAAA,MAAA;AACA,aAAA,MAAA,CAAA;AACA,aAAA,QAAA;AACA,iBAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,GAAA,GAAA,GAAA,QAAA,CAAA,eAAA,EAAA,CAAA;AACA,gBAAA;;AAAA,AAEA,aAAA,oBAAA;AACA,iBAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,CAAA;AACA,gBAAA;;AAAA,AAEA,aAAA,oBAAA;AACA,iBAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,GAAA,aAAA,CAAA;AACA,gBAAA;;AAAA,AAEA,aAAA,eAAA;AACA,iBAAA,gBAAA,GAAA,QAAA,CAAA,eAAA,EAAA,CAAA;AACA,gBAAA;;AAAA,AAEA;AACA,iBAAA,QAAA,CAAA,YAAA,EAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,gBAAA;AAAA,OACA;KACA;;;;;;;;AAQA,gBAAA,EAAA,sBAAA,MAAA,EAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,MAAA,GAAA,MAAA,CAAA;AACA,UAAA,QAAA,CAAA,aAAA,EAAA,EAAA;AACA,gBAAA,CAAA,QAAA,CAAA,QAAA,CAAA,eAAA,EAAA,CAAA,CAAA;OACA,MAAA;AACA,gBAAA,CAAA,kBAAA,EAAA,CAAA;OACA;KACA;;;;;;;AAOA,oBAAA,EAAA,4BAAA;AACA,UAAA;AACA,gBAAA,CAAA,YAAA,EAAA,CAAA,SAAA,EAAA,CAAA;AACA,gBAAA,CAAA,YAAA,EAAA,CAAA,IAAA,CAAA,iHAAA,CAAA,CACA,IAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,aAAA,CAAA,EAAA;AAAA,mBAAA,KAAA,CAAA;WAAA;;;AAGA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA;AACA,cAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,EAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,WAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;OACA,CAAA,OAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA;OACA;KACA;;;;;;;AAOA,sBAAA,EAAA,8BAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA;AACA,cAAA,CAAA,YAAA,EAAA,CAAA,EAAA,CAAA,YAAA,EAAA,CAAA;KACA;;;;;;;AAOA,uBAAA,EAAA,+BAAA;AACA,UAAA;;AAEA,YAAA,IAAA,CAAA,SAAA,CAAA,MAAA,EAAA;AACA,cAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA;SACA;;AAEA,YAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,iBAAA,EAAA,QAAA,CAAA,mBAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA;AACA,aAAA,EAAA,QAAA,CAAA,YAAA,EAAA;AACA,WAAA,EAAA,QAAA,CAAA,YAAA,EAAA;AACA,gBAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,MAAA;AACA,eAAA,EAAA,QAAA,CAAA,YAAA,EAAA,CAAA,KAAA;SACA,CAAA,CAAA;OACA,CAAA,OAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA;OACA;KACA;;;;;;;AAOA,oBAAA,EAAA,4BAAA;AACA,UAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,EAAA,EAAA,CAAA,MAAA,GAAA,IAAA,CAAA,SAAA,CAAA,MAAA,GACA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,MAAA,GAAA,EAAA,CAAA;;AAEA,gBAAA,CAAA,GAAA,CAAA,KAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,KAAA,CAAA,CACA,IAAA,CAAA,gBAAA,CAAA,CAAA,GAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,CAAA,CAAA,SAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,CAAA,SAAA,CAAA,MAAA,EAAA;AACA,kBAAA,CAAA,eAAA,EAAA,CAAA;SACA,MAAA;;AAEA,cAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CACA,IAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,cAAA,CAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;SACA;OAEA,CAAA,OAAA,MAAA,EAAA,EAAA;KACA;;;;;;;AAOA,uBAAA,EAAA,+BAAA;AACA,cAAA,CAAA,mBAAA,EAAA,CAAA,IAAA,CAAA,kDAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA;KACA;;;;;;;AAOA,yBAAA,EAAA,iCAAA;AACA,UAAA,IAAA,CAAA,EAAA,EAAA,CAAA,MAAA,KAAA,KAAA,EAAA,OAAA,KAAA,CAAA;AACA,UAAA,GAAA,GAAA,QAAA,CAAA,oBAAA,EAAA,CAAA;;AAEA,cAAA,CAAA,YAAA,EAAA,CAAA,EAAA,CAAA,UAAA,CAAA,GAAA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA,CAAA,CAAA;KACA;;;;;;;AAOA,wBAAA,EAAA,gCAAA;AACA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,CAAA,UAAA,KAAA,WAAA,EAAA;AACA,eAAA,IAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA;OACA;AACA,aAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,GAAA,GAAA,GAAA,QAAA,CAAA,eAAA,EAAA,GAAA,OAAA,CAAA;KACA;;;;;;;AAOA,gBAAA,EAAA,sBAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CACA,WAAA,CAAA,UAAA,CAAA,CACA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,CAAA;OACA,MAAA;AACA,YAAA,CAAA,IAAA,CAAA,oBAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CACA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CACA,QAAA,CAAA,UAAA,CAAA,CACA,IAAA,CAAA,wCAAA,CAAA,CAAA;OACA;KACA;;;;;;;AAOA,qBAAA,EAAA,2BAAA,IAAA,EAAA;AACA,UAAA,cAAA,GAAA;AACA,WAAA,EAAA,QAAA,CAAA,oBAAA,EAAA;AACA,YAAA,EAAA,QAAA,CAAA,YAAA,EAAA,CAAA,EAAA,CAAA,WAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,QAAA,CAAA,iBAAA;;AAEA,cAAA,EAAA,kBAAA;AACA,kBAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CAAA;SACA;OACA,CAAA;;AAEA,cAAA,CAAA,GAAA,CAAA,KAAA,EAAA,CAAA;;AAEA,UAAA,CAAA,CAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,YAAA,SAAA,GAAA,IAAA,SAAA,CAAA,QAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AACA,YAAA,SAAA,CAAA,UAAA,EAAA;AACA,iBAAA,KAAA,CAAA;SACA;OACA;;;AAGA,cAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CAAA;;AAGA,cAAA,CAAA,QAAA,CAAA,cAAA,CAAA,CAAA;KAEA;;;;;;;AAOA,mBAAA,EAAA,2BAAA;AACA,UAAA,CAAA,IAAA,EAAA,CAAA,WAAA,GAAA,KAAA,CAAA;AACA,cAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;KACA;;;;;;;AAOA,2BAAA,EAAA,mCAAA;;AAEA,UAAA,CAAA,IAAA,EAAA,CAAA,WAAA,GAAA,IAAA,CAAA;AACA,cAAA,CAAA,iBAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;KAEA;;;;;;;;AAQA,sBAAA,EAAA,4BAAA,WAAA,EAAA;AACA,UAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,QAAA,CAAA,WAAA,CAAA,CAAA,KAAA,EAAA,CAAA;OACA,CAAA,OAAA,CAAA,EAAA;;OAEA;KACA;;;;;;;;AAQA,cAAA,EAAA,oBAAA,OAAA,EAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,OAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,OAAA,CAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,CAAA;AACA,aAAA,IAAA,CAAA,EAAA,EAAA,CAAA;KACA;;;;;;;AAOA,2BAAA,EAAA,mCAAA;AACA,UAAA,OAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,uBAAA,KAAA,WAAA,IAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,uBAAA,KAAA,KAAA,EAAA;;AAEA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,cAAA,CAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,gBAAA,CAAA,IAAA,EAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CACA;AACA,kBAAA,EAAA,mBAAA;AACA,mBAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,gBAAA,EAAA,cAAA;AAAA,wBAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;eAAA,EAAA,aAAA,EAAA,CAAA;aACA,CACA,CAAA;WACA;SACA,CAAA,CAAA;;AAEA,YAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,uBAAA,GAAA,IAAA,CAAA;OACA,MAAA;AACA,eAAA,KAAA,CAAA;OACA;KACA;;;;;;;AAOA,eAAA,EAAA,uBAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,mBAAA,EAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,MAAA,IAAA,IAAA,CAAA,GAAA,EAAA,CAAA,QAAA,EAAA,CAAA,WAAA,EAAA,KAAA,KAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA;OACA;AACA,aAAA,IAAA,CAAA;KACA;;;;;;;AAOA,iBAAA,EAAA,yBAAA;AACA,OAAA,CAAA,aAAA,CAAA,CAAA,gBAAA,EAAA,CAAA;KACA;;;;;;;AAOA,gBAAA,EAAA,wBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,UAAA,CAAA;KACA;;;;;;;AAOA,aAAA,EAAA,qBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,OAAA,CAAA;KACA;;;;;;;AAOA,cAAA,EAAA,sBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,QAAA,IAAA,QAAA,CAAA,UAAA,EAAA,CAAA;KACA;;;;;;;AAOA,cAAA,EAAA,sBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,QAAA,CAAA;KACA;;;;;;;AAOA,cAAA,EAAA,sBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,QAAA,CAAA;KACA;;;;;;;AAOA,cAAA,EAAA,sBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,6BAAA,CAAA,CAAA,MAAA,CAAA;KACA;;;;;;;AAOA,gBAAA,EAAA,wBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,QAAA,CAAA;KACA;;;;;;;AAOA,UAAA,EAAA,kBAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA;KACA;;;;;;;AAOA,gBAAA,EAAA,wBAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA;KACA;;;;;;;AAOA,mBAAA,EAAA,2BAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,aAAA,CAAA;KACA;;;;;;;AAOA,0BAAA,EAAA,kCAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,oBAAA,CAAA;KACA;;;;;;;;AAQA,mBAAA,EAAA,yBAAA,GAAA,EAAA;AACA,aAAA,OAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,WAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;KACA;;;;;;;AAOA,wBAAA,EAAA,gCAAA;AACA,aAAA,QAAA,CAAA,SAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,CAAA;KACA;;;;;;;AAOA,oBAAA,EAAA,0BAAA,QAAA,EAAA;AACA,aAAA,OAAA,QAAA,CAAA,MAAA,KAAA,WAAA,IACA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA;KACA;;;;;;;AAOA,gBAAA,EAAA,sBAAA,GAAA,EAAA;AACA,aAAA,OAAA,IAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,CAAA,KAAA,WAAA,IACA,OAAA,IAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,CAAA,OAAA,EAAA,CAAA,KAAA,WAAA,IACA,OAAA,IAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,WAAA,CAAA;KACA;;;;;;;;AAQA,mBAAA,EAAA,yBAAA,QAAA,EAAA;AACA,aAAA,OAAA,QAAA,CAAA,OAAA,KAAA,WAAA,GACA,QAAA,CAAA,OAAA,GACA,8CAAA,CAAA;KACA;;;;;;;AAOA,iBAAA,EAAA,yBAAA;AACA,aAAA,QAAA,CAAA,UAAA,EAAA,KAAA,IAAA,CAAA,EAAA,EAAA,CAAA,MAAA,KAAA,MAAA,IAAA,IAAA,CAAA,EAAA,EAAA,CAAA,MAAA,KAAA,QAAA,CAAA,CAAA;KACA;;;;;;;AAOA,gBAAA,EAAA,wBAAA;AACA,aAAA,QAAA,CAAA,aAAA,EAAA,CAAA;KACA;;;;;;;AAOA,mBAAA,EAAA,2BAAA;AACA,aAAA,QAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA;KACA;;;;;;;AAOA,iBAAA,EAAA,yBAAA;AACA,UAAA,QAAA,CAAA,UAAA,EAAA,EAAA;AACA,eAAA,2BAAA,CAAA;OACA;KACA;;;;;;;AAOA,oBAAA,EAAA,4BAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,UAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,MAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,WAAA,CAAA,CAAA;KACA;;;;;;;AAOA,oBAAA,EAAA,4BAAA;;AAEA,UAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,gBAAA,CAAA,gBAAA,EAAA,CAAA;AACA,gBAAA,CAAA,YAAA,EAAA,CAAA;AACA,gBAAA,CAAA,gBAAA,EAAA,CAAA;OACA,MAAA;AACA,gBAAA,CAAA,WAAA,EAAA,CAAA;OACA;KACA;;;;;;;AAOA,gBAAA,EAAA,wBAAA;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,KAAA,EAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA;AACA,aAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,UAAA;AACA,YAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA;AACA,kBAAA,EAAA,EAAA;OACA,CAAA,CAAA,EAAA,CAAA,MAAA,EAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;OACA,CAAA,CAAA;KACA;;;;;;;AAOA,oBAAA,EAAA,4BAAA;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,YAAA,EAAA,YAAA;AACA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;OACA,CAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,CAAA;KACA;;;;;;;AAOA,eAAA,EAAA,uBAAA;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA,UAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,CAAA;KACA;;;;;;;AAOA,sBAAA,EAAA,8BAAA;AACA,UAAA,QAAA,CAAA,eAAA,EAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,CAAA;OACA;AACA,UAAA,QAAA,CAAA,sBAAA,EAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,CAAA;OACA,MAAA;AACA,gBAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,CAAA;OACA;KACA;;;;;;;AAOA,oBAAA,EAAA,4BAAA;AACA,UAAA,QAAA,CAAA,MAAA,EAAA,EAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,IAAA,EAAA,CAAA;OACA,MAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,IAAA,EAAA,CAAA;OACA;KACA;;;;;;;;AAQA,oBAAA,EAAA,0BAAA,IAAA,EAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,QAAA,EAAA,CAAA,IAAA,EAAA,EAAA;AACA,YAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,IAAA,EAAA,CAAA;OACA,MAAA;AACA,YAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,IAAA,EAAA,CAAA;OACA;KACA;;;;;;;;;;AAUA,WAAA,EAAA,iBAAA,CAAA,EAAA;AACA,UAAA;AACA,oBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;OACA,CAAA,OAAA,MAAA,EAAA,EAAA;;AAEA,UAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA;KACA;;;;;;;;;;AAUA,YAAA,EAAA,kBAAA,CAAA,EAAA;AACA,UAAA;AACA,qBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;OACA,CAAA,OAAA,MAAA,EAAA,EAAA;;AAEA,UAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,WAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA;KACA;;;;;;;AAOA,uBAAA,EAAA,+BAAA;AACA,cAAA,CAAA,QAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA;AACA,cAAA,CAAA,UAAA,EAAA,CAAA;KACA;;;;;;;AAOA,qBAAA,EAAA,6BAAA;AACA,aAAA,IAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,CAAA,CAAA;KACA;;;;;;;;AASA,WAAA,EAAA,iBAAA,cAAA,EAAA;;AAEA,UAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EACA;AACA,WAAA,EAAA,IAAA;AACA,YAAA,EAAA,EAAA;AACA,eAAA,EAAA,mBAAA,EAAA;AACA,YAAA,EAAA,gBAAA,EAAA;AACA,cAAA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA;AACA,gBAAA,EAAA,oBAAA,EAAA;OACA,EAAA,cAAA,CAAA,CAAA;;AAEA,UAAA,CAAA,GAAA,CAAA,8CAAA,CAAA,CAAA;AACA,aAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,OAAA,CAAA,CACA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CACA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CACA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA;KACA;;;;;;;AAOA,mBAAA,EAAA,yBAAA,IAAA,EAAA;AACA,UAAA,EAAA,GAAA,IAAA,QAAA,EAAA,CAAA;;AAEA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,UAAA,CAAA,MAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;OACA,CAAA,CAAA;;AAEA,aAAA,EAAA,CAAA;KAEA;;;;;;;;AAQA,YAAA,EAAA,kBAAA,cAAA,EAAA;;;;;;AAMA,UAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EACA;AACA,WAAA,EAAA,IAAA;AACA,YAAA,EAAA,EAAA;AACA,eAAA,EAAA,mBAAA,EAAA;AACA,YAAA,EAAA,gBAAA,EAAA;AACA,cAAA,EAAA,QAAA,CAAA,QAAA,CAAA,qBAAA;AACA,gBAAA,EAAA,oBAAA,EAAA;OACA,EAAA,cAAA,CAAA,CAAA;;AAEA,aAAA,CAAA,CAAA,IAAA,CAAA;AACA,WAAA,EAAA,IAAA,CAAA,GAAA;AACA,YAAA,EAAA,IAAA,CAAA,IAAA;AACA,eAAA,EAAA,IAAA,CAAA,OAAA;AACA,YAAA,EAAA,MAAA;AACA,gBAAA,EAAA,MAAA;OAGA,CAAA;;AACA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CACA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CACA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA;KACA;;;;;;;AAOA,0BAAA,EAAA,kCAAA;AACA,UAAA,CAAA,GAAA,CAAA,6CAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,cAAA,EACA;AACA,eAAA,EAAA,QAAA,CAAA,QAAA,CAAA,MAAA;AACA,YAAA,EAAA,QAAA,CAAA,uBAAA,CAAA,IAAA;AACA,cAAA,EAAA,QAAA,CAAA,uBAAA,CAAA,MAAA;AACA,gBAAA,EAAA,QAAA,CAAA,uBAAA,CAAA,QAAA;OACA,CAAA;UACA,CAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,QAAA,CAAA;;;AAGA,cAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,CAAA;;;AAGA,UAAA,CAAA,GAAA,CAAA,4BAAA,CAAA,CAAA;AACA,OAAA,CAAA,QAAA,GAAA,QAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;KACA;;;;;;;AAOA,mBAAA,EAAA,2BAAA;AACA,cAAA,CAAA,GAAA,CAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;KACA;;;;;;;;AAQA,gBAAA,EAAA,sBAAA,MAAA,EAAA,KAAA,EAAA;;;;;;AAMA,UAAA,OAAA,KAAA,KAAA,WAAA,EAAA;AACA,eAAA,IAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA;OACA,MAAA;AACA,eAAA,IAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,EAAA,KAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,KAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,KAAA,CAAA,CAAA;OACA;KACA;;;;;;;AAOA,uBAAA,EAAA,+BAAA;AACA,UAAA,MAAA,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,CAAA;;AAEA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EAAA,UAAA,MAAA,EAAA,MAAA,EAAA;AACA,SAAA,CAAA,IAAA,CAAA,MAAA,EAAA,UAAA,EAAA,EAAA,KAAA,EAAA;AACA,cAAA,OAAA,EAAA,KAAA,UAAA,EAAA;AACA,oBAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;OACA,CAAA,CAAA;KACA;;;;;;;AAOA,uBAAA,EAAA,+BAAA;AACA,UAAA,MAAA,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,CAAA;;AAEA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,EAAA,UAAA,MAAA,EAAA,MAAA,EAAA;AACA,SAAA,CAAA,IAAA,CAAA,MAAA,EAAA,UAAA,EAAA,EAAA,KAAA,EAAA;AACA,kBAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,yBAAA,EAAA,OAAA,CAAA,CAAA;SACA,CAAA,CAAA;OACA,CAAA,CAAA;KACA;;;;;;;;;AASA,oBAAA,EAAA,0BAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA;AACA,UAAA,QAAA,GAAA,KAAA,GAAA,UAAA,GAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,QAAA,EAAA,CAAA;UACA,MAAA,GAAA,OAAA,KAAA,KAAA,WAAA,GAAA,CAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA;UACA,KAAA,GAAA,OAAA,KAAA,KAAA,WAAA,GAAA,UAAA,GAAA,KAAA,CAAA;AACA,WAAA,GAAA,OAAA,KAAA,KAAA,WAAA,GAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA;;AAEA,UAAA,KAAA,KAAA,MAAA,EAAA;AACA,eAAA,OAAA,EAAA,KAAA,UAAA,GAAA,EAAA,EAAA,GAAA,KAAA,CAAA;OACA;;;;AAIA,UAAA,KAAA,KAAA,QAAA,EAAA;AACA,YAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,mCAAA,GAAA,MAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,gBAAA,GAAA,QAAA,GAAA,aAAA,GAAA,MAAA,CAAA,CAAA;AACA,WAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;SACA,MAAA,IAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,QAAA,EAAA,KAAA,CAAA,IAAA,KAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,gBAAA,GAAA,KAAA,GAAA,aAAA,GAAA,MAAA,GAAA,gBAAA,GAAA,KAAA,CAAA,CAAA;AACA,gBAAA,CAAA,UAAA,CAAA,MAAA,EAAA,QAAA,CAAA,CAAA,QAAA,CAAA,MAAA,EAAA,QAAA,EAAA,EAAA,CAAA,CAAA;AACA,kBAAA,CAAA,gBAAA,CAAA,MAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;SACA;OACA,MAAA;AACA,gBAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,EAAA,EAAA,IAAA,CAAA,CAAA;OACA;KACA;;;;;;;;;AASA,oBAAA,EAAA,0BAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA;AACA,aAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,eAAA,EAAA,KAAA,GAAA,GAAA,GAAA,MAAA,GAAA,GAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA;KACA;;;;;;;;;;AAUA,oBAAA,EAAA,0BAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA;AACA,aAAA,IAAA,CAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,GAAA,MAAA,GAAA,GAAA,GAAA,QAAA,CAAA,CAAA;KACA;;;;;;;AAOA,cAAA,EAAA,sBAAA;AACA,cAAA,CAAA,mBAAA,EAAA;;OAEA,IAAA,CAAA,YAAA,CAAA,CAAA,WAAA,CAAA,WAAA,CAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,cAAA,CAAA,CAAA,WAAA,CAAA,aAAA,CAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,aAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,wBAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,EAAA;;;OAGA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,SAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,WAAA,EAAA,CAAA,EAAA,CAAA,kBAAA,EAAA,CAAA;OACA,CAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,YAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,IAAA,MAAA,EAAA;AACA,WAAA,CAAA,IAAA,CAAA,CAAA,UAAA,CAAA;AACA,wBAAA,EAAA;AACA,oBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,kBAAA,CAAA;AACA,mBAAA,EAAA,GAAA;aACA;AACA,mCAAA,EAAA,KAAA;AACA,kBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,IAAA,EAAA;WACA,CAAA,CAAA;AACA,WAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,CAAA;SACA;;;OAIA,CAAA,CAAA,GAAA,EAAA,CAEA,IAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;KAEA;;;;;;;AAOA,gBAAA,EAAA,wBAAA;;AAEA,UAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA;;;;AAIA,yCAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;WACA;SACA;;AAEA,qCAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;WACA;SACA;;AAEA,gCAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,sBAAA,CAAA,YAAA;AACA,kBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;aACA,EAAA,GAAA,CAAA,CAAA;WACA;SACA;;AAEA,kCAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;WACA;SACA;;AAEA,mCAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;WACA;SACA;;AAEA,oCAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,aAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;WACA;SACA;;AAEA,qCAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;WACA;SACA;;AAEA,mCAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,gBAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,qBAAA,CAAA,GAAA,CAAA,oBAAA,CAAA,CAAA;AACA,sBAAA,CAAA,OAAA,CAAA,QAAA,CAAA,eAAA,EAAA,CAAA,CAAA;aACA,MAAA;AACA,qBAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,CAAA;AACA,sBAAA,CAAA,gBAAA,EAAA,CAAA;aACA;WACA;SACA;;AAEA,iBAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,uBAAA;SACA;;AAEA,mBAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,eAAA;SACA;;AAEA,oBAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,gBAAA;SACA;;AAEA,0BAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,kBAAA;SACA;;AAEA,wBAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,WAAA;SACA;;AAEA,2BAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,cAAA;SACA;;AAEA,eAAA,EAAA;AACA,eAAA,EAAA,eAAA,CAAA,EAAA;AACA,aAAA,CAAA,cAAA,EAAA,CAAA;AACA,gBAAA,CAAA,CAAA,KAAA,KAAA,EAAA,EAAA;AACA,kBAAA,QAAA,CAAA,WAAA,EAAA,EAAA;AACA,wBAAA,CAAA,uBAAA,EAAA,CAAA;eACA;aACA,MAAA,IAAA,CAAA,CAAA,KAAA,KAAA,EAAA,EAAA;AACA,sBAAA,CAAA,gBAAA,EAAA,CAAA;aACA;WACA;SACA;;AAEA,uBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,QAAA,EAAA,CAAA,WAAA,EAAA,KAAA,KAAA,EAAA;AACA,sBAAA,CAAA,YAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;aACA,MAAA;AACA,sBAAA,CAAA,YAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;aACA;WACA;SACA;;AAEA,wBAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,IAAA,CAAA;gBACA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,qBAAA,CAAA;gBACA,GAAA,GAAA,IAAA,CAAA,GAAA,EAAA;gBACA,OAAA,GAAA,IAAA,CAAA,IAAA,CAAA,kBAAA,CAAA;gBACA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,mBAAA,CAAA;gBACA,IAAA,GAAA,QAAA,CAAA,YAAA,EAAA;gBACA,IAAA,GAAA,IAAA,CAAA,EAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,CAAA,CAAA;;;AAIA,gBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,gBAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,eAAA,GAAA,IAAA,CAAA;AACA,gBAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,GAAA,KAAA,CAAA;;AAEA,gBAAA,CAAA,EAAA,CAAA,IAAA,CAAA;AACA,8BAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA;AACA,4BAAA,EAAA,CAAA;AACA,2BAAA,EAAA,SAAA;AACA,6BAAA,EAAA,OAAA;AACA,8BAAA,EAAA,QAAA;aACA,CAAA,CAAA;;AAEA,gBAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,CAAA;WAEA;SACA;;OAEA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;;;AAGA,UAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA;;;;AAIA,cAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,oBAAA,CAAA,OAAA,CAAA;AACA,iBAAA,EAAA,eAAA;AACA,gBAAA,EAAA,QAAA,CAAA,GAAA,CAAA,eAAA;AACA,mBAAA,EAAA,GAAA;aACA,CAAA,CAAA;WACA;;AAEA,sBAAA,EAAA,QAAA,CAAA,aAAA;SACA;;AAEA,qBAAA,EAAA;AACA,kBAAA,EAAA,kBAAA;AACA,oBAAA,CAAA,OAAA,CAAA;AACA,iBAAA,EAAA,iBAAA;AACA,gBAAA,EAAA,QAAA,CAAA,GAAA,CAAA,wBAAA;AACA,mBAAA,EAAA,GAAA;aACA,CAAA,CAAA;WACA;SACA;;AAEA,wBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,oBAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;AAEA,oBAAA,CAAA,OAAA,CAAA;AACA,iBAAA,EAAA,oBAAA;AACA,gBAAA,EAAA,QAAA,CAAA,GAAA,CAAA,kBAAA;AACA,mBAAA,EAAA,GAAA;aACA,CAAA,CAAA;WAEA;;AAEA,cAAA,EAAA,QAAA,CAAA,GAAA,CAAA,kBAAA;SACA;;AAEA,mBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,gBAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA;;;AAGA,gBAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,qBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,IAAA,CAAA,OAAA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAAA,GACA,gBAAA,GACA,iBAAA,CACA,CAAA,IAAA,CAAA,qBAAA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CACA,OAAA,CAAA,EAAA,KAAA,EAAA,GAAA,EAAA,CAAA,CAAA;;;AAGA,iBAAA,GAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,iCAAA,CAAA,CACA,WAAA,CAAA,qBAAA,CAAA,CACA,QAAA,CAAA,oBAAA,CAAA,CACA,GAAA,EAAA,CACA,IAAA,CAAA,uBAAA,CAAA,CACA,WAAA,CAAA,aAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CACA,WAAA,CAAA,KAAA,GAAA,qBAAA,GAAA,oBAAA,CAAA,CACA,QAAA,CAAA,KAAA,GAAA,oBAAA,GAAA,qBAAA,CAAA,CAAA;;AAEA,gBAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,wBAAA,CAAA,CAAA,IAAA,EAAA,CAAA;;;AAGA,oBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,SAAA,EAAA,KAAA,CAAA,CAAA;WACA;SACA;;AAEA,iBAAA,EAAA;AACA,cAAA,EAAA,gBAAA;AACA,aAAA,CAAA,SAAA,CAAA,CAAA,OAAA,CAAA,EAAA,KAAA,EAAA,GAAA,EAAA,CAAA,CAAA;WACA;SACA;;AAEA,uBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,WAAA,CAAA,yBAAA,CAAA,CAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,WAAA,CAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA;WACA;SACA;;AAEA,4BAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,gBAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,oBAAA,CAAA,GAAA,CAAA,WAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;WACA;AACA,cAAA,EAAA,gBAAA;AACA,gBAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,eAAA,CAAA,oBAAA,CAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,CAAA;aACA,MAAA;AACA,eAAA,CAAA,oBAAA,CAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,CAAA;aACA;WACA;SACA;;AAEA,qBAAA,EAAA;AACA,cAAA,EAAA,gBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA;WACA;AACA,eAAA,EAAA,iBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAAA,EAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;AACA,oBAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,CAAA;WACA;SACA;;AAEA,kBAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,gBAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,aAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA;WACA;SACA;;AAEA,kBAAA,EAAA;AACA,gBAAA,EAAA,kBAAA;AACA,gBAAA,QAAA;;AACA,mBAAA;;AACA,qBAAA;;AACA,uBAAA;;;AAGA,oBAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA;AACA,mBAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA;AACA,qBAAA,GAAA,OAAA,CAAA,MAAA,CAAA;AACA,uBAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,CAAA,MAAA,CAAA;;AAEA,oBAAA,CAAA,GAAA,CAAA,aAAA,CAAA,WAAA,CAAA,CAAA;;;AAGA,oBAAA,CACA,IAAA,CAAA,SAAA,EAAA,SAAA,KAAA,WAAA,GAAA,IAAA,GAAA,KAAA,CAAA,CACA,IAAA,CAAA,eAAA,EAAA,WAAA,GAAA,CAAA,IAAA,WAAA,GAAA,SAAA,GAAA,IAAA,GAAA,KAAA,CAAA,CAAA;WACA;SACA;;AAEA,kBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,oBAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAAA;WACA;SACA;;AAEA,mBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,oBAAA,CAAA,YAAA,CAAA,MAAA,CAAA,CAAA;WACA;SACA;;AAEA,4BAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,GAAA,CAAA,mBAAA;SACA;;AAEA,qBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,oBAAA,CAAA,YAAA,CAAA,QAAA,CAAA,CAAA;WACA;SACA;;AAEA,oBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,gBAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,SAAA,EAAA,KAAA,CAAA,CAAA;AACA,aAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,CAAA;WACA;SACA;;AAEA,sBAAA,EAAA;AACA,eAAA,EAAA,iBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;AACA,oBAAA,CAAA,SAAA,EAAA,CAAA;WACA;SACA;;;;;;AAMA,qBAAA,EAAA;AACA,mBAAA,EAAA,qBAAA;AACA,aAAA,CAAA,IAAA,CAAA,CAAA,KAAA,EAAA,CAAA;WACA;SACA;;OA+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,UAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;KACA;;;;;;;AAOA,uBAAA,EAAA,+BAAA;AACA,UAAA,CAAA,IAAA,EAAA,CAAA,QAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,EAAA,EAAA;;AAEA,eAAA,EAAA;AACA,eAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA;AACA,eAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA;AACA,cAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA;AACA,uBAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,aAAA;AACA,cAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA;AACA,0BAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,mBAAA;SACA;;AAEA,cAAA,EAAA;AACA,eAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA;AACA,eAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA;AACA,cAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA;AACA,uBAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,aAAA;AACA,cAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA;AACA,0BAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,mBAAA;SACA;;AAEA,mBAAA,EAAA;AACA,eAAA,EAAA,YAAA;AACA,cAAA,EAAA,aAAA;AACA,uBAAA,EAAA,mBAAA;AACA,cAAA,EAAA,EAAA;AACA,cAAA,EAAA;AACA,gBAAA,EAAA,oBAAA;WACA;AACA,kBAAA,EAAA;AACA,oBAAA,EAAA,2BAAA;WACA;SACA;OACA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,CAAA;KACA;;;;;;AAMA,2BAAA,EAAA;;;;;;AAMA,UAAA,EAAA,gBAAA;AACA,eAAA,CAAA,IAAA,CAAA,mDAAA,CAAA,CAAA;OACA;;;;;;;;AAQA,YAAA,EAAA,gBAAA,QAAA,EAAA;AACA,gBAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,QAAA,CAAA,CAAA;AACA,YAAA,QAAA,CAAA,SAAA,EAAA,EAAA;AACA,cAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA,OAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,EAAA,QAAA,CAAA,CAAA;SACA;AACA,gBAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA;AACA,gBAAA,CAAA,UAAA,EAAA,CAAA;OACA;;;;;;;AAOA,cAAA,EAAA,oBAAA;AACA,gBAAA,CAAA,GAAA,CAAA,iBAAA,CAAA,MAAA,CAAA,CAAA;OACA,EACA;;;;;;;;AAOA,0BAAA,EAAA,kCAAA;AACA,UAAA;AACA,qBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,iBAAA,CAAA,CAAA;OACA,CAAA,OAAA,CAAA,EAAA;;OAEA;KACA;;;;;;;AAOA,wBAAA,EAAA,gCAAA;AACA,cAAA,CAAA,sBAAA,EAAA,CAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,WAAA,CAAA,QAAA,CAAA,eAAA,EAAA,IAAA,CAAA,CAAA;KACA;;;;;;;AAOA,sCAAA,EAAA,8CAAA;AACA,UAAA;AACA,qBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,CAAA;OACA,CAAA,OAAA,CAAA,EAAA;;OAEA;KACA;;;;;;;AAOA,mCAAA,EAAA,2CAAA;AACA,UAAA,QAAA,CAAA,UAAA,EAAA,EAAA;AACA,gBAAA,CAAA,kCAAA,EAAA,CAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,WAAA,CAAA,QAAA,CAAA,oBAAA,EAAA,KAAA,CAAA,CAAA;OACA;KACA;;;;;;;AAOA,mBAAA,EAAA,2BAAA;AACA,UAAA,QAAA,CAAA,UAAA,EAAA,EAAA;AAAA,eAAA,KAAA,CAAA;OAAA;;AAEA,UAAA,GAAA,GAAA,gBAAA,CAAA;AACA,SAAA,IAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,cAAA,GAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,cAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA;AACA,SAAA,IAAA,GAAA,CAAA;;AAEA,UAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,yBAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,cAAA,IAAA,IAAA,CAAA;;AAEA,UAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,cAAA,IAAA,CAAA,IAAA,EAAA;AACA,gBAAA,CAAA,SAAA,EAAA,CAAA;OACA;KAEA;;;;;;;AAOA,iBAAA,EAAA,yBAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,SAAA,CAAA,cAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,eAAA,GAAA,IAAA,CAAA;KACA;;;;;;;;;;AAWA,YAAA,EAAA,kBAAA,GAAA,EAAA;AACA,UAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,EAAA,EAAA,CAAA;;AAEA,UAAA,GAAA,CAAA,CAAA,WAAA,EAAA;AACA,eAAA,EAAA,gDAAA;AACA,cAAA,EAAA,QAAA,EAAA,CACA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA;;AAEA,QAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;;AAEA,UAAA,EAAA,CAAA,IAAA,EAAA,CAAA,MAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,aAAA,EAAA;;AAEA,YAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,GAAA,CAAA,CAAA,SAAA,EAAA,EAAA,OAAA,EAAA,UAAA,EAAA,CAAA,CAAA;;AAEA,iBAAA,EAAA,CAAA,IAAA,EAAA,CAAA,MAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,aAAA,EAAA;;;;;AAKA,iBAAA,GAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,MAAA,GACA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,CAAA,MAAA,EAAA,CAAA,MAAA,EAAA,GACA,EAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,IAAA,EAAA,CAAA,MAAA,EAAA,CAAA;;;AAGA,iBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;;;AAGA,cAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,oBAAA,EAAA,EAAA,CAAA,CAAA,CAAA;WACA;;AAEA,YAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;SACA;;;aAGA;;AAEA,iBAAA,GAAA,CAAA,CAAA,SAAA,EAAA,EAAA,OAAA,EAAA,UAAA,EAAA,CAAA,CACA,IAAA,CAAA,EAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,CAAA,CAAA;;;AAGA,sBAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,aAAA,CAAA,CAAA;;AAEA,cAAA,CAAA,KAAA,EAAA,CAAA,MAAA,CAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;WACA;OACA;;AAEA,aAAA,EAAA,CAAA,IAAA,EAAA,CAAA;KAEA;;;;;;;AAOA,sBAAA,EAAA,8BAAA;;;;;;;;;;;AAWA,UAAA,CAAA,EAAA,EAAA,CAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,EAAA,EAAA;;;AAGA,uBAAA,qjIAwDA;;;AAGA,mBAAA,yIAAA;;;AAGA,+BAAA,6HAAA;;;AAGA,wBAAA,gEAAA;;;AAGA,kBAAA,uLAAA;;;AAGA,aAAA,EAAA;;;AAGA,iBAAA,q3BAYA;;;AAGA,gBAAA,q3BAYA;;;AAGA,qBAAA,y6BAYA;;;AAGA,mBAAA,o4BAaA;;;AAGA,qBAAA,+mDAiBA;SACA;OACA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,UAAA,CAAA,GAAA,CAAA,yBAAA,CAAA,CAAA;KAEA;;;;;;;;;;;;;;;AAeA,UAAA,EAAA,gBAAA,GAAA,EAAA,MAAA,EAAA;AACA,UAAA,IAAA,EAAA,GAAA,EAAA,GAAA,CAAA;;;;AAIA,OAAA,CAAA,IAAA,CAAA,MAAA,EAAA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,YAAA,GAAA,IAAA,MAAA,CAAA,KAAA,GAAA,GAAA,GAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AACA,WAAA,GAAA,GAAA,CAAA,OAAA,CAAA,IAAA,EAAA,GAAA,CAAA,CAAA;OACA,CAAA,CAAA;;AAEA,aAAA,GAAA,CAAA,OAAA,CAAA,WAAA,EAAA,EAAA,CAAA,CAAA;KACA;;;;;;;;;;;;;;;;;AAiBA,eAAA,EAAA,qBAAA,KAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,CAAA,cAAA,EAAA,QAAA,CAAA,QAAA,CAAA,CAAA;KACA;;;;;;;;;;;;;;;;AAgBA,YAAA,EAAA,kBAAA,KAAA,EAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA;AACA,aAAA,IAAA,CAAA,EAAA,EAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA;KACA;;;;;;;AAOA,8BAAA,EAAA,sCAAA;AACA,UAAA,YAAA,GAAA,QAAA,CAAA,UAAA,EAAA,GAAA,CAAA,GAAA,CAAA;UACA,aAAA;UACA,cAAA;UACA,WAAA,GAAA,EAAA;UACA,YAAA,CAAA;;;AAIA,UAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,CAAA,YAAA;AACA,eAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA,QAAA,EAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA;OACA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA;;;AAGA,qBAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA,KAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,uBAAA,GAAA,aAAA,CAAA,CAAA;;;;AAIA,oBAAA,GAAA,mCAAA,GAAA,aAAA,GAAA,cAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,GAAA,IAAA,CAAA;;;AAGA,sBAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACA,MAAA,EAAA,CACA,GAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AAAA,iBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,KAAA,EAAA,CAAA;SAAA,CAAA,CACA,GAAA,EAAA,CAAA;;;;;AAKA,mBAAA,GAAA,CAAA,WAAA,CAAA,MAAA,GACA,cAAA,GACA,CAAA,CAAA,YAAA,CAAA,WAAA,EAAA,cAAA,CAAA,CAAA;OAEA,CAAA,CAAA;;AAEA,aAAA,WAAA,CAAA;KAEA;;;;;;;AAOA,kBAAA,EAAA,wBAAA,WAAA,EAAA;;AAEA,UAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,wBAAA,CAAA,CAAA,IAAA,EAAA,CACA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,eAAA,CAAA,CAAA,OAAA,CAAA,WAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;OACA,CAAA,CAAA,IAAA,EAAA,CAAA;KACA;;;;;;;AAOA,4BAAA,EAAA,oCAAA;AACA,aAAA,CAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,CAAA,YAAA;AACA,eAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA;OACA,CAAA,CAAA,MAAA,CAAA;KACA;;;;;;;;;;;;;;;;;;AAkBA,gBAAA,EAAA,sBAAA,KAAA,EAAA,MAAA,EAAA;AACA,UAAA,QAAA,CAAA;;AAEA,UAAA,KAAA,IAAA,IAAA,EAAA;AACA,aAAA,GAAA,EAAA,CAAA;OACA;;AAEA,UAAA,KAAA,CAAA,QAAA,EAAA,CAAA,WAAA,EAAA,KAAA,MAAA,EAAA;AACA,eAAA,EAAA,CAAA;OACA;;AAEA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,CAAA,SAAA,CAAA,MAAA,CAAA,KAAA,UAAA,EAAA;AACA,gBAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA;AACA,aAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA;OACA;;AAEA,UAAA,KAAA,CAAA,QAAA,EAAA,CAAA,IAAA,EAAA,KAAA,EAAA,EAAA;AACA,eAAA,EAAA,CAAA;OACA;;AAEA,UAAA,KAAA,CAAA,QAAA,EAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AACA,aAAA,GAAA,KAAA,CAAA,OAAA,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;OACA;;AAEA,UAAA,QAAA,CAAA,UAAA,EAAA,EAAA;AACA,aAAA,GAAA,QAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA;OACA;;AAEA,aAAA,KAAA,CAAA;KACA;;;;;;;;;;;AAWA,aAAA,EAAA,mBAAA,IAAA,EAAA,GAAA,EAAA;AACA,UAAA,OAAA,GAAA,EAAA;UAAA,IAAA;UAAA,CAAA,CAAA;AACA,OAAA,CAAA,IAAA,CAAA,GAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,YAAA,OAAA,IAAA,CAAA,CAAA,CAAA,KAAA,WAAA,EAAA;AACA,iBAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA;SACA,MAAA;AACA,WAAA,CAAA,IAAA,CAAA,GAAA,EAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,gBAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,KAAA,EAAA;AACA,kBAAA,OAAA,OAAA,CAAA,CAAA,CAAA,KAAA,WAAA,EAAA;AACA,uBAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;eACA;AACA,qBAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,KAAA,CAAA;aACA;WACA,CAAA,CAAA;SACA;OACA,CAAA,CAAA;AACA,UAAA,CAAA,CAAA,aAAA,CAAA,OAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA;OACA;AACA,aAAA,OAAA,CAAA;KAEA;;;;;;;AAOA,YAAA,EAAA,kBAAA,EAAA,EAAA;AACA,cAAA,CAAA,OAAA,CAAA;AACA,WAAA,EAAA,aAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,GAAA,GAAA,GAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,QAAA,CAAA,QAAA;OACA,CAAA,CAAA;KACA;;;;;;;AAOA,WAAA,EAAA,iBAAA,EAAA,EAAA;AACA,cAAA,CAAA,OAAA,CAAA;AACA,WAAA,EAAA,YAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,GAAA,GAAA,GAAA,EAAA;AACA,eAAA,EAAA,QAAA,CAAA,QAAA,CAAA,OAAA;AACA,cAAA,EAAA,kBAAA,cAAA;OACA,CAAA,CAAA;KACA;;;;;;AAMA,wBAAA,EAAA,gCAAA;AACA,cAAA,CAAA,OAAA,CAAA;AACA,WAAA,EAAA,eAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA;AACA,eAAA,EAAA,QAAA,CAAA,QAAA,CAAA,oBAAA;OACA,CAAA,CAAA;KACA;;;;;;;AAOA,iBAAA,EAAA,yBAAA;AACA,UAAA,EAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA;;;;;AAKA,QAAA,GAAA,CAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,cAAA,EAAA,KAAA;AACA,aAAA,EAAA,CAAA,CAAA,QAAA;AACA,kBAAA,EAAA,EAAA;AACA,mBAAA,EAAA,EAAA;AACA,gBAAA,EAAA;;;AAGA,oBAAA,EAAA;AACA,sBAAA,EAAA,CAAA,CAAA;AACA,uBAAA,EAAA,CAAA,CAAA,QAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,EAAA,CAAA,OAAA,CAAA,WAAA,CAAA;WACA;;;AAGA,kBAAA,EAAA,EAAA;;;AAGA,wBAAA,EAAA;AACA,eAAA,EAAA,EAAA,CAAA,OAAA,CAAA,GAAA;AACA,gBAAA,EAAA;AACA,oBAAA,EAAA,EAAA,CAAA,OAAA,CAAA,MAAA;AACA,wBAAA,EAAA,CAAA;aACA;WACA;;;AAGA,mBAAA,EAAA,EAAA;;;AAGA,kBAAA,EAAA,EAAA;;;AAGA,cAAA,EAAA,EAAA;;;AAGA,eAAA,EAAA,EAAA;SACA;;AAEA,WAAA,EAAA;AACA,eAAA,EAAA,KAAA;AACA,qBAAA,EAAA,KAAA;AACA,kBAAA,EAAA,KAAA;AACA,kBAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,SAAA,gCAAA,EAAA,KAAA,EAAA,8BAAA,EAAA,CAAA;SACA;;AAEA,aAAA,EAAA,EAAA;AACA,kBAAA,EAAA,EAAA;AACA,YAAA,EAAA,EAAA;;OAEA,CAAA,CAAA;;AAEA,UAAA,CAAA,GAAA,CAAA,wBAAA,CAAA,CAAA;KACA;;;;;;;;;;;AAWA,mBAAA,EAAA,yBAAA,aAAA,EAAA;AACA,UAAA,QAAA,GAAA,CAAA,CAAA,aAAA,GAAA,kBAAA,GAAA,0BAAA,CAAA;;AAEA,aAAA,CAAA,CAAA,aAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,eAAA,CAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA;OACA,CAAA,CAAA,GAAA,EAAA,CAAA;KAEA;;;;;;;AAOA,4BAAA,EAAA,oCAAA;AACA,aAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,gCAAA,CAAA,CAAA,MAAA,CAAA;KACA;;;;;;;;AAQA,gCAAA,EAAA,sCAAA,MAAA,EAAA,SAAA,EAAA;AACA,aAAA,CAAA,MAAA,CAAA;AACA,eAAA,EAAA,aAAA,GAAA,QAAA,CAAA,wBAAA,EAAA,GAAA,kGAAA;AACA,aAAA,EAAA,+BAAA;AACA,eAAA,EAAA;AACA,aAAA,EAAA,EAAA,KAAA,EAAA,sBAAA,EAAA,SAAA,EAAA,aAAA,EAAA,QAAA,EAAA,oBAAA;AAAA,qBAAA,QAAA,CAAA,kBAAA,CAAA,MAAA,EAAA,SAAA,EAAA,IAAA,CAAA,CAAA;aAAA,EAAA;AACA,YAAA,EAAA,EAAA,KAAA,EAAA,6BAAA,EAAA,SAAA,EAAA,aAAA,EAAA,QAAA,EAAA,oBAAA;AAAA,qBAAA,QAAA,CAAA,kBAAA,CAAA,MAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;aAAA,EAAA;AACA,gBAAA,EAAA,EAAA,KAAA,EAAA,kBAAA,EAAA,SAAA,EAAA,YAAA,EAAA,QAAA,EAAA,oBAAA;AAAA,oBAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA;aAAA,EAAA;SACA;OACA,CAAA,CAAA;KAEA;;;;;;;AAOA,sBAAA,EAAA,8BAAA;AACA,cAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,0BAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,QAAA,EAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,CAAA;KACA;;;;;;;AAOA,kBAAA,EAAA,0BAAA;AACA,UAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,gBAAA,CAAA,oBAAA,EAAA,CAAA;;AAEA,YAAA,QAAA,CAAA,UAAA,EAAA,EAAA;AACA,kBAAA,CAAA,+BAAA,EAAA,CAAA;SACA;OACA;KACA;;;;;;;AAOA,cAAA,EAAA,sBAAA;AACA,cAAA,CAAA,GAAA,CAAA,UAAA,EAAA,CAAA;;;AAGA,cAAA,CAAA,GAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,SAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,QAAA,EAAA,IAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;;AAGA,cAAA,CAAA,GAAA,CAAA,aAAA,EAAA,CAAA;KACA;;;;;;;AAOA,cAAA,EAAA,sBAAA;AACA,cAAA,CAAA,mBAAA,EAAA,CAAA;;AAEA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,CAAA;OACA,CAAA,CAAA;KAEA;;;;;;;;;;AAUA,cAAA,EAAA,sBAAA;AACA,UAAA,GAAA,CAAA;AACA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,SAAA,CAAA,QAAA,GAAA,QAAA,CAAA,QAAA,CAAA,UAAA,CAAA;AACA,WAAA,GAAA,IAAA,UAAA,CAAA,CAAA,CAAA,CAAA;OACA,CAAA,CAAA;KACA;;;;;;;;AAQA,aAAA,EAAA,qBAAA;AACA,UAAA,CAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,eAAA,KAAA,CAAA;OACA;;AAEA,cAAA,CAAA,sBAAA,EAAA,CAAA;AACA,cAAA,CAAA,aAAA,EAAA,CAAA;AACA,cAAA,CAAA,oBAAA,EAAA,CAAA;KACA;;;;;;AAMA,aAAA,EAAA,qBAAA;AACA,cAAA,CAAA,WAAA,EAAA,CAAA;KACA;;;;;;;;AAQA,eAAA,EAAA,qBAAA,OAAA,EAAA;;AAEA,UAAA,CAAA,CAAA,OAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;AACA,gBAAA,CAAA,cAAA,EAAA,CAAA;OACA;;AAEA,UAAA,CAAA,GAAA,CAAA,8BAAA,CAAA,CAAA;;AAEA,cAAA,CAAA,SAAA,EAAA,CAAA;;;AAGA,cAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,CAAA;;;AAGA,UAAA,QAAA,CAAA,oBAAA,EAAA,EAAA;AACA,YAAA,CAAA,GAAA,CAAA,8BAAA,CAAA,CAAA;AACA,kBAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,EAAA,GAAA,CAAA,CAAA;OACA,MAAA;AACA,YAAA,CAAA,GAAA,CAAA,4BAAA,CAAA,CAAA;AACA,gBAAA,CAAA,sBAAA,EAAA,CAAA;OACA;KACA;;;;;;;;;;;;AAYA,gBAAA,EAAA,wBAAA;AACA,UAAA,GAAA,CAAA;;AAEA,UAAA,CAAA,EAAA,GAAA,GAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,KAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,EAAA,OAAA,KAAA,CAAA;AACA,eAAA,GAAA,CAAA,WAAA,EAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,QAAA,EAAA,CAAA,WAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;OACA,CAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;OACA,MAAA;AACA,eAAA,CAAA,IAAA,CAAA,2DAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA;OACA;KACA;;;;;;;;;;;;AAYA,gBAAA,EAAA,wBAAA;AACA,UAAA;AACA,eAAA,QAAA,CAAA,YAAA,EAAA,CAAA,CAAA,EAAA,CAAA;OACA,CAAA,OAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,8BAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA;OACA;KACA;;;;;;;;;;;;;AAcA,uBAAA,EAAA,+BAAA;AACA,UAAA;AACA,eAAA,QAAA,CAAA,YAAA,EAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;OACA,CAAA,OAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,+BAAA,CAAA,CAAA;AACA,eAAA,KAAA,CAAA;OACA;KACA;;;;;;;;AAQA,QAAA,EAAA,gBAAA;AACA,cAAA,CAAA,YAAA,EAAA,CAAA;AACA,cAAA,CAAA,gBAAA,EAAA,CAAA;AACA,cAAA,CAAA,eAAA,EAAA,CAAA;AACA,cAAA,CAAA,YAAA,EAAA,CAAA;AACA,cAAA,CAAA,kBAAA,EAAA,CAAA;AACA,cAAA,CAAA,mBAAA,EAAA,CAAA;AACA,cAAA,CAAA,mBAAA,EAAA,CAAA;KACA;;;;;;;;;AASA,sBAAA,EAAA,8BAAA;AACA,cAAA,CAAA,GAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA;AACA,UAAA,CAAA,EAAA,EAAA,CAAA,kBAAA,GAAA,KAAA,CAAA;AACA,cAAA,CAAA,gBAAA,EAAA,CAAA;AACA,cAAA,CAAA,mBAAA,EAAA,CAAA;AACA,cAAA,CAAA,mBAAA,EAAA,CAAA;AACA,cAAA,CAAA,UAAA,EAAA,CAAA;AACA,cAAA,CAAA,qBAAA,EAAA,CAAA;KACA;;;;;;AAOA,OAAA,EAAA;;;;;;;AAOA,WAAA,EAAA,iBAAA;AACA,SAAA,CAAA,IAAA,CAAA,QAAA,EAAA,CAAA;OACA;;;;;;;;;AASA,UAAA,EAAA,cAAA,OAAA,EAAA,IAAA,EAAA;AACA,YAAA,CAAA,GAAA,IAAA,CAAA;AACA,gBAAA,EAAA,YAAA;AACA,cAAA,EAAA,OAAA;AACA,cAAA,EAAA,IAAA,IAAA,MAAA;AACA,sBAAA,EAAA,IAAA;AACA,iBAAA,EAAA,IAAA;SACA,CAAA,CAAA;OACA;;;;;;;;AAQA,aAAA,EAAA,iBAAA,OAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA;OACA;;;;;;;;AAQA,WAAA,EAAA,eAAA,OAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;OACA;;;;;;;;AAQA,aAAA,EAAA,iBAAA,OAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA;OACA,EAEA;;;;;;;;AAMA,OAAA,EAAA;;;;;;;AAOA,uBAAA,EAAA,6BAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA,SAAA,CAAA,4BAAA,CAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA;OACA;;;;;;;AAOA,uBAAA,EAAA,6BAAA;AACA,gBAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,CAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA,SAAA,CAAA,4BAAA,CAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA;OACA;;;;;;;;;AASA,sBAAA,EAAA,4BAAA;AACA,SAAA,CAAA,qBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;AACA,SAAA,CAAA,QAAA,EAAA,EAAA,SAAA,oBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,0HAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;OACA;;;;;;;;;AASA,sBAAA,EAAA,4BAAA;AACA,SAAA,CAAA,qBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;AACA,SAAA,CAAA,QAAA,EAAA,EAAA,SAAA,oBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,oHAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;OACA;;;;;;;AAQA,uBAAA,EAAA,2BAAA,QAAA,EAAA;AACA,YAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,GAAA,QAAA,CAAA;AACA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,mBAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA;OACA;;;;;;;AAOA,4BAAA,EAAA,gCAAA,GAAA,EAAA;AACA,YAAA,GAAA,GAAA,GAAA,CAAA,IAAA,CAAA,QAAA,CAAA;YACA,CAAA,GAAA,CAAA,GAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;AAEA,YAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,EAAA;AACA,aAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,mBAAA,CAAA,CAAA,QAAA,CAAA,aAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,mEAAA,GAAA,CAAA,GAAA,uCAAA,GAAA,CAAA,GAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA;SACA,MAAA;AACA,aAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,CAAA,WAAA,CAAA,aAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,mEAAA,GAAA,CAAA,GAAA,uCAAA,GAAA,CAAA,GAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA;SACA;;AAEA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;OAEA;;;;;;;;;AASA,iBAAA,EAAA,qBAAA,YAAA,EAAA;AACA,YAAA,KAAA,CAAA,YAAA,CAAA,EAAA,OAAA,KAAA,CAAA;;AAEA,YAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,YAAA,CAAA,CAAA;AACA,YAAA,CAAA,IAAA,EAAA,CAAA,OAAA,GAAA,CAAA,CAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,CAAA;AACA,gBAAA,CAAA,gBAAA,EAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;OACA;;;;;;;;;AASA,qBAAA,EAAA,yBAAA,IAAA,EAAA;AACA,YAAA,OAAA,IAAA,KAAA,WAAA,EAAA;AAAA,cAAA,GAAA,KAAA,CAAA;SAAA;;AAEA,YAAA,CAAA,IAAA,EAAA;AACA,cAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CAAA,YAAA,EAAA,0EAAA,CAAA,CACA,IAAA,CAAA,6BAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,aAAA,CAAA,CAAA,GAAA,CAAA,QAAA,EAAA,2BAAA,CAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,2BAAA,CAAA,CAAA,GAAA,CAAA,aAAA,EAAA,2BAAA,CAAA,CAAA;;SAEA,MAAA;AACA,gBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,CAAA,YAAA,EAAA,EAAA,CAAA,CACA,IAAA,CAAA,6BAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,aAAA,CAAA,CAAA,GAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,EAAA,CAAA,CAAA,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA,CAAA;;WAEA;OACA;;;;;;;;;;AAUA,UAAA,EAAA,cAAA,OAAA,EAAA;AACA,YAAA,KAAA,EAAA,IAAA,CAAA;;AAEA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;;AAEA,YAAA,KAAA,CAAA,OAAA,CAAA,EAAA,OAAA,KAAA,CAAA;AACA,eAAA,GAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,EAAA,CAAA,OAAA,GAAA,OAAA,CAAA;AACA,aAAA,GAAA,EAAA,CAAA,OAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,WAAA,CAAA,CAAA;AACA,YAAA,GAAA,EAAA,KAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,WAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,wBAAA,CAAA,CAAA,IAAA,EAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA,IAAA,EAAA,CAAA;;;AAGA,kBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,eAAA,EAAA,GAAA,CAAA,CAAA;OACA;;;;;;;;;;;AAWA,uBAAA,EAAA,2BAAA,IAAA,EAAA;AACA,gBAAA,CAAA,mBAAA,EAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;OACA;;;;;;;AAOA,gBAAA,EAAA,oBAAA,GAAA,EAAA;AACA,YAAA,WAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,YAAA,OAAA,GAAA,KAAA,WAAA,IAAA,GAAA,EAAA;AACA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,wBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;SACA,MAAA;;;AAGA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,6BAAA,CAAA,CACA,MAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,mBAAA,CAAA,CAAA,OAAA,CAAA,WAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;WACA,CACA,CAAA,MAAA,EAAA,CAAA;SACA;OACA;;;;;;;AAOA,wBAAA,EAAA,8BAAA;AACA,YAAA,WAAA,GAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,yBAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,QAAA,CAAA,wBAAA,EAAA,EAAA;AACA,iBAAA,QAAA,CAAA,GAAA,CAAA,mBAAA,EAAA,CAAA;SACA;;AAEA,gBAAA,CAAA,GAAA,CAAA,sBAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,CAAA;AACA,mBAAA,GAAA,QAAA,CAAA,0BAAA,EAAA,CAAA;;AAEA,gBAAA,CAAA,cAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA,IAAA,CACA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,gBAAA,EACA;AACA,oBAAA,EAAA,WAAA,CAAA,MAAA;AACA,qBAAA,EAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,wBAAA,CAAA,CAAA,MAAA;SACA,CACA,CACA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;OAEA;;;;;;;AAOA,yBAAA,EAAA,+BAAA;AACA,YAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,sBAAA,EAAA,CAAA;AACA,kBAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,CAAA;AACA,kBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;SACA;OACA;;;;;;;;AAQA,sBAAA,EAAA,0BAAA,IAAA,EAAA;AACA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;OACA;;;;;;;AAOA,4BAAA,EAAA,kCAAA;AACA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,0BAAA,CAAA,CAAA,IAAA,EAAA,CAAA;OACA;;;;;;;AAOA,4BAAA,EAAA,kCAAA;AACA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,0BAAA,CAAA,CAAA,IAAA,EAAA,CAAA;OACA;;;;;;;AAOA,6BAAA,EAAA,mCAAA;AACA,YAAA,CAAA,CAAA,CAAA,2BAAA,CAAA,CAAA,MAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,mCAAA,CAAA,CAAA;AACA,WAAA,CAAA,gBAAA,CAAA,CAAA,KAAA,CACA,CAAA,CAAA,SAAA,EAAA,EAAA,OAAA,EAAA,YAAA,EAAA,OAAA,EAAA,cAAA,EAAA,CAAA,CACA,IAAA,CACA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,CACA,CACA,CAAA;SACA,MAAA;AACA,cAAA,CAAA,GAAA,CAAA,4BAAA,CAAA,CAAA;SACA;OACA;;;;;;;;;;;;;;AAcA,eAAA,EAAA,mBAAA,MAAA,EAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA;;AAEA,YAAA,OAAA,MAAA,KAAA,WAAA,IAAA,OAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,WAAA,KAAA,WAAA,EAAA;AACA,iBAAA,KAAA,CAAA;SACA;;AAEA,YAAA,OAAA,MAAA,KAAA,WAAA,EAAA;AACA,gBAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA;AACA,cAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA;SACA,MAAA;AACA,cAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,WAAA,GAAA,EAAA,MAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA;SACA;;;AAIA,YAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,+CAAA,GAAA,MAAA,GAAA,GAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,iBAAA,CAAA,CACA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,EACA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CACA,CAAA,CAAA;SACA,CAAA,CACA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;;AAEA,cAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;WACA;;AAEA,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA;WACA;;AAEA,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,CAAA;WACA;;;AAGA,iBAAA,CAAA,CAAA;SACA,CACA,CAAA;;;AAGA,SAAA,CAAA,IAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,MAAA,EAAA,CAAA;;;AAGA,WAAA,IAAA,GACA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,GACA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA;SACA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,CAAA;OACA;;;;;;;;AAQA,uBAAA,EAAA,2BAAA,MAAA,EAAA;AACA,YAAA,MAAA,KAAA,MAAA,EAAA;AACA,WAAA,CAAA,0BAAA,CAAA,CAAA,IAAA,EAAA,CAAA;SACA,MAAA;AACA,WAAA,CAAA,0BAAA,CAAA,CAAA,IAAA,EAAA,CAAA;SACA;OACA;;;;;;;AAOA,sBAAA,EAAA,4BAAA;AACA,SAAA,CAAA,eAAA,CAAA,CAAA,KAAA,EAAA,CAAA;OACA;;;;;;;AAOA,yBAAA,EAAA,+BAAA;AACA,YAAA,CAAA,GAAA,CAAA,uBAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,oBAAA,GACA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,YAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,MAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,CAAA;SACA,MAAA;AACA,kBAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,CAAA;SACA;;AAEA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;OACA;;;;;;AAMA,wBAAA,EAAA,8BAAA;AACA,YAAA,CAAA,GAAA,QAAA,CAAA,qBAAA,EAAA,CAAA;AACA,YAAA,CAAA,CAAA,EAAA,OAAA,KAAA,CAAA;;AAEA,SAAA,CAAA,kBAAA,CAAA,CACA,GAAA,CAAA,EAAA,WAAA,EAAA,CAAA,CAAA,SAAA,EAAA,CAAA,CACA,IAAA,CAAA,QAAA,CAAA,CACA,GAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;AAEA,SAAA,CAAA,aAAA,CAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,CAAA;OACA;;;;;;AAMA,8BAAA,EAAA,oCAAA;;AAEA,YAAA,EAAA,GAAA,CAAA,CAAA,eAAA,CAAA;YACA,UAAA,GAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA;YACA,SAAA,GAAA,CAAA,CAAA,aAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA;YACA,UAAA,GAAA,GAAA;YACA,UAAA,GAAA,GAAA,CAAA;;AAEA,YAAA,CAAA,UAAA,IAAA,SAAA,GAAA,UAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;AACA,kBAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,CAAA;SACA,MAAA,IAAA,UAAA,IAAA,SAAA,GAAA,UAAA,EAAA;AACA,YAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;AACA,kBAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,CAAA;SACA;OAEA;;;;;;AAMA,uBAAA,EAAA,6BAAA;AACA,SAAA,CAAA,6BAAA,CAAA,CAAA,IAAA,CAAA,4BAAA,CAAA,CAAA,GAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA;OACA;;;;;;;AAOA,qBAAA,EAAA,2BAAA;AACA,YAAA,cAAA,GAAA,CAAA;YACA,YAAA,GAAA,CAAA,CAAA;;AAEA,gBAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,CAAA;AACA,gBAAA,CAAA,gBAAA,EAAA,CAAA;;AAEA,gBAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,CAAA;;;AAGA,SAAA,CAAA,aAAA,CAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,EAAA,CAAA,WAAA,GAAA,CAAA,GAAA,GAAA,IAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,UAAA,EAAA,CAAA;;;AAGA,YAAA,OAAA,GAAA,CAAA,CAAA,CAAA,mCAAA,CAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA;;AAEA,aAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,IAAA,OAAA,EAAA,EAAA,EAAA,EAAA;;AAEA,cAAA,QAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,6BAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,mBAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,gDAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,UAAA,EAAA,CAAA;WAAA,CAAA,CAAA,GAAA,EAAA,CACA,CAAA;;AAEA,cAAA,CAAA,QAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,WAAA,IAAA,EAAA,GAAA,OAAA,EAAA;AACA,oBAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,WAAA,CAAA;WACA;;AAEA,cAAA,EAAA,IAAA,OAAA,EAAA;AACA,oBAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,mCAAA,CAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CACA,GAAA,CAAA,UAAA,CAAA,EAAA;AAAA,qBAAA,CAAA,CAAA,IAAA,CAAA,CAAA,UAAA,EAAA,CAAA;aAAA,CAAA,CAAA,GAAA,EAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,qBAAA,CAAA,GAAA,CAAA,CAAA;aAAA,CAAA,GAAA,EAAA,CAAA;WACA;;AAEA,cAAA,MAAA,GAAA,CAAA,EAAA,GAAA,CAAA,CAAA;;;AAGA,WAAA,CAAA,6EAAA,GAAA,MAAA,GAAA,IAAA,GACA,uEAAA,GAAA,MAAA,GAAA,GAAA,CAAA,CAAA,GAAA,CAAA,OAAA,EAAA,CAAA,QAAA,GAAA,EAAA,CAAA,CAAA;SACA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA;OACA;;;;;;;;;AASA,iBAAA,EAAA,qBAAA,GAAA,EAAA;;OAEA;;;;;;;AAOA,mBAAA,EAAA,yBAAA;AACA,SAAA,CAAA,oBAAA,CAAA,CAAA,KAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,kCAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA;OACA;;;;;;;AAOA,mBAAA,EAAA,uBAAA,WAAA,EAAA;AACA,gBAAA,WAAA;AACA,eAAA,CAAA;AACA,oBAAA,CAAA,GAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAA;;AAEA,kBAAA;;AAAA,AAEA,eAAA,CAAA;AACA,oBAAA,CAAA,GAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA;AACA,oBAAA,CAAA,GAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,CAAA;AACA,kBAAA;;AAAA,AAEA;AACA,oBAAA,CAAA,GAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAA;AACA,oBAAA,CAAA,GAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,CAAA;AACA,kBAAA;AAAA,SACA;OACA;;;;;;;;AAQA,wBAAA,EAAA,4BAAA,kBAAA,EAAA;AACA,YAAA,kBAAA,EAAA;AACA,WAAA,CAAA,wDAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA;SACA,MAAA;AACA,cAAA,CAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,WAAA,CAAA;AACA,WAAA,CAAA,mCAAA,CAAA,CAAA,IAAA,CAAA,YAAA;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,IAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA;aACA;WACA,CAAA,CAAA;SACA;OACA;;;;;;;AAOA,mBAAA,EAAA,uBAAA,EAAA,EAAA;AACA,YAAA,EAAA,IAAA,IAAA,EAAA;AACA,WAAA,CAAA,8BAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;AACA,WAAA,CAAA,2BAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;SACA,MAAA;AACA,WAAA,CAAA,8BAAA,CAAA,CAAA,MAAA,EAAA,CAAA;AACA,WAAA,CAAA,2BAAA,CAAA,CAAA,MAAA,EAAA,CAAA;SACA;AACA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;OACA;;;;;;;AAQA,kBAAA,EAAA,wBAAA;;;OAGA;;;;;;;AAOA,cAAA,EAAA,oBAAA;AACA,YAAA,EAAA,GAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,GAAA,GAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA,IAAA,CACA,QAAA,CAAA,MAAA,CACA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,eAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CACA,CACA,CAAA,IAAA,CAAA,oBAAA,CAAA,CACA,GAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,WAAA,CAAA,CACA,GAAA,EAAA,CACA,QAAA,CAAA,eAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,QAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,QAAA,EAAA;AACA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,IAAA,EAAA,CAAA;SACA;OAEA;;;;;;;AAOA,gBAAA,EAAA,sBAAA;;AAEA,YAAA,QAAA,GAAA,KAAA;YACA,QAAA,GAAA,KAAA,CAAA;;AAEA,YAAA,CAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,KAAA,QAAA,EAAA;AACA,cAAA,EAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,SAAA,sBAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,SAAA,YAAA,EAAA,CAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;;AAEA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,KAAA,EAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;AACA,iBAAA,KAAA,CAAA;SACA;;;AAGA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,KAAA,EAAA,UAAA,CAAA,EAAA,IAAA,EAAA;;AAEA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,yBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;;AAGA,cAAA,CAAA,EAAA,EAAA,CAAA,UAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;;;AAGA,cAAA,EAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,8BAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;AAGA,cAAA,CAAA,EAAA,CAAA,MAAA,EAAA,EAAA,GAAA,IAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,0BAAA,GAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;AAGA,cAAA,CAAA,EAAA,CAAA,MAAA,EAAA;AACA,cAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA,oBAAA,GAAA,IAAA,CAAA;;AAEA,gBAAA,QAAA,CAAA,UAAA,EAAA,EAAA;;AAGA,kBAAA,MAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,YAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,EAAA,oBAAA,EAAA,CAAA,CAAA;;AAEA,kBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,iBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA;AACA,wBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA;iBACA,CAAA,CAAA;eACA;;AAEA,kBAAA,YAAA,GAAA,EAAA,CAAA;;AAEA,kBAAA,OAAA,GAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,GAAA,wDAAA,GAAA,EAAA,CAAA;;AAEA,kBAAA,QAAA,GAAA,oFAAA,GAAA,OAAA,GAAA,UAAA,CAAA;;AAEA,oBAAA,CAAA,IAAA,CAAA,YAAA,GACA,QAAA,GACA;mCACA,CACA,CAAA;AACA,gBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;aACA;WAEA,MAAA;;AACA,cAAA,CAAA,IAAA,CAAA,iBAAA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,cAAA,EAAA,CAAA,CAAA,CAAA;;AAEA,gBAAA,MAAA,GAAA,EAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,gBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA;AACA,sBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA;eACA,CAAA,CAAA;aACA;WACA;;;;AAMA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;;;AAGA,gBAAA,KAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AACA,qBAAA,KAAA,CAAA;aACA;;;AAGA,gBAAA,EAAA,GAAA,EAAA,CAAA,IAAA,CAAA,+BAAA,GAAA,GAAA,GAAA,IAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,EAAA,CAAA,MAAA,EAAA;AACA,gBAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,GAAA,EAAA,CAAA,CAAA;AACA,sBAAA,GAAA,IAAA,CAAA;aACA;;;AAGA,gBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA;AACA,kBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA;eACA,CAAA,CAAA;aACA;;AAEA,gBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA;AACA,kBAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA;eACA,CAAA,CAAA;aACA;;;AAGA,iBAAA,GAAA,QAAA,CAAA,YAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;;AAEA,gBAAA,EAAA,CAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,KAAA,CAAA,IAAA,EAAA,EAAA;;AAEA,gBAAA,CACA,IAAA,CAAA,KAAA,CAAA,CACA,QAAA,CAAA,SAAA,CAAA,CAAA;aACA;;;AAIA,gBAAA,QAAA,EAAA;AACA,gBAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;aACA;WAEA,CAAA,CAAA;;;AAGA,cAAA,QAAA,EAAA;AACA,gBAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;;;;;;;;AASA,kBAAA,CAAA,YAAA;AAAA,cAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,qBAAA,CAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;SAAA,EAAA,IAAA,CAAA,CAAA;;AAGA,gBAAA,CAAA,SAAA,EAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACA,MAAA,CAAA,yBAAA,CAAA,CACA,IAAA,CAAA,eAAA,CAAA,CAAA,MAAA,EAAA;SACA,GAAA,EAAA,CACA,GAAA,EAAA,CACA,MAAA,CAAA,mBAAA,CAAA;SACA,IAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,QAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,CAAA,UAAA,EAAA,EAAA,SAAA,yCAAA,EAAA,KAAA,EAAA,kBAAA,EAAA,CAAA,CACA,MAAA,CAAA,CAAA,CAAA,UAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CACA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,2DAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,2BAAA,CAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,YAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,qCAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,2BAAA,CAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,YAAA,EAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,gBAAA,EAAA,CAAA;OAGA;;;;;;;AAOA,gBAAA,EAAA,sBAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA,CAAA,uBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;AACA,YAAA,CAAA,EAAA,EAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,EAAA,CAAA;;OAEA;;;;;;;;;AASA,eAAA,EAAA,mBAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA,EAAA;AACA,YAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA;;AAEA,YAAA,OAAA,IAAA,KAAA,WAAA,EAAA;AAAA,cAAA,GAAA,SAAA,CAAA;SAAA;;;AAGA,SAAA,CAAA,IAAA,CAAA,UAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,CAAA,CAAA,CAAA,CAAA,MAAA,EAAA,OAAA,KAAA,CAAA;AACA,cAAA,QAAA,CAAA,eAAA,CAAA,GAAA,CAAA,EAAA;AACA,gBAAA,GAAA,KAAA,QAAA,EAAA;AACA,eAAA,CAAA,IAAA,CAAA,CAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA;AACA,oBAAA,CAAA,CAAA,EAAA,CAAA,MAAA,EAAA,OAAA,KAAA,CAAA;;AAEA,oBAAA,QAAA,CAAA,YAAA,CAAA,EAAA,CAAA,EAAA;AACA,sBAAA,CAAA,GAAA,CAAA,mBAAA,GAAA,EAAA,CAAA,CAAA;AACA,yBAAA,EAAA,CAAA,QAAA,CAAA;iBACA,MAAA;AACA,sBAAA,CAAA,GAAA,CAAA,oBAAA,GAAA,EAAA,CAAA,CAAA;AACA,oBAAA,CAAA,QAAA,GAAA,IAAA,CAAA;iBACA;;AAEA,oBAAA,IAAA,IAAA,SAAA,EAAA;AACA,0BAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA;iBACA,MAAA;AACA,0BAAA,CAAA,GAAA,CAAA,cAAA,CAAA,EAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA;iBACA;eACA,CAAA,CAAA;aACA,MAAA;;AAEA,kBAAA,QAAA,CAAA,YAAA,CAAA,CAAA,CAAA,EAAA;AACA,oBAAA,CAAA,GAAA,CAAA,mBAAA,GAAA,GAAA,CAAA,CAAA;AACA,uBAAA,CAAA,CAAA,QAAA,CAAA;eACA,MAAA;AACA,oBAAA,CAAA,GAAA,CAAA,oBAAA,GAAA,GAAA,CAAA,CAAA;AACA,iBAAA,CAAA,QAAA,GAAA,IAAA,CAAA;eACA;;;AAGA,kBAAA,IAAA,IAAA,SAAA,EAAA;AACA,wBAAA,CAAA,GAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA;eACA,MAAA;AACA,wBAAA,CAAA,GAAA,CAAA,cAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA;eACA;aACA;WACA;SACA,CACA,CAAA;;;AAGA,YAAA,CAAA,CAAA,KAAA,EAAA;AACA,cAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,cAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,gBAAA,EAAA,GAAA,CAAA,CAAA,CAAA,YAAA,CAAA,YAAA,CAAA;gBACA,EAAA,GAAA,CAAA,CAAA,CAAA,YAAA,CAAA,YAAA,CAAA,CAAA;;AAEA,gBAAA,EAAA,GAAA,EAAA,EAAA,OAAA,CAAA,CAAA;AACA,gBAAA,EAAA,GAAA,EAAA,EAAA,OAAA,CAAA,CAAA,CAAA;AACA,mBAAA,CAAA,CAAA;WACA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA;SACA;OACA;;;;;;AAMA,kBAAA,EAAA,sBAAA,UAAA,EAAA,MAAA,EAAA,KAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;OACA;;;;;;AAMA,kBAAA,EAAA,sBAAA,UAAA,EAAA,MAAA,EAAA,KAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;OACA;;;;;;;;AAQA,oBAAA,EAAA,wBAAA,CAAA,EAAA;AACA,YAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,GAAA,CAAA;;AAEA,mBAAA,GAAA,CAAA,CAAA,MAAA,EAAA,EAAA,IAAA,EAAA,oBAAA,EAAA,iBAAA,EAAA,CAAA,CAAA,iBAAA,CAAA,IAAA,IAAA,GAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA;AACA,qBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,EAAA,EAAA,OAAA,EAAA,iBAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA;SACA;;AAEA,YAAA,CAAA,CAAA,CAAA,CAAA,KAAA,EAAA;AACA,qBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;SACA;;;AAGA,YAAA,CAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,qBAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;SACA,MAAA;AACA,qBAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;SACA;;;AAGA,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;AACA,cAAA,OAAA,CAAA,CAAA,EAAA,KAAA,QAAA,EAAA;AACA,gBAAA,CAAA,CAAA,EAAA,KAAA,QAAA,EAAA;AACA,yBAAA,CAAA,GAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,cAAA,EAAA,YAAA;AACA,oBAAA,CAAA,EAAA,EAAA,CAAA,kBAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,wBAAA,CAAA,YAAA,CAAA,QAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;eACA,CAAA,CAAA;aACA,MAAA;AACA,yBAAA,CAAA,GAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,cAAA,EAAA,YAAA;AACA,oBAAA,CAAA,EAAA,EAAA,CAAA,kBAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,wBAAA,CAAA,YAAA,CAAA,QAAA,EAAA,IAAA,CAAA,CAAA;eACA,CAAA,CAAA;aACA;WACA,MAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,UAAA,EAAA;AACA,uBAAA,CAAA,GAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,cAAA,EAAA,YAAA;AACA,kBAAA,CAAA,EAAA,EAAA,CAAA,kBAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,sBAAA,CAAA,YAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;aACA,CAAA,CAAA;WACA;SACA;;;AAGA,YAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA;AACA,WAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,uBAAA,CAAA,IAAA,CAAA,OAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA;WACA,CAAA,CAAA;SACA;;AAEA,eAAA,CAAA,CAAA,OAAA,EAAA,EAAA,SAAA,CAAA,SAAA,EAAA,KAAA,EAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA;OAEA;;;;;;;;AAQA,sBAAA,EAAA,0BAAA,MAAA,EAAA;AACA,YAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,GAAA,CAAA;;AAGA,YAAA,OAAA,MAAA,CAAA,CAAA,CAAA,KAAA,QAAA,EAAA;;AACA,cAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,SAAA,wBAAA,EAAA,CAAA,CAAA;;AAEA,gBAAA,GAAA,CAAA,CAAA,MAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,MAAA,CAAA,CAAA,CAAA,SAAA,GAAA,kBAAA;AACA,gBAAA,EAAA,GAAA;AACA,yBAAA,EAAA,UAAA;WACA,CAAA,CAAA;;;AAKA,cAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA;AACA,kBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,EAAA,EAAA,OAAA,EAAA,iBAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA;WACA;;AAEA,cAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,KAAA,EAAA;AACA,kBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;WACA;;AAEA,cAAA,OAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,WAAA,EAAA;AACA,gBAAA,OAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,QAAA,EAAA;AACA,oBAAA,CAAA,GAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,cAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;aACA,MAAA,IAAA,OAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,UAAA,EAAA;AACA,oBAAA,CAAA,GAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,cAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;aACA;WACA;;AAEA,cAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,kBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,EAAA,EAAA,SAAA,kBAAA,EAAA,CAAA,CAAA,CAAA;AACA,gBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;AACA,eAAA,GAAA,CAAA,CAAA,OAAA,EAAA,EAAA,SAAA,eAAA,EAAA,CAAA,CAAA;;AAEA,aAAA,CAAA,IAAA,CAAA,MAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,kBAAA,GAAA,IAAA,CAAA,EAAA,OAAA,KAAA,CAAA;AACA,kBAAA,SAAA,GAAA,MAAA,GAAA,KAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;;AAEA,yBAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,CAAA,CAAA,CAAA;;;AAGA,kBAAA,CAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,2BAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;eACA,MAAA;AACA,2BAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;eACA;;;AAGA,kBAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA;AACA,2BAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,EAAA,EAAA,OAAA,EAAA,iBAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA;eACA;;AAEA,kBAAA,CAAA,CAAA,CAAA,CAAA,KAAA,EAAA;AACA,2BAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;eACA;;;AAGA,kBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA;AACA,oBAAA,OAAA,CAAA,CAAA,EAAA,KAAA,QAAA,EAAA;AACA,mBAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,mBAAA,GAAA,SAAA,GAAA,GAAA,EAAA,cAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;iBACA,MAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,UAAA,EAAA;AACA,mBAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,mBAAA,GAAA,SAAA,GAAA,GAAA,EAAA,cAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;iBACA;eACA;;AAEA,yBAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,MAAA,EAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA;aACA,CAAA,CAAA;;AAEA,gBAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA;WACA,MAAA;AACA,gBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;WACA;SAEA,MAAA;;AAEA,cAAA,SAAA,GAAA,MAAA,GAAA,KAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,GAAA,uBAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;;AAEA,cAAA,GAAA,CAAA,CAAA,WAAA,EAAA,CAAA,CAAA,IAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,gBAAA,EAAA,SAAA,CAAA,CAAA;;;AAGA,cAAA,IAAA,CAAA,QAAA,CAAA,YAAA,CAAA,EAAA;AACA,kBAAA,CAAA,MAAA,GAAA,IAAA,CAAA;WACA;AACA,cAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA;AACA,gBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,EAAA,EAAA,OAAA,EAAA,iBAAA,GAAA,MAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA;WACA;AACA,cAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA;AACA,gBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;WACA;AACA,cAAA,CAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,gBAAA,OAAA,MAAA,CAAA,EAAA,KAAA,QAAA,EAAA;AACA,eAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,wBAAA,GAAA,SAAA,GAAA,GAAA,EAAA,cAAA,EAAA,IAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA,CAAA;aACA,MAAA,IAAA,OAAA,MAAA,CAAA,EAAA,KAAA,UAAA,EAAA;AACA,eAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,wBAAA,GAAA,SAAA,GAAA,GAAA,EAAA,cAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA;aACA;WACA;;AAEA,cAAA,MAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,gBAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;WACA,MAAA;AACA,gBAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;WACA;SACA;;AAEA,eAAA,IAAA,CAAA;OACA;;;;;;;;;AASA,eAAA,EAAA,mBAAA,MAAA,EAAA,GAAA,EAAA,OAAA,EAAA,aAAA,EAAA;AACA,YAAA,UAAA,GAAA,GAAA,GAAA,GAAA;YACA,UAAA,GAAA,GAAA,GAAA,GAAA,CAAA,OAAA,EAAA;YACA,IAAA,CAAA;;AAEA,eAAA,GAAA,OAAA,IAAA,IAAA,GAAA,OAAA,GAAA,GAAA,CAAA;;;AAGA,YAAA,OAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,KAAA,WAAA,EAAA,OAAA,KAAA,CAAA;;;AAGA,YAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,UAAA,CAAA,GAAA,IAAA,GAAA,IAAA,KAAA,CAAA,MAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,EAAA,EAAA,CAAA,KAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,CACA,IAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,EAAA,aAAA,EAAA,aAAA,IAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CACA,IAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CACA,QAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;OACA;;;;;;;AAOA,aAAA,EAAA,iBAAA,KAAA,EAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA,KAAA,IAAA,CAAA,GAAA,gBAAA,GAAA,iBAAA,CAAA;AACA,YAAA,MAAA,IAAA,IAAA,EAAA;AACA,WAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,CAAA;SACA,MAAA;AACA,WAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,CAAA;SACA;OACA;;;;;;;AAOA,sBAAA,EAAA,4BAAA;;AAEA,YAAA,QAAA,GAAA,KAAA;YACA,QAAA;YACA,QAAA;YACA,GAAA;YACA,QAAA;YACA,IAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA;;;AAGA,gBAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,mCAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,QAAA,CAAA,MAAA,EAAA;AACA,kBAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,qBAAA,CAAA,CAAA;AACA,kBAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,sBAAA,EAAA,CAAA,CAAA;AACA,kBAAA,GAAA,IAAA,CAAA;;;AAGA,cAAA,QAAA,CAAA,UAAA,EAAA,EAAA;AACA,oBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,gCAAA,EAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA;WACA;;;AAGA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;;AAEA,oBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,IAAA,CAAA,OAAA,CAAA,MAAA,GAAA,IAAA,GAAA,KAAA,CAAA;;;AAGA,eAAA,GAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AACA,0BAAA,EAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,wBAAA,EAAA,QAAA,GAAA,aAAA,GAAA,EAAA;AACA,uBAAA,EAAA,QAAA,GAAA,aAAA,GAAA,YAAA;AACA,wBAAA,EAAA,QAAA,GAAA,iBAAA,GAAA,gBAAA;aACA,CAAA,CAAA;;;AAGA,oBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,gCAAA,EAAA,CAAA,CAAA,IAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,gBAAA,CAAA,GAAA,CAAA,EAAA;;AACA,sBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,cAAA,EAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,UAAA;;AAEA;AACA,qBAAA,EAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,oBAAA,EAAA,SAAA,GAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,sBAAA,EAAA,SAAA,GAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,uBAAA,EAAA,4BAAA;AACA,uBAAA,EAAA,YAAA;AACA,6BAAA,EAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA;eACA,CACA,CAAA,CAAA,CAAA;aACA;WACA,CAAA,CAAA;;AAEA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,SAAA,EAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;;SAEA;OACA;;KAEA;;;;;;;;AAQA,YAAA,EAAA;;;;;;;;AAQA,uBAAA,EAAA,2BAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CAAA,CAAA;SACA,MAAA;AACA,kBAAA,CAAA,GAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;AACA,cAAA,IAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA;AACA,gBAAA,QAAA,CAAA,YAAA,EAAA,EAAA;AACA,sBAAA,CAAA,OAAA,CAAA,QAAA,CAAA,eAAA,EAAA,CAAA,CAAA;aACA,MAAA;AACA,sBAAA,CAAA,gBAAA,EAAA,CAAA;aACA;WACA;AACA,kBAAA,CAAA,WAAA,EAAA,CAAA;AACA,kBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,CAAA;SACA;OACA;;;;;;;;;;;AAWA,YAAA,EAAA,gBAAA,QAAA,EAAA;AACA,YAAA,CAAA,GAAA,CAAA,kCAAA,CAAA,CAAA;;AAEA,gBAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,CAAA;;AAEA,SAAA,CAAA,qBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,YAAA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA;AACA,iBAAA,QAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,CAAA;SACA;;AAEA,YAAA,CAAA,CAAA,aAAA,CAAA,QAAA,CAAA,EAAA;AACA,iBAAA,QAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,CAAA;SACA;;;AAGA,YAAA,QAAA,GAAA,KAAA;YACA,QAAA;YACA,QAAA;YACA,GAAA;YACA,QAAA;YACA,IAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA;;;AAGA,YAAA,CAAA,QAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,GACA,QAAA,CAAA,SAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,QAAA,CAAA,GACA,QAAA,CAAA;;;AAGA,YAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,KAAA,EAAA;AACA,cAAA,CAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA;SACA,MAAA;;AACA,iBAAA,KAAA,CAAA;SACA;;;AAGA,YAAA,IAAA,CAAA,OAAA,CAAA,aAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA;SACA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,UAAA,EAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,UAAA,EAAA,CAAA;AACA,gBAAA,CAAA,UAAA,EAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA,CAAA;AACA,YAAA,CAAA,OAAA,CAAA,aAAA,GAAA,KAAA,CAAA;;AAEA,YAAA,CAAA,IAAA,CAAA,MAAA,EAAA;;AAEA,cAAA,IAAA,CAAA,EAAA,CAAA,UAAA,IAAA,OAAA,IAAA,CAAA,EAAA,CAAA,UAAA,KAAA,UAAA,EAAA;AACA,gBAAA,CAAA,EAAA,CAAA,UAAA,EAAA,CAAA;WACA;AACA,cAAA,CAAA,MAAA,GAAA,IAAA,CAAA;SACA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,eAAA,EAAA,CAAA;;;AAGA,gBAAA,CAAA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,SAAA,EAAA,CAAA;OAEA;;;;;;;;AAQA,0BAAA,EAAA,8BAAA,QAAA,EAAA;AACA,YAAA,IAAA,GAAA,QAAA;YACA,IAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA;AACA,YAAA,CAAA,OAAA,GAAA,QAAA,CAAA;;OAEA;;;;;;;;AAQA,cAAA,EAAA,kBAAA,QAAA,EAAA;AACA,YAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,OAAA,CAAA,iCAAA,CAAA,CAAA;AACA,kBAAA,CAAA,kBAAA,EAAA,CAAA;AACA,kBAAA,CAAA,oBAAA,EAAA,CAAA;SACA;OACA;;;;;;;AAOA,aAAA,EAAA,iBAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,OAAA,CAAA,QAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CAAA,CAAA;SACA;AACA,gBAAA,CAAA,oBAAA,EAAA,CAAA;AACA,gBAAA,CAAA,gBAAA,EAAA,CAAA;OACA;;;;;;;;AAQA,2BAAA,EAAA,+BAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,gBAAA,CAAA,QAAA,CAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,KAAA,EAAA,CAAA;AACA,kBAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,eAAA,CAAA,QAAA,CAAA,CAAA,CAAA;SACA;OACA;;;;;;;;AAQA,0BAAA,EAAA,8BAAA,QAAA,EAAA;;;;;AAKA,YAAA,GAAA;YACA,EAAA,GAAA,CAAA,CAAA,MAAA,EAAA,EAAA,SAAA,6BAAA,EAAA,CAAA;YACA,IAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,MAAA,EAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,SAAA,CAAA,IAAA,CAAA,QAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;;AAEA,cAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,WAAA,EAAA;AACA,eAAA,GAAA,CAAA,CAAA,8BAAA,GAAA,CAAA,CAAA,WAAA,GAAA,IAAA,CAAA,CAAA;;AAEA,eAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA,MAAA,EAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA,IAAA,EAAA,CACA,OAAA,CAAA,aAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,SAAA,EAAA,EAAA,SAAA,kDAAA,EAAA,CAAA,CACA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,YAAA,GAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,eAAA,CAAA,IAAA,CAAA,oBAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA,IAAA,CAAA,iBAAA,CAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;OAEA;;;;;;;;AAQA,gBAAA,EAAA,oBAAA,SAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA,CAAA,EAAA,EAAA,CAAA;;;AAGA,YAAA,CAAA,UAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA,SAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,IAAA,CAAA,yBAAA,EAAA;AACA,cAAA,CAAA,yBAAA,GAAA,CAAA,CAAA;SACA,MAAA;AACA,cAAA,CAAA,yBAAA,EAAA,CAAA;SACA;;;AAGA,YAAA,IAAA,CAAA,yBAAA,IAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,MAAA,EAAA;;AAEA,cAAA,CAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,YAAA,GAAA,IAAA,CAAA,UAAA,CAAA;AACA,cAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,CAAA,gBAAA,EAAA,CAAA;AACA,cAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,CAAA,WAAA,EAAA,CAAA;;;AAGA,cAAA,CAAA,KAAA,CAAA,OAAA,CAAA,OAAA,CAAA,YAAA,GAAA,IAAA,CAAA,UAAA,CAAA;AACA,cAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,gBAAA,EAAA,CAAA;AACA,cAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,WAAA,EAAA,CAAA;SACA;OAEA;;;;;;;;AAQA,oBAAA,EAAA,wBAAA,QAAA,EAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,gCAAA,CAAA,CAAA;AACA,YAAA,CAAA,UAAA,CAAA,WAAA,GAAA,QAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,SAAA,CAAA,IAAA,CAAA,QAAA,EAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,8BAAA,GAAA,GAAA,GAAA,MAAA,GAAA,KAAA,CAAA,CAAA;AACA,cAAA,KAAA,KAAA,CAAA,EAAA;AACA,aAAA,CAAA,mBAAA,GAAA,GAAA,GAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA;WACA;SACA,CAAA,CAAA;OACA,EAEA,EAEA,CAAA;;;;;;;AAGA,QAAA,CAAA,QAAA,GAAA,QAAA,CAAA;CAEA,CAAA,CAAA,MAAA,EAAA,CAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;;;;AC73IA,CAAA,CAAA,EAAA,CAAA,SAAA,GAAA,YAAA;AACA,SAAA,IAAA,CAAA,IAAA,CAAA,YAAA;AACA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,OAAA,KAAA,CAAA;;AAEA,QAAA,IAAA,GAAA,IAAA,CAAA,IAAA;QAAA,GAAA,GAAA,IAAA,CAAA,OAAA,CAAA,WAAA,EAAA,CAAA;AACA,QAAA,GAAA,IAAA,MAAA,EACA,OAAA,CAAA,CAAA,QAAA,EAAA,IAAA,CAAA,CAAA,SAAA,EAAA,CAAA;AACA,QAAA,IAAA,IAAA,MAAA,IAAA,IAAA,IAAA,UAAA,IAAA,GAAA,IAAA,UAAA,EACA,IAAA,CAAA,KAAA,GAAA,EAAA,CAAA,KACA,IAAA,IAAA,IAAA,UAAA,IAAA,IAAA,IAAA,OAAA,EACA,IAAA,CAAA,OAAA,GAAA,KAAA,CAAA,KACA,IAAA,GAAA,IAAA,QAAA,EACA,IAAA,CAAA,aAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AACA,KAAA,CAAA,IAAA,CAAA,CAAA,SAAA,CAAA,wBAAA,CAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,CAAA,WAAA,CAAA,cAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA,KAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA,WAAA,CAAA,WAAA,CAAA,CAAA,WAAA,CAAA,aAAA,CAAA,CAAA;GACA,CAAA,CAAA;CACA,CAAA;;;AAGA,CAAA,CAAA,UAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA;;AAEA,cAAA,CAAA;;AAEA,MAAA,KAAA,GAAA,SAAA,KAAA,CAAA,OAAA,EAAA;;;;;;AAMA,QAAA,IAAA,GAAA,IAAA,CAAA;;AAEA,QAAA,CAAA,IAAA,GAAA,KAAA,CAAA;AACA,QAAA,CAAA,KAAA,GAAA,CAAA,CAAA,QAAA,CAAA;AACA,QAAA,CAAA,SAAA,GAAA,KAAA,CAAA;;;;;;;;;;;AAYA,QAAA,CAAA,OAAA,GAAA;;AAEA,WAAA,EAAA,EAAA;AACA,WAAA,EAAA,EAAA;AACA,UAAA,EAAA;AACA,gBAAA,EAAA,MAAA;AACA,gBAAA,EAAA,EAAA;AACA,cAAA,EAAA,MAAA;AACA,kBAAA,EAAA,cAAA;AACA,cAAA,EAAA,KAAA;AACA,iBAAA,EAAA,qBAAA;OACA;AACA,gBAAA,EAAA,KAAA;AACA,UAAA,EAAA,EAAA;AACA,UAAA,EAAA,KAAA;AACA,cAAA,EAAA,KAAA;AACA,sBAAA,EAAA,EAAA;;;;;;;;;;;;AAYA,eAAA,EAAA,EAAA;AACA,kBAAA,EAAA,EAAA;AACA,kBAAA,EAAA,IAAA;AACA,SAAA,EAAA,EAAA;AACA,mBAAA,EAAA,EAAA;AACA,YAAA,EAAA,UAAA;KACA,CAAA;;;AAGA,KAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;;AAGA,KAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,QAAA,EAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;;AAGA,QAAA,KAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;;AAGA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,EAAA;AACA,UAAA,CAAA,OAAA,CAAA,QAAA,GAAA;AACA,gBAAA,EAAA,IAAA,CAAA,OAAA,CAAA,aAAA,GAAA,UAAA;AACA,YAAA,EAAA,YAAA;OACA,CAAA;KACA;;;AAGA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA;AACA,UAAA,CAAA,OAAA,CAAA,IAAA,GAAA,CACA,EAAA,IAAA,EAAA,QAAA,EAAA,SAAA,8BAAA,EAAA,EAAA,EAAA,uBAAA,EAAA,KAAA,EAAA,kCAAA,EAAA,EACA,EAAA,IAAA,EAAA,QAAA,EAAA,SAAA,wBAAA,EAAA,EAAA,EAAA,QAAA,EAAA,KAAA,EAAA,uDAAA,EAAA,EACA,EAAA,IAAA,EAAA,QAAA,EAAA,SAAA,2BAAA,EAAA,EAAA,EAAA,WAAA,EAAA,KAAA,EAAA,2CAAA,EAAA,EACA,EAAA,IAAA,EAAA,QAAA,EAAA,SAAA,4BAAA,EAAA,EAAA,EAAA,YAAA,EAAA,KAAA,EAAA,0CAAA,EAAA,CACA,CAAA;KACA;;;AAGA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AACA,UAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,GAAA,UAAA,GAAA,IAAA,CAAA,OAAA,CAAA,aAAA,CAAA;KACA;;;AAGA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,EAAA;;AAEA,UAAA,CAAA,OAAA,CAAA,UAAA,GAAA,CACA,EAAA,IAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,CAAA,IAAA,CAAA,MAAA,EAAA,aAAA,EAAA,IAAA,EAAA,EAAA,CACA,CAAA;KACA;;;AAGA,QAAA,CAAA,GAAA,GAAA;AACA,WAAA,EAAA,CAAA,CAAA,QAAA,CAAA;AACA,UAAA,EAAA,KAAA;AACA,SAAA,EAAA,KAAA;KACA,CAAA;;AAEA,QAAA,CAAA,MAAA,GAAA,EAAA,CAAA;AACA,QAAA,CAAA,GAAA,CAAA,MAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA;AACA,QAAA,CAAA,OAAA,GAAA,EAAA,CAAA;AACA,QAAA,CAAA,cAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;AAYA,QAAA,CAAA,IAAA,GAAA,EAEA,CAAA;;;AAGA,QAAA,CAAA,CAAA,GAAA,YAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA;KACA,CAAA;;;;;AAKA,QAAA,CAAA,EAAA,GAAA;AACA,WAAA,EAAA,iBAAA;AACA,YAAA,IAAA,EAAA,GAAA,CAAA;;;AAGA,YAAA,CAAA,GAAA,CAAA,IAAA,GAAA,CAAA,CAAA,SAAA,EAAA,KAAA,CAAA,CACA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,IAAA,CACA,MAAA,CAAA,CAAA,CAAA,aAAA,EAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CACA,MAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,CACA,CAAA;SACA;;;AAGA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA;;;AAIA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,MAAA,GACA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,IAAA,EAAA,GACA,IAAA,CAAA,GAAA,CAAA,IAAA,CACA,CAAA;;;AAGA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,WAAA,CAAA,IAAA,GAAA,IAAA,CAAA;AACA,cAAA,GAAA,IAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA,cAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AACA,cAAA,CAAA,CAAA,IAAA,CAAA,QAAA,KAAA,UAAA,EAAA;AACA,gBAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;;;AAGA,YAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,EAAA;;AACA,cAAA,CAAA,EAAA,CAAA,YAAA,EAAA,CAAA;SACA,MAAA;;AACA,cAAA,CAAA,EAAA,CAAA,gBAAA,EAAA,CAAA;AACA,cAAA,CAAA,EAAA,CAAA,WAAA,EAAA,CAAA;SACA;OACA;;;;;;;AAOA,sBAAA,EAAA,0BAAA,KAAA,EAAA;AACA,eAAA,CAAA,CAAA,KAAA,CAAA,UAAA,CAAA;OACA;;;;;;;;AAQA,uBAAA,EAAA,2BAAA,KAAA,EAAA,KAAA,EAAA;AACA,eAAA,OAAA,KAAA,KAAA,QAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,MAAA,IAAA,OAAA,KAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,aAAA,CAAA,KAAA,WAAA,CAAA;OACA;;;;;;AAMA,2BAAA,EAAA,+BAAA,KAAA,EAAA,IAAA,EAAA;AACA,gBAAA,CAAA,kBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,wBAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;;;AAGA,SAAA,CAAA,IAAA,CAAA,IAAA,EAAA,UAAA,GAAA,EAAA;;;AAGA,cAAA,CAAA,GAAA,CAAA,2CAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,kBAAA,CAAA,wBAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;SAEA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,UAAA,EAAA,CAAA;OAEA;;;;;;;AAOA,iBAAA,EAAA,uBAAA;;;;;;;;;;;;;;;;;;;;AAoBA,eAAA,IAAA,CAAA,CAAA,EAAA,CAAA,SAAA,EAAA,CAAA;OAEA;;;;;;AAMA,YAAA,EAAA,kBAAA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA;OACA;;;;;;AAMA,eAAA,EAAA,qBAAA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,CAAA;OACA;;;;;;;AAOA,gBAAA,EAAA,oBAAA,EAAA,EAAA;AACA,UAAA,GAAA,EAAA,CAAA,OAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;AAEA,eAAA,IAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;OACA;;;;;;;AAOA,YAAA,EAAA,gBAAA,MAAA,EAAA;AACA,YAAA,GAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,CAAA,MAAA,IAAA,CAAA,CAAA,CAAA,aAAA,CAAA,MAAA,CAAA,EAAA;AACA,eAAA,GAAA,IAAA,MAAA,EAAA;AACA,gBAAA,GAAA,IAAA,MAAA,CAAA,KAAA,GAAA,GAAA,GAAA,IAAA,EAAA,IAAA,CAAA,CAAA;AACA,eAAA,GAAA,GAAA,CAAA,OAAA,CAAA,IAAA,EAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA;WACA;SACA;AACA,eAAA,GAAA,CAAA;OACA;;;;;;;AAOA,iBAAA,EAAA,qBAAA,GAAA,EAAA;AACA,YAAA,CAAA,OAAA,CAAA,YAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA;OACA;;;;;;AAMA,kBAAA,EAAA,wBAAA;AACA,YAAA,CAAA,GAAA,CAAA,+BAAA,CAAA,CAAA;AACA,YAAA,CAAA,OAAA,CAAA,SAAA,GAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,EAAA,CAAA,wBAAA,EAAA,CAAA;;;AAGA,YAAA,CAAA,EAAA,CAAA,WAAA,EAAA,CAAA;OAEA;;;;;;;AAOA,wBAAA,EAAA,4BAAA,gBAAA,EAAA;AACA,eAAA,CAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,IAAA,IAAA,EAAA,OAAA,KAAA,CAAA;AACA,cAAA,OAAA,CAAA,CAAA,QAAA,IAAA,WAAA,EAAA,OAAA,KAAA,CAAA;AACA,cAAA,CAAA,CAAA,QAAA,IAAA,KAAA,EAAA,OAAA,KAAA,CAAA;AACA,cAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,OAAA,KAAA,CAAA;;AAEA,iBAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,UAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA;AACA,mBAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,MAAA,IAAA,KAAA,CAAA,QAAA,EAAA,CAAA,WAAA,EAAA,IAAA,SAAA,IAAA,CAAA,KAAA,IAAA,CAAA,IAAA,KAAA,IAAA,KAAA,CAAA;WACA,CAAA,CAAA;SAEA,CAAA,CAAA;OACA;;;;;;;;AAQA,gBAAA,EAAA,oBAAA,GAAA,EAAA,QAAA,EAAA;;AAEA,SAAA,CAAA,gBAAA,CAAA,CAAA,IAAA,EAAA,CAAA;;AAEA,SAAA,CAAA,OAAA,CAAA,GAAA,EACA,EAAA,EACA,IAAA,CAAA,QAAA,CAAA,UAAA,CACA,CAAA,IAAA,CAAA,YAAA;AACA,iBAAA,CAAA,KAAA,CAAA,0CAAA,CAAA,CAAA;SACA,CAAA,CAAA,MAAA,CAAA,UAAA,QAAA,EAAA;AACA,cAAA,OAAA,QAAA,KAAA,WAAA,IAAA,OAAA,QAAA,KAAA,UAAA,EAAA;AACA,oBAAA,CAAA,QAAA,CAAA,CAAA;WACA,MAAA,IAAA,OAAA,QAAA,KAAA,WAAA,IAAA,OAAA,QAAA,KAAA,QAAA,IAAA,OAAA,IAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,WAAA,IAAA,OAAA,IAAA,CAAA,EAAA,CAAA,QAAA,CAAA,KAAA,UAAA,EAAA;AACA,gBAAA,CAAA,EAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,CAAA;WACA;;;SAGA,CAAA,CAAA;OACA;;;;;;;AAOA,8BAAA,EAAA,oCAAA;AACA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,KAAA,EAAA;AACA,cAAA,CAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA;SACA,CAAA,CAAA;OACA;;;;;;;;;AASA,qBAAA,EAAA,yBAAA,CAAA,EAAA,KAAA,EAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,4BAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AAEA,YAAA,GAAA,GAAA,CAAA,CAAA,QAAA,EAAA;AACA,mBAAA,CAAA,SAAA;SACA,CAAA,CAAA;;;AAGA,YAAA,CAAA,CAAA,KAAA,IAAA,IAAA,EAAA;AACA,aAAA,CAAA,MAAA,CAAA,CAAA,CAAA,WAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;SACA;;;AAGA,YAAA,CAAA,CAAA,QAAA,IAAA,IAAA,EAAA;AACA,aAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,SAAA,kBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA;SACA;;;AAGA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,UAAA,EAAA,EAAA;AACA,cAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;SACA,CAAA,CAAA;;;AAGA,YAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA;OAEA;;;;;;;;AAQA,sBAAA,EAAA,0BAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA;AACA,YAAA,GAAA;YACA,QAAA,GAAA,CAAA,CAAA,WAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,SAAA,+BAAA,EAAA,CAAA,CAAA,IAAA,CAAA,kCAAA,CAAA;YACA,WAAA,GAAA,CAAA,CAAA,WAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,EAAA,CAAA,CAAA,IAAA,CAAA,qCAAA,CAAA;YACA,KAAA,GAAA,OAAA,KAAA,KAAA,WAAA,GAAA,CAAA,GAAA,KAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,kCAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,eAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CACA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA;AACA,cAAA,GAAA,GAAA,CAAA,CAAA,OAAA,CAAA;cACA,KAAA,GAAA,EAAA,IAAA,CAAA,GACA,IAAA,CAAA,EAAA,GACA,IAAA,CAAA,KAAA,CAAA,EAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA,CAAA,IAAA,IAAA,CAAA;;AAEA,cAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AACA,iBAAA,GAAA,CAAA;SACA,CAAA,CAEA,CAAA,MAAA,CACA,CACA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CAAA,CAAA,WAAA,EAAA,KAAA,KAAA,CAAA,GAAA,QAAA,GAAA,IAAA,CAAA,CAAA,CACA,CACA,CAAA;OACA;;;;;;;;;AASA,kBAAA,EAAA,sBAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA;AACA,YAAA,IAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,qBAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA;;;;;AAKA,YAAA,GAAA,IAAA,MAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA;AACA,YAAA,CAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA;AACA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AACA,YAAA,MAAA,CAAA,QAAA,KAAA,UAAA,EAAA,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;OAEA;;;;;;AAMA,sBAAA,EAAA,4BAAA;AACA,YAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,qBAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,YAAA,IAAA,CAAA,OAAA,CAAA,MAAA,KAAA,UAAA,EAAA;;AAEA,cAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,aAAA,EAAA,CAAA,CAAA,CAAA;SACA,MAAA;AACA,cAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,CAAA,CAAA,CAAA;SACA;;;AAGA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA;AAAA,iBAAA,CAAA,KAAA,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,eAAA,CAAA,GAAA,IAAA,CAAA;SAAA,CAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,IAAA,EAAA,EAAA,CAAA;AACA,cAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA;;AAEA,cAAA,GAAA,CAAA,CAAA,CAAA,CAAA,eAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AACA,gBAAA,GAAA,IAAA,MAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;AACA,gBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,KAAA,UAAA,GAAA,EAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AACA,gBAAA,CAAA,CAAA,QAAA,KAAA,UAAA,EAAA;AACA,kBAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA;aACA;WACA;SACA,CAAA,CAAA;;;;AAIA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,EAAA,UAAA,CAAA,EAAA;AAAA,iBAAA,CAAA,KAAA,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,eAAA,CAAA,GAAA,IAAA,CAAA;SAAA,CAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,IAAA,EAAA,EAAA,CAAA;AACA,cAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA;;AAEA,cAAA,GAAA,CAAA,CAAA,CAAA,CAAA,eAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AACA,gBAAA,GAAA,IAAA,MAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAA;AACA,gBAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,OAAA,CAAA,MAAA,KAAA,UAAA,GAAA,EAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AACA,gBAAA,CAAA,CAAA,QAAA,KAAA,UAAA,EAAA;AACA,kBAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA;aACA;WACA;SACA,CAAA,CAAA;;AAEA,YAAA,IAAA,CAAA,OAAA,CAAA,MAAA,KAAA,UAAA,EAAA;;AAEA,cAAA,IAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA,GAAA,EAAA,CACA,EAAA,CAAA,CAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;WACA,MAAA;AACA,gBAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA,GAAA,EAAA,CACA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;WACA;SACA;;;AAGA,YAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,CAAA,GAAA,CAAA,kBAAA,CAAA,CAAA,EAAA,CAAA,kBAAA,EAAA,YAAA;;AAEA,cAAA,IAAA,GAAA,CAAA,CAAA,IAAA,CAAA;cACA,IAAA,GAAA,IAAA,CAAA,IAAA,CAAA,qBAAA,CAAA;cACA,GAAA,GAAA,IAAA,CAAA,GAAA,EAAA;cACA,OAAA,GAAA,IAAA,CAAA,IAAA,CAAA,kBAAA,CAAA;cACA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,mBAAA,CAAA;cACA,IAAA,GAAA,IAAA,CAAA,EAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,CAAA;cACA,IAAA,CAAA;;;;;;;AAOA,cAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,cAAA,CAAA,OAAA,CAAA,eAAA,GAAA,IAAA,CAAA;AACA,cAAA,CAAA,OAAA,CAAA,KAAA,GAAA,KAAA,CAAA;;AAEA,cAAA,OAAA,GAAA,KAAA,QAAA,EAAA;AAAA,eAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA;WAAA;AACA,cAAA,OAAA,GAAA,KAAA,QAAA,EAAA;AAAA,eAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,EAAA,UAAA,GAAA,EAAA;AAAA,qBAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA;aAAA,CAAA,CAAA;WAAA;;AAEA,cAAA,GAAA;AACA,4BAAA,EAAA,IAAA,GAAA,OAAA,GAAA,GAAA,GAAA,GAAA;AACA,2BAAA,EAAA,OAAA;AACA,4BAAA,EAAA,QAAA;AACA,wBAAA,EAAA,IAAA;WACA,CAAA;;AAEA,cAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,UAAA,CAAA,IAAA,UAAA,EAAA;AACA,gBAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,EAAA,cAAA,EAAA,CAAA,EAAA,aAAA,EAAA,SAAA,EAAA,CAAA,CAAA;WACA;;AAEA,cAAA,CAAA,EAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,cAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,CAAA;SAEA,CAAA,CAAA,MAAA,EAAA,CAAA;OAEA;;;;;;;AAOA,iBAAA,EAAA,uBAAA;AACA,YAAA,QAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,mBAAA,EAAA,CAAA;YACA,SAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,CAAA;;AAEA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,cAAA,CAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,WAAA,EAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;WACA,MAAA;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,CAAA;WACA;;AAEA,kBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,mBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,CAAA,CAAA;SACA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,QAAA,EAAA,SAAA,CAAA,CAAA,CAAA;OACA;;;;;;AAMA,YAAA,EAAA,kBAAA;;AAEA,YAAA,CAAA,EAAA,CAAA,eAAA,EAAA,CAAA;;AAEA,SAAA,CAAA,IAAA,CAAA;;AAEA,gBAAA,EAAA,MAAA;AACA,aAAA,EAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,MAAA;AACA,cAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,SAAA,EAAA;AACA,iBAAA,EAAA,IAAA,CAAA,QAAA,CAAA,MAAA;SACA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,eAAA,CAAA,CAAA;OAEA;;;;;;AAMA,qBAAA,EAAA,2BAAA;AACA,YAAA,CAAA,IAAA,CAAA,SAAA,EAAA;AACA,cAAA,CAAA,SAAA,GAAA,IAAA,CAAA;;SAEA,MAAA;AACA,gBAAA,CAAA,SAAA,GAAA,KAAA,CAAA;;WAEA;OACA;;KAEA,CAAA;;;AAGA,QAAA,CAAA,MAAA,GAAA,IAAA,CAAA,EAAA,CAAA,MAAA,CAAA;;AAEA,QAAA,CAAA,QAAA,GAAA;;;;;;;AAOA,gBAAA,EAAA,oBAAA,QAAA,EAAA;AACA,YAAA,KAAA,EAAA,KAAA,CAAA;;AAEA,YAAA,OAAA,QAAA,CAAA,CAAA,CAAA,KAAA,WAAA,EAAA;AACA,kBAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA;SACA;;AAEA,YAAA,CAAA,OAAA,GAAA,QAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,SAAA,EAAA,CAAA;;AAEA,SAAA,CAAA,IAAA,CAAA,QAAA,EAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,mBAAA,GAAA,GAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA;;AAEA,cAAA,OAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA,KAAA,WAAA,IAAA,OAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA,KAAA,UAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,oCAAA,CAAA,CAAA;AACA,mBAAA,KAAA,CAAA;WACA;;AAEA,eAAA,GAAA,IAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA;AACA,eAAA,GAAA,KAAA,CAAA,CAAA,EAAA,CAAA;;;AAGA,eAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA;;AAEA,cAAA,KAAA,IAAA,IAAA,IAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,GAAA,KAAA,eAAA,IAAA,GAAA,KAAA,gBAAA,EAAA;AACA,iBAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;WACA;;AAEA,cAAA,IAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,KAAA,CAAA,EAAA;;AACA,gBAAA,CAAA,GAAA,CAAA,qEAAA,CAAA,CAAA;AACA,gBAAA,CAAA,EAAA,CAAA,qBAAA,CAAA,KAAA,EAAA,KAAA,CAAA,CAAA;WACA,MAAA,IAAA,IAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA;AACA,iBAAA,CAAA,UAAA,CAAA,WAAA,EAAA,CAAA,CAAA,KAAA,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA,CAAA;WACA,MACA,IAAA,OAAA,KAAA,KAAA,QAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA,MAAA,EAAA;AACA,iBAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA;WACA,MAAA;AACA,iBAAA,CAAA,EAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA;WACA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,iBAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA,MAAA,EAAA,CAAA;WACA;SAEA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;AACA,SAAA,CAAA,gBAAA,CAAA,CAAA,IAAA,EAAA,CAAA;OACA;;;AAGA,YAAA,EAAA,gBAAA,QAAA,EAAA;AACA,eAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA;OACA;KACA,CAAA;;;AAGA,QAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA;GAEA,CAAA;;AAEA,QAAA,CAAA,KAAA,GAAA,KAAA,CAAA;CAEA,CAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AC5sBA,CAAA,CAAA,UAAA,MAAA,EAAA,CAAA,EAAA;;AAEA,cAAA,CAAA;;AAEA,MAAA,MAAA,GAAA,SAAA,MAAA,CAAA,OAAA,EAAA;;;;;;AAMA,QAAA,IAAA,GAAA,IAAA,CAAA;AACA,QAAA,CAAA,KAAA,GAAA,CAAA,CAAA,QAAA,CAAA;AACA,QAAA,CAAA,QAAA,GAAA,KAAA,CAAA;AACA,QAAA,CAAA,IAAA,GAAA,OAAA,CAAA,IAAA,IAAA,OAAA,CAAA,IAAA,CAAA,IAAA,IAAA,EAAA,CAAA;;;;;;;;;;;AAWA,QAAA,CAAA,OAAA,GAAA;;AAEA,UAAA,EAAA;AACA,cAAA,EAAA,MAAA;AACA,eAAA,EAAA,cAAA;OACA;;;AAGA,YAAA,EAAA,CAAA,CAAA,QAAA,EAAA,EAAA,OAAA,EAAA,2BAAA,EAAA,CAAA;;;AAGA,UAAA,EAAA,KAAA;;;AAGA,eAAA,EAAA,IAAA;;;AAGA,aAAA,EAAA,KAAA;;;AAGA,SAAA,EAAA,EAAA;;;AAGA,WAAA,EAAA,IAAA;;;AAGA,qBAAA,EAAA,KAAA;;;AAGA,kBAAA,EAAA;;AAEA,sCAAA,EAAA,IAAA;AACA,8BAAA,EAAA,IAAA;AACA,iBAAA,EAAA,GAAA;AACA,uBAAA,EAAA,CAAA;AACA,cAAA,EAAA,IAAA;OACA;;KAEA,CAAA;;;AAGA,KAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,OAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,OAAA,CAAA,CAAA;;AAEA,QAAA,CAAA,QAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,KAAA,UAAA,GAAA,IAAA,GAAA,KAAA,CAAA;;;AAGA,QAAA,KAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;;;;AAKA,QAAA,CAAA,WAAA,GAAA;AACA,UAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,cAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,sBAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,WAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,UAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,UAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,SAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,UAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,YAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,YAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,YAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,WAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,cAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,YAAA,EAAA,CAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,WAAA,EAAA,CAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,YAAA,EAAA,CAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,WAAA,EAAA,CAAA,WAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,cAAA,EAAA,CAAA,WAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,eAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,UAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,YAAA,EAAA,CAAA,cAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,CAAA;;AAEA,WAAA,EAAA,CAAA,KAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,CAAA;;AAEA,YAAA,EAAA,CAAA,UAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,mBAAA,CAAA;;AAEA,cAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,WAAA,EAAA,MAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,CAAA;;AAEA,WAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;;AAEA,WAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;AACA,SAAA,EAAA,CAAA,cAAA,EAAA,WAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,MAAA,EAAA,OAAA,CAAA;KACA,CAAA;;;;;AAKA,QAAA,CAAA,gBAAA,GAAA;AACA,WAAA,EAAA,CAAA,eAAA,EAAA,gBAAA,EAAA,gBAAA,CAAA;AACA,YAAA,EAAA,CAAA,cAAA,EAAA,aAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,gBAAA,CAAA;KACA,CAAA;;;;;AAKA,QAAA,CAAA,mBAAA,GAAA;AACA,YAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,UAAA,CAAA;KACA,CAAA;;;;;AAKA,QAAA,CAAA,UAAA,GAAA,CACA,WAAA,EAAA,OAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,KAAA,EACA,WAAA,EAAA,UAAA,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,MAAA,EACA,YAAA,EAAA,OAAA,EAAA,UAAA,EAAA,OAAA,EAAA,WAAA,EACA,gBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,MAAA,CACA,CAAA;;AAEA,QAAA,CAAA,eAAA,GAAA,CACA,UAAA,EAAA,QAAA,EAAA,eAAA,EAAA,eAAA,EAAA,yBAAA,EAAA,MAAA,CACA,CAAA;;;;;;;;AAQA,QAAA,CAAA,GAAA,GAAA;AACA,WAAA,EAAA,KAAA;AACA,WAAA,EAAA,KAAA;AACA,UAAA,EAAA,KAAA;KACA,CAAA;;;;;;AAMA,QAAA,CAAA,MAAA,GAAA,EAAA,CAAA;;;;;;AAMA,QAAA,CAAA,UAAA,GAAA,KAAA,CAAA;;AAEA,QAAA,CAAA,CAAA,GAAA,YAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA;KACA,CAAA;;;;;AAKA,QAAA,CAAA,EAAA,GAAA;;AAEA,WAAA,EAAA,iBAAA;AACA,YAAA,GAAA,GAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,GAAA,CAAA,CAAA,OAAA,CAAA,GAAA,KAAA,CAAA;AACA,YAAA,CAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA;;;AAGA,YAAA,CAAA,EAAA,CAAA,gBAAA,EAAA,CAAA;;;AAGA,YAAA,CAAA,GAAA,CAAA,KAAA,GAAA,IAAA,CAAA,OAAA,CAAA,MAAA,CAAA;;;AAGA,YAAA,IAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,IAAA,GAAA,CAAA,CAAA,UAAA,EAAA,EAAA,KAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,CACA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CACA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;SACA;;;AAGA,gBAAA,IAAA,CAAA,IAAA;AACA,eAAA,UAAA;AACA,gBAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,CAAA,aAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA,kBAAA;;AAAA,AAEA,eAAA,QAAA;AACA,gBAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,CAAA,WAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA,gBAAA,CAAA,EAAA,CAAA,iBAAA,EAAA,CAAA;AACA,kBAAA;;AAAA,AAEA,eAAA,QAAA;AACA,gBAAA,CAAA,GAAA,CAAA,mBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,aAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,CAAA,EAAA,CAAA,SAAA,CAAA,QAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,CAAA,UAAA,EAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,aAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,CAAA,EAAA,CAAA,SAAA,CAAA,QAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,gBAAA,CAAA,EAAA,CAAA,aAAA,EAAA,CAAA;AACA,kBAAA;;AAAA,AAEA,eAAA,OAAA,CAAA;AACA,eAAA,UAAA;AACA,iBAAA,CAAA,QAAA,GAAA,EAAA,CAAA;AACA,iBAAA,CAAA,OAAA,GAAA,EAAA,CAAA;;AAEA,gBAAA,OAAA,KAAA,CAAA,aAAA,KAAA,WAAA,IAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AACA,kBAAA,CAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA;AACA,kBAAA,CAAA,EAAA,CAAA,aAAA,EAAA,CAAA;aACA,MAAA;;AACA,kBAAA,OAAA,KAAA,CAAA,aAAA,KAAA,WAAA,IAAA,OAAA,KAAA,CAAA,cAAA,KAAA,WAAA,EAAA;AACA,qBAAA,CAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AACA,qBAAA,CAAA,OAAA,GAAA,CAAA,CAAA,KAAA,CAAA,aAAA,GACA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GACA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;eACA;aACA;;;AAGA,gBAAA,QAAA,GAAA,OAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,WAAA,GAAA,KAAA,CAAA,QAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA;AACA,gBAAA,QAAA,GAAA,OAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,WAAA,GAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA;;;AAGA,gBAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA;AACA,qBAAA,EAAA,QAAA;AACA,uBAAA,EAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,EAAA,QAAA,CAAA,KAAA,CAAA,CAAA,GAAA,SAAA,GAAA,EAAA;AACA,kBAAA,EAAA,KAAA,CAAA,IAAA,GAAA,IAAA;aACA,CAAA,CAAA;;;AAGA,gBAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,CAAA,UAAA,EAAA,EAAA,OAAA,EAAA,cAAA,EAAA,CAAA,CACA,MAAA,CAAA,CAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,CACA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,KAAA,EAAA,aAAA,EAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CACA,IAAA,CAAA,iCAAA,CAAA,CAAA;;;AAGA,aAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,kBAAA,CAAA,GAAA,CAAA,EAAA;;AACA,oBAAA,GAAA,GAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AACA,oBAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA;AACA,yBAAA,EAAA,CAAA;AACA,2BAAA,EAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GAAA,SAAA,GAAA,KAAA;AACA,sBAAA,EAAA,KAAA,CAAA,IAAA,GAAA,GAAA,GAAA,CAAA;iBACA,CAAA,CAAA;;;AAGA,oBAAA,CAAA,GAAA,CAAA,KAAA,CACA,KAAA,CAAA,CAAA,CAAA,UAAA,EAAA,EAAA,OAAA,EAAA,cAAA,EAAA,CAAA,CACA,MAAA,CAAA,CAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,CACA,MAAA,CAAA,CAAA,CAAA,QAAA,EAAA,EAAA,KAAA,EAAA,aAAA,EAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CACA,CAAA;eACA;aACA,CAAA,CAAA;;AAEA,kBAAA;;AAAA,AAEA,eAAA,QAAA;AACA,gBAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,CAAA,WAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA,kBAAA;;AAAA,AAEA,eAAA,OAAA;AACA,gBAAA,CAAA,GAAA,CAAA,KAAA,GAAA,IAAA,CAAA,EAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,CAAA;AACA,kBAAA;;AAAA,AAEA;AACA,gBAAA,CAAA,GAAA,CAAA,KAAA,GAAA,CAAA,CAAA,UAAA,EAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA,kBAAA;AAAA,SACA;;;AAGA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,IAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,eAAA,CAAA,CAAA,EAAA,CAAA,eAAA,EAAA,YAAA;AACA,eAAA,CAAA,KAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,GAAA,EAAA,CAAA;SACA,CAAA,CAAA;;;AAGA,YAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,IAAA,IAAA,CAAA,IAAA,KAAA,QAAA,IAAA,KAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CACA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,MAAA,GAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,IAAA,EAAA,GAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;SACA;;;AAGA,YAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,SAAA,IAAA,IAAA,CAAA,IAAA,KAAA,QAAA,IAAA,KAAA,CAAA,MAAA,IAAA,IAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,KAAA,EAAA,CAAA,CAAA;SACA;;;AAGA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA,EAAA,CAAA,MAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,OAAA,EAAA,CAAA,IAAA,EAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,MAAA,EAAA,EAAA,SAAA,iCAAA,EAAA,KAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,UAAA,EAAA,EAAA,SAAA,YAAA,EAAA,KAAA,EAAA,cAAA,EAAA,CAAA,CAAA,CAAA;;;AAGA,YAAA,IAAA,CAAA,IAAA,KAAA,OAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,GAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,GAAA,KAAA,CAAA,IAAA,GAAA,GAAA,CAAA,CAAA;SACA;;;;OAKA;;;;;;AAMA,sBAAA,EAAA,4BAAA;AACA,YAAA,IAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA;AACA,eAAA,CAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA,GAAA,IAAA,CAAA;SACA;OACA;;;;;;AAMA,gBAAA,EAAA,sBAAA;AACA,eAAA,KAAA,CAAA,QAAA,IAAA,IAAA,KAAA,CAAA,CAAA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,KAAA,UAAA,CAAA,CAAA;OACA;;;;;;;;;AASA,kBAAA,EAAA,sBAAA,MAAA,EAAA,MAAA,EAAA;AACA,YAAA,IAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,qBAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA;;;;;AAKA,YAAA,GAAA,IAAA,MAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA,GAAA,IAAA,CAAA;AACA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA;AACA,YAAA,MAAA,CAAA,QAAA,KAAA,UAAA,EAAA,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;OAEA;;;;;;;;;AASA,uBAAA,EAAA,2BAAA,MAAA,EAAA;AACA,YAAA,UAAA,GAAA,CAAA,CAAA,QAAA,EAAA,EAAA,SAAA,wCAAA,EAAA,CAAA,CAAA,IAAA,CAAA,WAAA,EAAA,MAAA,CAAA;YACA,MAAA,GAAA,CAAA,CAAA,UAAA,EAAA,EAAA,SAAA,OAAA,EAAA,CAAA;YACA,IAAA;YACA,GAAA;YAAA,GAAA;YAAA,GAAA;YAAA,IAAA;YAAA,QAAA,GAAA,EAAA,CAAA;;;AAGA,YAAA,CAAA,UAAA,GAAA,IAAA,CAAA;;;AAGA,YAAA,GAAA,IAAA,MAAA,CAAA,EAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA;AACA,YAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,GAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,CAAA,oBAAA,EAAA,YAAA;AACA,cAAA,QAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AAAA,mBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA;WAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;AAGA,gBAAA,CAAA,IAAA,CAAA,0BAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,mBAAA,CAAA,CAAA,OAAA,CAAA,QAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;WACA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;;AAGA,WAAA,CAAA,IAAA,CAAA,QAAA,EAAA,UAAA,GAAA,EAAA;;AAEA,gBAAA,MAAA,CAAA,IAAA,CAAA,0BAAA,CAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,qBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,KAAA,GAAA,CAAA;aACA,CAAA,CAAA,MAAA,EAAA,OAAA,KAAA,CAAA;;AAEA,gBAAA,MAAA,GAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,kBAAA,CAAA,OAAA,CAAA;AACA,kBAAA,EAAA,MAAA,CAAA,IAAA;AACA,sBAAA,EAAA,IAAA;AACA,sCAAA,EAAA,IAAA;AACA,mBAAA,EAAA,GAAA;aACA,CAAA,CAAA;;AAEA,kBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,CAAA,CAAA;WACA,CAAA,CAAA;SACA,CAAA,CAAA;;AAEA,kBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;AAEA,SAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,EAAA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,CAAA,IAAA,IAAA,IAAA,EAAA;AACA,aAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA;AACA,oBAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,IAAA,EAAA,EAAA,CAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;;AAEA,kBAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,YAAA,GAAA,GAAA;AACA,cAAA,EAAA,MAAA,CAAA,IAAA,GAAA,gBAAA;AACA,cAAA,EAAA,QAAA;AACA,eAAA,EAAA,QAAA,CAAA,IAAA,EAAA;SACA,CAAA;;AAEA,YAAA,IAAA,GAAA,IAAA,MAAA,CAAA,EAAA,IAAA,EAAA,GAAA,EAAA,CAAA,CAAA;AACA,kBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,CAAA;;AAEA,eAAA,UAAA,CAAA;OACA;;;;;;;;AAQA,sBAAA,EAAA,0BAAA,MAAA,EAAA;AACA,YAAA,GAAA,CAAA;;AAEA,eAAA,CAAA,CAAA,OAAA,CAAA,CAAA,MAAA,CACA,CAAA,CAAA,GAAA,CAAA,MAAA,EAAA,UAAA,EAAA,EAAA;AACA,cAAA,GAAA,GAAA,CAAA,CAAA,OAAA,CAAA,CAAA;AACA,YAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA;AACA,YAAA,CAAA,kBAAA,CAAA,GAAA,IAAA,CAAA;AACA,cAAA,CAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA;AACA,iBAAA,GAAA,CAAA;SACA,CAAA,CAEA,CAAA;OACA;;AAEA,aAAA,EAAA,mBAAA;AACA,YAAA,OAAA,GAAA,IAAA,CAAA,UAAA,CAAA;AACA,YAAA,OAAA,GAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AACA,YAAA,iBAAA,GAAA,CAAA,CAAA,KAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;;;;AAKA,YAAA,YAAA,GAAA,CAAA,CAAA,IAAA,CAAA,KAAA,EAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,cAAA,OAAA,KAAA,KAAA,WAAA,IACA,OAAA,KAAA,KAAA,QAAA,IACA,CAAA,KAAA,IACA,KAAA,IAAA,SAAA,IACA,KAAA,IAAA,SAAA,IACA,CAAA,CAAA,OAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,KAAA,CAAA,CAAA,IAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,EACA;;AAEA,mBAAA,KAAA,CAAA;WACA,MAAA;;AAEA,mBAAA,IAAA,CAAA;WACA;SACA,CAAA,CAAA;;AAEA,eAAA,YAAA,CAAA;OACA;;AAEA,UAAA,EAAA,gBAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA;AACA,eAAA,IAAA,CAAA,EAAA,CAAA;OACA;;AAEA,UAAA,EAAA,gBAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA;AACA,eAAA,IAAA,CAAA,EAAA,CAAA;OACA;;AAEA,aAAA,EAAA,mBAAA;AACA,YAAA,KAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;SACA;AACA,eAAA,IAAA,CAAA,EAAA,CAAA;OACA;;AAEA,YAAA,EAAA,kBAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,WAAA,CAAA,UAAA,CAAA,CAAA;AACA,eAAA,IAAA,CAAA,EAAA,CAAA;OACA;;AAEA,YAAA,EAAA,gBAAA,GAAA,EAAA;AACA,YAAA,CAAA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA;OACA;;;;;;;AAOA,uBAAA,EAAA,2BAAA,OAAA,EAAA;;;;;AAKA,YAAA,CAAA,0BAAA,GAAA,CAAA,CAAA,OAAA,GAAA,IAAA,GAAA,KAAA,CAAA;;;AAGA,YAAA,KAAA,CAAA,cAAA,IAAA,IAAA,IAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,0BAAA,CAAA,CAAA;AACA,cAAA,CAAA,OAAA,CAAA,OAAA,GAAA,KAAA,CAAA;AACA,eAAA,CAAA,QAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AACA,eAAA,CAAA,OAAA,GAAA,CAAA,CAAA,KAAA,CAAA,aAAA,GACA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GACA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AACA,cAAA,CAAA,EAAA,CAAA,YAAA,EAAA,CAAA;SACA;;aAEA,IAAA,KAAA,CAAA,cAAA,IAAA,IAAA,IAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AACA,gBAAA,CAAA,GAAA,CAAA,4BAAA,CAAA,CAAA;AACA,gBAAA,CAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA;;AAEA,gBAAA,CAAA,EAAA,CAAA,aAAA,EAAA,CAAA;WACA;OAEA;;;;;;AAMA,eAAA,EAAA,mBAAA,IAAA,EAAA;AACA,YAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA;;AAEA,YAAA,GAAA,IAAA,IAAA,IAAA,GAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA;;AAEA,WAAA,GAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AACA,YAAA,CAAA,KAAA,GAAA,KAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,GAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;AAGA,gBAAA,IAAA;AACA,eAAA,QAAA;AACA,mBAAA,YAAA,GAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA;AACA,kBAAA;;AAAA,AAEA;AACA,mBAAA,cAAA,GAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA;AACA,kBAAA;AAAA,SACA;OAEA;;AAEA,cAAA,EAAA,oBAAA;AACA,YAAA,GAAA,GAAA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;AACA,eAAA,GAAA,CAAA,CAAA,CAAA,CAAA;OACA;;;;;;;;AAQA,mBAAA,EAAA,uBAAA,KAAA,EAAA,QAAA,EAAA;AACA,eAAA,CAAA,GAAA,CAAA,0BAAA,CAAA,CAAA;AACA,YAAA,CAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA;;AAEA,aAAA,GAAA,OAAA,KAAA,KAAA,WAAA,GAAA,KAAA,GAAA,KAAA,CAAA;;;AAGA,YAAA,CAAA,KAAA,IAAA,IAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA;;AAEA,iBAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;SACA;;AAEA,YAAA,GAAA,EAAA,IAAA,CAAA;;AAEA,WAAA,GAAA,IAAA,CAAA,EAAA,CAAA,SAAA,EAAA,CAAA;AACA,YAAA,GAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,oBAAA,GAAA,QAAA,CAAA;;;AAGA,SAAA,CAAA,OAAA,CAAA,GAAA,EAAA,IAAA,EAAA,IAAA,CAAA,EAAA,CAAA,YAAA,CAAA,CACA,MAAA,CAAA,YAAA;AACA,cAAA,IAAA,CAAA,OAAA,CAAA,KAAA,EAAA;AACA,gBAAA,CAAA,KAAA,CAAA,MAAA,CAAA,gBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GAAA,IAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;OACA;;AAEA,kBAAA,EAAA,sBAAA,IAAA,EAAA;;AAEA,YAAA,IAAA,IAAA,IAAA,EAAA;AACA,cAAA,CAAA,IAAA,GAAA,IAAA,CAAA;SACA;;AAEA,YAAA,KAAA,CAAA,IAAA,KAAA,QAAA,EAAA;AACA,cAAA,CAAA,EAAA,CAAA,qBAAA,EAAA,CAAA;SACA,MAAA;AACA,cAAA,CAAA,EAAA,CAAA,qBAAA,EAAA,CAAA;SACA;OAEA;;AAEA,2BAAA,EAAA,iCAAA;AACA,YAAA,CAAA,GAAA,CAAA,mCAAA,CAAA,CAAA;AACA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,kBAAA,EAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA,CAAA;OACA;;AAEA,2BAAA,EAAA,iCAAA;;;AAGA,YAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAAA;AACA,eAAA,CAAA,OAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;AACA,eAAA,CAAA,QAAA,GAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;AAEA,cAAA,IAAA,CAAA,OAAA,CAAA,KAAA,EAAA;AACA,gBAAA,CAAA,KAAA,CAAA,GAAA,CAAA,gBAAA,GAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;WACA;SACA;;;AAGA,YAAA,CAAA,CAAA,KAAA,CAAA,QAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,eAAA,EAAA;;AAEA,iBAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA,IAAA,EAAA,CAAA;SACA,MAAA;AACA,cAAA,CAAA,EAAA,CAAA,MAAA,EAAA,CAAA,IAAA,EAAA,CAAA;SACA;;;AAGA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,MAAA,EAAA,CAAA;;;AAGA,YAAA,CAAA,CAAA,KAAA,CAAA,WAAA,EAAA;AACA,cAAA,WAAA,GAAA,CAAA,CAAA,KAAA,CAAA,YAAA,GAAA,KAAA,CAAA,YAAA,GAAA,EAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CACA,CAAA,CAAA,WAAA,EAAA,EAAA,KAAA,EAAA,WAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,CACA,CAAA;SACA;;;AAGA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA;;AAEA,WAAA,CAAA,OAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,YAAA,CAAA,IAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA,CAAA,GACA,CAAA,CAAA,WAAA,EAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,EAAA,UAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,GACA,CAAA,CAAA,WAAA,EAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CACA,CAAA;SACA,CAAA,CAAA;;;AAGA,YAAA,CAAA,CAAA,EAAA,CAAA,UAAA,CAAA,YAAA,CAAA,CAAA;;;AAGA,YAAA,OAAA,IAAA,CAAA,oBAAA,KAAA,UAAA,EAAA;AACA,cAAA,CAAA,oBAAA,EAAA,CAAA;AACA,iBAAA,IAAA,CAAA,oBAAA,CAAA;SACA;OAEA;;AAEA,UAAA,EAAA,cAAA,GAAA,EAAA,KAAA,EAAA;AACA,YAAA,OAAA,GAAA,KAAA,QAAA,EAAA;;;AAGA,WAAA,CAAA,IAAA,CAAA,GAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,iBAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;WACA,CAAA,CAAA;;AAEA,cAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA;SACA,MAAA,IAAA,CAAA,CAAA,KAAA,EAAA;AACA,cAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA;AACA,cAAA,CAAA,EAAA,CAAA,OAAA,EAAA,CAAA;SACA,MAAA;AACA,iBAAA,KAAA,CAAA,GAAA,CAAA,CAAA;SACA;OACA;;AAEA,SAAA,EAAA,aAAA,KAAA,EAAA;;AAEA,YAAA,CAAA,CAAA,KAAA,EAAA;AACA,cAAA,OAAA,KAAA,KAAA,QAAA,EAAA;AACA,gBAAA,KAAA,CAAA,IAAA,IAAA,eAAA,IAAA,KAAA,CAAA,IAAA,IAAA,gBAAA,EAAA;AACA,mBAAA,GAAA,KAAA,CAAA,OAAA,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA;aACA;AACA,gBAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,YAAA,EAAA,KAAA,CAAA,CAAA;AACA,mBAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,KAAA,CAAA,CAAA,CAAA;WACA,MAAA;AACA,gBAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,YAAA,EAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AACA,mBAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA;WACA;SACA;;AAEA,gBAAA,IAAA,CAAA,IAAA;AACA,eAAA,OAAA,CAAA;AACA,eAAA,UAAA;AACA,mBAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,UAAA,GAAA,EAAA,CAAA,EAAA;AACA,qBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,EAAA,CAAA;aACA,CAAA,CAAA;AACA,kBAAA;;AAAA,AAEA;AACA,mBAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA;AACA,kBAAA;AAAA,SACA;OACA;;AAEA,aAAA,EAAA,mBAAA;AACA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,cAAA,CAAA,KAAA,MAAA,EAAA;;AACA,gBAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;WACA;SACA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA;OACA;;AAEA,YAAA,EAAA,kBAAA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA;OACA;;AAEA,YAAA,EAAA,kBAAA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA;OACA;;AAEA,wBAAA,EAAA,8BAAA;AACA,YAAA,CAAA,CAAA,EAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;OACA;;AAEA,wBAAA,EAAA,8BAAA;AACA,YAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAAA;AAAA,iBAAA,KAAA,CAAA;SAAA;;AAEA,SAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,SAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,CAAA,EAAA,CAAA,IAAA,CAAA,aAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,IAAA,EAAA,CAAA,CACA,GAAA,CAAA,EAAA,CAAA,CACA,WAAA,CAAA,SAAA,CAAA,CAAA;;;AAGA,YAAA,CAAA,EAAA,CAAA,aAAA,CAAA,IAAA,EAAA,YAAA;AACA,kBAAA,CAAA,YAAA,EAAA,CACA,IAAA,CAAA,kBAAA,CAAA,CAAA,IAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CACA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA,GAAA,EAAA,CACA,GAAA,EAAA,CACA,IAAA,CAAA,eAAA,CAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,GAAA,EAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,aAAA,CAAA,CAAA,CACA,WAAA,CAAA,QAAA,CAAA,CACA,WAAA,CAAA,SAAA,CAAA,CACA,WAAA,CAAA,SAAA,CAAA,CACA,UAAA,CAAA,aAAA,CAAA,CAAA;;;WAGA,CAAA,CAAA;SACA,CAAA,CAAA;OACA;;;;;;AAMA,6BAAA,EAAA,mCAAA;AACA,YAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,EAAA,OAAA,IAAA,CAAA;;;AAGA,YAAA,IAAA,CAAA,EAAA,CAAA,QAAA,EAAA,KAAA,IAAA,CAAA,IAAA,EAAA,CAAA,KAAA,EAAA;;AAEA,cAAA,CAAA,GAAA,CAAA,gDAAA,CAAA,CAAA;AACA,cAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,cAAA,KAAA,GAAA,IAAA,CAAA,EAAA,CAAA,QAAA,EAAA;cAAA,MAAA,GAAA;AACA,iBAAA,EAAA,IAAA,CAAA,WAAA,CAAA,KAAA,CAAA;AACA,iBAAA,EAAA,KAAA;AACA,gBAAA,EAAA,IAAA;AACA,yBAAA,EAAA,KAAA;AACA,gBAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA;WACA;cAAA,GAAA,GAAA,KAAA,GAAA,KAAA,GAAA,KAAA,CAAA;;AAEA,cAAA,CAAA,QAAA,CAAA,YAAA,CAAA,GAAA,CAAA,EAAA;AACA,mBAAA,CAAA,GAAA,CAAA,qBAAA,GAAA,GAAA,CAAA,CAAA;AACA,oBAAA,CAAA,GAAA,CAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;AACA,oBAAA,CAAA,mBAAA,EAAA,CAAA;WACA;;AAEA,cAAA,OAAA,GAAA,CAAA,CAAA,WAAA,EAAA;AACA,gBAAA,EAAA,QAAA;AACA,qBAAA,yBAAA;AACA,iBAAA,EAAA,MAAA,GAAA,KAAA;WACA,CAAA,CAAA,IAAA,CAAA,mCAAA,GAAA,KAAA,GAAA,4CAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,cAAA,EAAA,YAAA;;AAEA,oBAAA,CAAA,YAAA,CAAA,KAAA,GAAA,KAAA,GAAA,KAAA,CAAA,CAAA;WAEA,CAAA,CAAA;;AAEA,cAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,qBAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,YAAA,CAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA;SACA;;AAEA,YAAA,WAAA,GAAA,CAAA,CAAA,WAAA,EAAA;AACA,cAAA,EAAA,QAAA;AACA,mBAAA,6BAAA;AACA,eAAA,EAAA,iBAAA;SACA,CAAA,CAAA,IAAA,CAAA,qCAAA,CAAA,CACA,GAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA,cAAA,EAAA,IAAA,CAAA,EAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,yBAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,EAAA,CACA,IAAA,CAAA,YAAA,CAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,eAAA,IAAA,CAAA;OACA;;;;;;AAMA,iBAAA,EAAA,uBAAA;AACA,YAAA,CAAA,CAAA,EAAA,CAAA,WAAA,CAAA,IAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;AACA,YAAA,CAAA,EAAA,CAAA,uBAAA,EAAA,CAAA;AACA,eAAA,IAAA,CAAA;OACA;KACA,CAAA;;;AAGA,QAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA;GAEA,CAAA;;AAEA,QAAA,CAAA,MAAA,GAAA,MAAA,CAAA;CAEA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;ACh1BA,CAAA,CAAA,UAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA;;AAEA,cAAA,CAAA;;;;;;;;AAQA,MAAA,KAAA,GAAA,SAAA,KAAA,CAAA,OAAA,EAAA;;AAEA,QAAA,IAAA,GAAA,IAAA,CAAA,UAAA,GAAA,IAAA,CAAA;;;;;;;AAOA,QAAA,CAAA,CAAA,GAAA,YAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,KAAA,CAAA;KACA,CAAA;;;;;;AAMA,QAAA,CAAA,OAAA,GAAA;AACA,cAAA,EAAA,EAAA;AACA,UAAA,EAAA,EAAA;AACA,YAAA,EAAA,EAAA;AACA,QAAA,EAAA,EAAA;AACA,aAAA,EAAA,EAAA;AACA,kBAAA,EAAA,EAAA;AACA,gBAAA,EAAA,EAAA;AACA,eAAA,EAAA,EAAA;AACA,aAAA,EAAA,EAAA;AACA,sBAAA,EAAA,EAAA;AACA,mBAAA,EAAA,OAAA;KACA,CAAA;;;;;;AAMA,QAAA,CAAA,IAAA,GAAA,EAAA,CAAA;;;;;;AAMA,QAAA,CAAA,eAAA,GAAA,EAAA,CAAA;;;;;;AAMA,QAAA,CAAA,EAAA,GAAA;;;;;;;AAOA,WAAA,EAAA,iBAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,oBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,UAAA,CAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,EAAA,EAAA,QAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,GAAA,OAAA,CAAA,KAAA,EAAA,EAAA,EAAA,EAAA,OAAA,CAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,8BAAA,CAAA,CAAA;AACA,gBAAA,CAAA,kBAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,kCAAA,CAAA,CAAA;AACA,gBAAA,CAAA,aAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,yBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,cAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,0BAAA,CAAA,CAAA;AACA,gBAAA,CAAA,eAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,0BAAA,CAAA,CAAA;AACA,gBAAA,CAAA,kBAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,sBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,WAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,yBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,cAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,mBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,UAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,mBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,UAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,yBAAA,CAAA,CAAA;AACA,gBAAA,CAAA,IAAA,EAAA,CAAA;;AAEA,YAAA,CAAA,GAAA,CAAA,4BAAA,CAAA,CAAA;AACA,gBAAA,CAAA,UAAA,EAAA,CAAA;;;;;;;AASA,gBAAA,CAAA,oBAAA,EAAA,CAAA;AACA,gBAAA,CAAA,aAAA,EAAA,CAAA;OACA,EACA,CAAA;;;;AAGA,QAAA,CAAA,EAAA,GAAA,CAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA;;;AAGA,QAAA,CAAA,EAAA,CAAA,KAAA,EAAA,CAAA;GAEA,CAAA;;AAEA,QAAA,CAAA,KAAA,GAAA,KAAA,CAAA;CAGA,CAAA,CAAA,MAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,CAAA,CAAA","file":"async-grid.js","sourcesContent":["/**\n *  jApp.class.js - Custom Grid App container\n *\n *\n *  Defines the properties and methods of the\n *  custom app class.\n *\n *  Jeremy Bloomstrom | jeremy@in.genio.us\n *  Released under the MIT license\n */\n\n;(function(window) {\n\n\tvar jApp = function() {\n\n\t\tvar self = this;\n\n\t\tthis.debug = false;\n\n\t\tif (this.debug) {\n\t\t\tconsole.warn( 'DEBUG MODE ON ')\n\t\t\t$.jStorage.flush();\n\t\t}\n\n\t\tthis.oG = {\n\t\t\tadmin : {\n\n\t\t\t}\n\t\t\t// extend this oG object with the individual page grid objects\n\t\t};\n\n\t\tthis.views = {\n\t\t\t//extend this views object with individual page views\n\t\t\tadmin : {\n\n\t\t\t}\n\t\t}\n\n\t\tthis.grids = {\n\t\t\tadmin : {\n\n\t\t\t}\n\t\t}\n\n\t\tthis.activeGrid = {};\n\n\t\tthis.openForms = [];\n\n\t\t/**\n\t\t * Placeholder for the colparams object\n\t\t * @type {Object}\n\t\t */\n\t\tthis.colparams = {};\n\n\t\t/**\n\t\t * Convenience function to access the active grid object\n\t\t * @method function\n\t\t * @return {[type]} [description]\n\t\t */\n\t\tthis.aG = function() {\n\t\t\treturn this.activeGrid;\n\t\t}\n\n\t\t/**\n\t\t * Get the table from the corresponding model\n\t\t * @param  {[type]} model [description]\n\t\t * @return {[type]}       [description]\n\t\t */\n\t\tthis.model2table = function( model ) {\n\n\t\t\tvar RuleExceptions = {\n\t\t\t\tPerson : 'people'\n\t\t\t}\n\n\t\t\treturn ( RuleExceptions[model] == null ) ?\n\t\t\t\t(model + 's').toLowerCase() :\n\t\t\t\tRuleExceptions[model]\n\t\t}\n\n\t\t/**\n\t\t * Convenience function to access the $grid object\n\t\t * in the active grid\n\t\t * @method function\n\t\t * @return {[type]} [description]\n\t\t */\n\t\tthis.tbl = function() {\n\t\t\treturn this.activeGrid.DOM.$grid;\n\t\t}\n\n\n\t\t/**\n\t\t * Convenience function to access the options\n\t\t * of the active grid\n\t\t * @method function\n\t\t * @return {[type]} [description]\n\t\t */\n\t\tthis.opts = function() {\n\t\t\treturn this.activeGrid.options;\n\t\t}\n\n\t\tthis.log = function(msg,force) {\n\t\t\tif (!!self.debug || !!self.force) {\n\t\t\t\tconsole.log(msg);\n\t\t\t}\n\t\t}\n\n\t\tthis.warn = function(msg,force) {\n\t\t\tif (!!self.debug || !!self.force) {\n\t\t\t\tconsole.warn(msg);\n\t\t\t}\n\t\t}\n\n\t};\n\n\twindow.jApp = jApp;\n\n\n})(window);\n\nvar jApp = new jApp();\n","/**\n *  jUtility.class.js - Custom Data Grid JS utility class\n *\n *  Contains helper functions used by jGrid\n *\n *  Jeremy Bloomstrom | jeremy@in.genio.us\n *  Released under the MIT license\n *\n *  Prereqs: \tjQuery, jApp\n *\n */\n\n if (!Array.prototype.last){\n     Array.prototype.last = function(){\n         return this[this.length - 1];\n     };\n };\n\n;(function(window, $, jApp) {\n\n  'use strict';\n\n  $.fn.serializeObject = function() {\n      var o = {};\n      var a = this.serializeArray();\n      $.each(a, function() {\n          if ($(this).prop('disabled')) return false;\n\n          if ( !!$(this).attr('data-tokens') ) {\n            jApp.log($(this).tokenInput(\"get\"));\n            return o[this.name] = _.pluck( $(this).tokenInput(\"get\"), 'name');\n          }\n\n          if (o[this.name]) {\n              if (!o[this.name].push) {\n                  o[this.name] = [o[this.name]];\n              }\n              o[this.name].push(this.value || '');\n          } else {\n              o[this.name] = this.value || '';\n          }\n      });\n      return o;\n  };\n\n  var jUtility = {\n\n    /**\n     * Set AJAX Defaults\n     * @method function\n     * @return {[type]} [description]\n     */\n    setAjaxDefaults : function() {\n      $.ajaxSetup({\n        headers: {\n            'X-XSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n        }\n      });\n      jApp.log('4.1 Ajax Defaults Set')\n    }, // end fn\n\n    /**\n     * Get the default grid options\n     * @method function\n     * @return {[type]} [description]\n     */\n    getDefaultOptions : function() {\n      /**\n       * Default Options\n       * @type {Object}\n       */\n      return {\n\n        /**\n         * Form Definitions\n         */\n        formDefs : {},\n\n        /**\n         * Event Bindings\n         * @type {Object}\n         */\n        bind : {},\n\n        /**\n         * Function definitions\n         * @type {Object}\n         */\n        fn : {},\n\n        /**\n         * Toggles - true/false switches\n         * @type {Object}\n         */\n        toggles : {\n\n          /**\n           * Data is editable\n           * @type {Boolean} default true\n           */\n          editable : true,\n\n          /**\n           * Show the 'new' button\n           * @type {Boolean} default true\n           */\n          new : true,\n\n          /**\n           * Show the 'edit' button\n           * @type {Boolean} default true\n           */\n          edit : true,\n\n          /**\n           * Show the 'delete' buton\n           * @type {Boolean} default true\n           */\n          del : true,\n\n          /**\n           * Show the sort buttons above each header\n           * @type {Boolean} default true\n           */\n          sort : true,\n\n          /**\n           * Autoupdate the grid data automatically\n           * @type {Boolean} default true\n           */\n          autoUpdate : true,\n\n          /**\n           * Auto-paginate the grid data\n           * @type {Boolean} default true\n           */\n          paginate : true,\n\n          /**\n           * Enable the filter text boxes above each header\n           * @type {Boolean} default true\n           */\n          headerFilters : true,\n\n          /**\n           * Display the header filters above each header\n           */\n          displayHeaderFilters : false,\n\n          /**\n           * Collapse the row menu\n           * @type {Boolean} default true\n           */\n          collapseMenu : true,\n\n          /**\n           * Cache the grid data for faster load times\n           * @type {Boolean} default false\n           */\n          caching : false,\n\n          /**\n           * Show the ellipsis ... and readmore buttons\n           * @type {Boolean} default true\n           */\n          ellipses : true,\n\n          /**\n           * Checkout records before editing\n           * @type {Boolean} default true\n           */\n          checkout : true,\n\n          /**\n           * Close form window after saving\n           * @type {Boolean} default true\n           */\n          closeOnSave : true,\n\n          /**\n           * remove all rows when updating data\n           * @type {Boolean}\n           */\n          removeAllRows : false,\n        },\n\n        /**\n         * General Grid Options\n         */\n\n        /**\n         * If jApp.opts().toggles.autoUpdate, interval to autorefresh data in ms\n         * @type {Number} default 602000\n         */\n        refreshInterval :  602000,\n\n        /**\n         * jQuery DOM target\n         * @type {String} default '.table-responsive'\n         */\n        target : '.table-responsive',\t\t\t\t\t\t// htmlTable target\n\n        /**\n         * Data request options\n         */\n\n        /**\n         * URL of JSON resource (grid data)\n         * @type {String}\n         */\n        url\t: jApp.opts().runtimeParams.table + '/json', \t// url of JSON resource\n\n        /**\n         * Database table name of grid data\n         * @type {String}\n         */\n        table : '',\t\t\t\t\t\t\t\t\t\t\t// db table (for updates / inserts)\n\n        /**\n         * Primary key of table\n         * @type {String}\n         */\n        pkey : 'id',\n\n        /**\n         * Where clause of data query\n         * @type {String}\n         */\n        filter : '',\t\t\t\t\t\t\t\t\t\t// where clause for query\n\n        /**\n         * db columns to show\n         * @type {Array}\n         */\n        columns : [ ],\t\t\t\t\t\t\t\t\t\t// columns to query\n\n        /**\n         * Friendly headers for db columns\n         * @type {Array}\n         */\n        headers : [ ],\t\t\t\t\t\t\t\t\t\t// headers for table\n\n        /**\n         * Data Presentation options\n         */\n\n\n        /**\n         * Pagination - Rows per page\n         * @type {Number} default 10\n         */\n        rowsPerPage : 10,\n\n        /**\n         * Pagination - Starting page number\n         * @type {Number} default 1\n         */\n        pageNum\t: 1,\n\n        /**\n         * The friendly name of the table e.g. Users\n         * @type {String}\n         */\n        tableFriendly : '',\t\t\t\t\t\t\t\t\t// friendly name of table\n\n        /**\n         * The column containing the friendly name of each row e.g. username\n         * @type {String}\n         */\n        columnFriendly : '',\t\t\t\t\t\t\t\t// column containing friendly name of each row\n\n        /**\n         * The text shown when deleting a record\n         * @type {String}\n         */\n        deleteText : 'Deleting',\n\n        /**\n         * html attributes to apply to individual columns\n         * @type {Array}\n         */\n        cellAtts : [ ],\t\t\t\t\t\t\t\t\t\t// column attributes\n\n        /**\n         * html templates\n         * @type {Array}\n         */\n        templates : [ ],\t\t\t\t\t\t\t\t\t// html templates\n\n        /**\n         * Max cell length in characters, if toggles.ellipses\n         * @type {Number} default 38\n         */\n        maxCellLength : 38,\n\n        /**\n         * Max column length in pixels\n         * @type {Number} default 450\n         */\n        maxColWidth: 450,\n\n        /**\n         * Bootstrap Multiselect Default Options\n         * @type {Object}\n         */\n        bsmsDefaults : {\n          //buttonContainer : '<div class=\"btn-group\" />',\n          enableCaseInsensitiveFiltering: true,\n          includeSelectAllOption: true,\n          maxHeight: 185,\n          numberDisplayed: 1,\n          dropUp: true,\n        },\n\n        /**\n         * Header Options\n         * @type {Object}\n         */\n        gridHeader : {\n          icon : 'fa-dashboard',\n          headerTitle : 'Manage',\n          helpText : false,\n        },\n\n        /**\n         * Disabled Form Elements - e.g. password\n         * @type {Array}\n         */\n        disabledFrmElements : [],\n\n        /**\n         * Table buttons appear in the table menu below the header\n         * @type {Object}\n         */\n        tableBtns : {\n\n\n          tableMenu : {\n            type : 'button',\n            class : 'btn btn-success btn-tblMenu',\n            id : 'btn_table_menu_heading',\n            icon : 'fa-table',\n            label : '&nbsp;',\n            'data-order' : 0\n          },\n\n          /**\n           * Refresh Button\n           * @type {Object}\n           */\n          refresh : {\n            type : 'button',\n            name : 'btn_refresh_grid',\n            class : 'btn btn-success btn-refresh',\n            icon : 'fa-refresh',\n            label : 'Refresh',\n            'data-order' : 1\n          },\n\n          /**\n           * New Button\n           * @type {Object}\n           */\n          new : {\n            type : 'button',\n            class : 'btn btn-success btn-new',\n            id : 'btn_edit',\n            icon : 'fa-plus-circle',\n            label : 'New',\n            'data-permission' : 'create_enabled',\n            'data-order' : 2\n          },\n\n          /**\n           * Header Filters Button\n           * @type {Object}\n           */\n          headerFilters : {\n            type : 'button',\n            class : 'btn btn-success btn-headerFilters btn-toggle',\n            id : 'btn_toggle_header_filters',\n            icon : 'fa-filter',\n            label : 'Filter Rows',\n            'data-order' : 3\n          },\n\n          /**\n           * Define custom buttons here. Custom buttons may also be defined at runtime.\n           * @type {Object}\n           */\n          custom : {\n            // visColumns : [\n            //   { icon : 'fa-bars fa-rotate-90', label : ' Visible Columns' },\n            // ],\n\n          },\n\n          /**\n           * Table status\n           * @type {Object}\n           */\n          tableStatus : {\n            type : 'button',\n            class : 'btn btn-tableStatus',\n            id : 'btn_table_status',\n            icon : '',\n            label : '',\n            'data-order' : 9999\n          }\n        },\n\n\n        /**\n         * Row buttons appear in each row of the grid\n         * @type {Object}\n         */\n        rowBtns : {\n\n          /**\n           * The row menu heading. Displayed when an item is checked.\n           * @type {Object}\n           */\n          rowMenu : {\n            type : 'button',\n            class : 'btn btn-primary btn-rowMenu',\n            id : 'btn_row_menu_heading',\n            icon : 'fa-check-square-o',\n            label : '&nbsp;',\n          },\n\n          /**\n           * Clear Selected Button\n           * @type {Object}\n           */\n          clearSelected : {\n            type : 'button',\n            class : 'btn btn-primary btn-clear',\n            id : 'btn_clear',\n            icon : 'fa-square-o',\n            label : 'Clear Selection',\n          },\n\n          /**\n           * Edit Button\n           * @type {Object}\n           */\n          edit : {\n            type : 'button',\n            class : 'btn btn-primary btn-edit',\n            id : 'btn_edit',\n            icon : 'fa-pencil',\n            label : 'Edit ...',\n            'data-permission' : 'update_enabled',\n            'data-multiple' : false\n          },\n\n          /**\n           * Delete Button\n           * @type {Object}\n           */\n          del : {\n            type : 'button',\n            class : 'btn btn-primary btn-delete',\n            id : 'btn_delete',\n            icon : 'fa-trash-o',\n            label : 'Delete ...',\n            //title : 'Delete Record ...',\n            'data-permission' : 'delete_enabled'\n          },\n\n          /**\n           * Define custom buttons here. Custom buttons may also be defined at runtime.\n           * @type {Object}\n           */\n          custom : {\n            //custom : { type : 'button' } // etc.\n          }\n        },\n\n        /**\n         * With Selected Buttons appear in the dropdown menu of the header\n         * @type {Object}\n         */\n        withSelectedBtns : {\n\n          /**\n           * Delete Selected ...\n           * @type {Object}\n           */\n          del : {\n            type : 'button',\n            class : 'li-red',\n            id : 'btn_delete',\n            icon : 'fa-trash-o',\n            label : 'Delete Selected ...',\n            fn : 'delete',\n            'data-permission' : 'delete_enabled',\n          },\n\n          /**\n           * Define custom buttons here. Custom buttons may also be defined at runtime.\n           * @type {Object}\n           */\n          custom : {\n            //custom : { type : 'button' } // etc.\n          }\n        },\n\n        /**\n         * linktables define the relationships between tables\n         * @type {Array}\n         */\n        linkTables : [ ],\n\n      }; // end defaults\n\n    }, // end fn\n\n    /**\n     * Add row to array field from container\n     * @param  {[type]} $container [description]\n     * @return {[type]}            [description]\n     */\n    arrayAddRowFromContainer : function( $container, data ) {\n      var $table = $container.find('.table'),\n          params = $container.data('colparams'),\n          $tr_new = jUtility.oCurrentForm().fn.populateFieldRow( params, null, data ),\n          $btn_add = $table.find('.btn-array-add').detach();\n\n      $table.find('.btn-array-add,.no-row-filler').remove();\n\n      $table.append($tr_new);\n\n      $table.find('tr:last-child').find('td:last-child,th:last-child').append($btn_add);\n\n    }, // end fn\n\n    arrayAddRow : function( inpt ) {\n      var $btn = $(inpt || this),\n          $container = $(this).closest('.array-field-container'),\n          $table = $(this).closest('.table'),\n          $tr = $(this).closest('tr'),\n          params = $container.data('colparams'),\n          $tr_new = jUtility.oCurrentForm().fn.populateFieldRow( params );\n\n      if (params.max != null && +$table.find('tr').length-1 === params.max) {\n        return jUtility.msg.warning('This field requires at most ' + params.max + ' selections.');\n      }\n\n      $table.find('.btn-array-add,.no-row-filler').remove();\n\n      $table.append($tr_new);\n\n      // rename inputs so they all have unique names\n      // $table.find('tr').each( function( i, elm ) {\n      //   $(elm).find(':input').each( function(ii, ee) {\n      //     $(ee).attr('name', $(ee).attr('data-name') + '_' + i)\n      //   });\n      // });\n\n      jUtility.formBootup();\n    }, // end fn\n\n    /**\n     * Remove a row from an array input table\n     * @return {[type]} [description]\n     */\n    arrayRemoveRow : function() {\n      var $btn = $(this),\n          $container = $(this).closest('.array-field-container'),\n          $table = $(this).closest('.table'),\n          $tr = $(this).closest('tr'),\n          params = $container.data('colparams'),\n          $btn_add = $table.find('.btn-array-add').detach();\n\n\n      if (params.min != null && +$table.find('tr').length-1 === params.min) {\n        $table.find('tr:last-child').find('td:last-child').append($btn_add);\n        return jUtility.msg.warning('This field requires at least ' + params.min + ' selections.');\n      }\n\n      $tr.remove();\n\n      // rename inputs so they all have unique names\n      // $table.find('tr').each( function( i, elm ) {\n      //   $(elm).find(':input').each( function(ii, ee) {\n      //     $(ee).attr('name', $(ee).attr('data-name') + '_' + i)\n      //   });\n      // });\n      if  ( !$table.find('tr').length ) {\n        $table.append( '<tr class=\"no-row-filler\"><td></td></tr>' );\n      }\n\n      $table.find('tr:last-child').find('td:last-child,th:last-child').append($btn_add);\n    }, // end fn\n\n    /**\n     * [function description]\n     * @param  {[type]} $inpt [description]\n     * @return {[type]}       [description]\n     */\n    arrayRemoveAllRows : function($container) {\n      var $table = $container.find('table'),\n          $btn_add = $table.find('.btn-array-add').detach();\n\n      $table.empty();\n      $table.append( '<tr class=\"no-row-filler\"><td></td></tr>' );\n      $table.find('tr:last-child').find('td:last-child,th:last-child').append($btn_add);\n    }, // end fn\n\n    /**\n     * Get users permissions\n     * @method function\n     * @return {[type]} [description]\n     */\n    getPermissions : function( model ) {\n      model = (model != null) ? model : jApp.opts().model;\n\n      var storeKey = model + '_permissions';\n\n      if (!!$.jStorage.get(storeKey,false)) {\n        return jUtility.callback.getPermissions( $.jStorage.get(storeKey)  )\n      }\n\n      jApp.log('0.1 - Getting Permissions from server')\n\n      var requestOptions = {\n        url : '/getPermissions/' + model,\n        success : function(response) {\n          $.jStorage.set(storeKey, response, { TTL : 60000*60*24 });\n          jApp.log( $.jStorage.getTTL( storeKey ) );\n\n          jUtility.callback.getPermissions(response);\n          jUtility.buildMenus();\n        }\n      }\n\n      jApp.log(requestOptions.url);\n\n      jUtility.getJSON( requestOptions );\n    }, // end fn\n\n    /**\n     * Check permission on the button parameters\n     * @method function\n     * @param  {[type]} params [description]\n     * @return {[type]}        [description]\n     */\n    isPermission : function( params ) {\n      if (params['data-permission'] == null) return true;\n      return !!jApp.activeGrid.permissions[ params['data-permission'] ];\n    }, // end fn\n\n    /**\n     * Calculate where the grid should be positioned\n     * @return {[type]} [description]\n     */\n    calculateGridPosition : function() {\n      if ( typeof $('.colHeaders').offset() === 'undefined' ) {return false};\n      return {\n        marginTop : +$('.colHeaders').height()+$('.colHeaders').offset().top,\n        height : +$(window).height()-95-$('.colHeaders').offset().top\n      }\n    }, // end fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   withSelected\n     *  @action - The action to perform\n     *\n     *  When one or more rows are checked,\n     *  this defines the various options\n     *  that are available and the actions\n     *  that are performed.\n     **  **  **  **  **  **  **  **  **  **/\n    withSelected : function(action, callback) {\n      console.log('clicked');\n      ( !!jUtility.numInvisibleItemsChecked() ) ?\n        jUtility.confirmInvisibleCheckedItems(action,callback) :\n        jUtility.withSelectedAction(action,callback, true);\n    }, // end fn\n\n    /**\n     * With selected actions\n     * @param  {[type]}   action   [description]\n     * @param  {Function} callback [description]\n     * @param  {[type]}   $cid     [description]\n     * @return {[type]}            [description]\n     */\n    withSelectedAction : function(action, callback, includeHidden) {\n      var $cid = jUtility.getCheckedItems(includeHidden);\n\n      if (!$cid.length) { return jUtility.msg.warning('Nothing selected.') }\n\n      switch(action) {\n        // DELETE SELECTED\n        case 'delete' :\n          jApp.aG().action = 'withSelectedDelete';\n          bootbox.confirm(\"Are you sure you want to delete \" + $cid.length + \" items?\", function(response) {\n            if (!!response) {\n              jUtility.postJSON( {\n                url : jUtility.getCurrentFormAction(),\n                success : jUtility.callback.submitCurrentForm,\n                data : { '_method' : 'delete', 'ids[]' : $cid }\n              });\n            }\n          });\n        break;\n\n        case 'custom' :\n          return (typeof callback === 'function') ?\n            callback( $cid ) :\n            console.warn( 'callback is not a valid function');\n        break;\n\n        default :\n          console.warn( action + ' is not a valid withSelected action');\n        break;\n      }\n\n    }, //end fn\n\n    /**\n     * Get the action of the current form\n     * @method function\n     * @return {[type]} [description]\n     */\n    getCurrentFormAction : function() {\n      switch (jApp.aG().action) {\n        case 'edit' :\n        case 'delete' :\n          return jApp.opts().table + '/' + jUtility.getCurrentRowId();\n        break;\n\n        case 'withSelectedDelete' :\n          return jApp.opts().table;\n        break;\n\n        case 'withSelectedUpdate' :\n          return jApp.opts().table + '/massUpdate';\n        break;\n\n        case 'resetPassword' :\n          return 'resetPassword/' + jUtility.getCurrentRowId();\n        break;\n\n        default :\n          return jUtility.oCurrentForm().options.table //jApp.opts().table;\n        break;\n      }\n    }, // end fn\n\n    /**\n     * [function description]\n     * @method function\n     * @param  {[type]} action [description]\n     * @return {[type]}        [description]\n     */\n    actionHelper : function(action) {\n      jApp.aG().action = action;\n      if ( jUtility.needsCheckout() ) {\n        jUtility.checkout( jUtility.getCurrentRowId() );\n      } else {\n        jUtility.setupFormContainer()\n      }\n    }, // end fn\n\n    /**\n     * Clear the current form\n     * @method function\n     * @return {[type]} [description]\n     */\n    resetCurrentForm : function() {\n      try {\n        jUtility.$currentForm().clearForm();\n        jUtility.$currentForm().find(':input:not(\"[type=button]\"):not(\"[type=submit]\"):not(\"[type=reset]\"):not(\"[type=radio]\"):not(\"[type=checkbox]\")')\n        .each( function(i,elm) {\n          if ( !!$(elm).attr('data-static') ) { return false; }\n\n          //$(elm).data(\"DateTimePicker\").remove();\n          $(elm).val('');\n          if ( $(elm).hasClass('bsms') ) {\n            $(elm).data('jInput').fn.multiselect();\n            $(elm).multiselect('refresh');\n          }\n        });\n      } catch(e) {\n        console.warn(e);\n        return false;\n      }\n    }, // end fn\n\n    /**\n     * Refresh and rebuild the current form\n     * @method function\n     * @return {[type]} [description]\n     */\n    refreshCurrentForm : function() {\n      jApp.aG().store.flush();\n      jUtility.oCurrentForm().fn.getColParams();\n    }, // end fn\n\n    /**\n     * Maximize the current form\n     * @method function\n     * @return {[type]} [description]\n     */\n    maximizeCurrentForm : function() {\n      try {\n\n        if ( jApp.openForms.length ) {\n          jApp.openForms.last().wrapper.find('button').prop('disabled',true);\n        }\n\n        jApp.openForms.push({\n          wrapper : jUtility.$currentFormWrapper().addClass('max'),\n          obj : jUtility.oCurrentForm(),\n          $ : jUtility.$currentForm(),\n          action : jApp.aG().action,\n          model : jUtility.oCurrentForm().model\n        });\n      } catch(e) {\n        console.warn(e);\n        return false;\n      }\n    }, // end fn\n\n    /**\n     * Close the current form\n     * @method function\n     * @return {[type]} [description]\n     */\n    closeCurrentForm : function() {\n      try {\n        var oTgt = jApp.openForms.pop();\n\n        jApp.aG().action = ( jApp.openForms.length ) ?\n          jApp.openForms.last().action : '';\n\n        jUtility.msg.clear()\n\n        oTgt.wrapper.removeClass('max')\n          .find('.formContainer').css('height','');\n        oTgt.$.clearForm();\n\n        if (!jApp.openForms.length) {\n          jUtility.turnOffOverlays();\n        } else {\n\n          jApp.openForms.last().wrapper\n            .find('button').prop('disabled',false).end()\n            .find('.btn-refresh').trigger('click');\n        }\n\n      } catch(ignore) {}\n    }, // end fn\n\n    /**\n     * Set focus on the current form\n     * @method function\n     * @return {[type]} [description]\n     */\n    setCurrentFormFocus : function() {\n      jUtility.$currentFormWrapper().find(\":input:not([type='hidden']):not([type='button'])\").eq(0).focus();\n    }, // end fn\n\n    /**\n     * Get the current form row data for the current row\n     * @method function\n     * @return {[type]} [description]\n     */\n    getCurrentFormRowData : function() {\n      if (jApp.aG().action === 'new') return false;\n      var url = jUtility.getCurrentRowDataUrl();\n\n      jUtility.oCurrentForm().fn.getRowData(url, jUtility.callback.updateDOMFromRowData);\n    }, //end fn\n\n    /**\n     * Get the data url of the current row\n     * @method function\n     * @return {[type]} [description]\n     */\n    getCurrentRowDataUrl : function() {\n      if (typeof jApp.opts().rowDataUrl !== 'undefined') {\n        return jApp.opts().rowDataUrl;\n      }\n      return jApp.opts().table + '/' + jUtility.getCurrentRowId() + '/json';\n    }, //end fn\n\n    /**\n     * Toggle a button to prevent it being clicked multiple times\n     * @method function\n     * @return {[type]} [description]\n     */\n    toggleButton : function($btn) {\n      if( $btn.prop('disabled') ) {\n        $btn.prop('disabled',false)\n            .removeClass('disabled')\n            .html( $btn.attr('data-original-text'));\n      } else {\n        $btn.attr('data-original-text', $btn.html() )\n            .prop('disabled',true)\n            .addClass('disabled')\n            .html('<i class=\"fa fa-spinner fa-pulse\"></i>')\n      }\n    }, // end fn\n\n    /**\n     * Submit the current form\n     * @method function\n     * @return {[type]} [description]\n     */\n    submitCurrentForm : function( $btn ) {\n      var requestOptions = {\n        url : jUtility.getCurrentFormAction(),\n        data : jUtility.oCurrentForm().fn.getFormData(),\n        success : jUtility.callback.submitCurrentForm,\n        //fail : console.warn,\n        always : function() {\n          jUtility.toggleButton($btn);\n        }\n      };\n\n      jUtility.msg.clear();\n\n      if (!!jUtility.$currentForm()) {\n        var oValidate = new validator( jUtility.$currentForm() );\n        if (oValidate.errorState) {\n          return false;\n        }\n      }\n\n      // turn off the button to avoid multiple clicks;\n      jUtility.toggleButton($btn);\n\n\n      jUtility.postJSON( requestOptions );\n\n    }, // end fn\n\n    /**\n     * Save the current form and leave open\n     * @method function\n     * @return {[type]} [description]\n     */\n    saveCurrentForm : function() {\n      jApp.opts().closeOnSave = false;\n      jUtility.submitCurrentForm( $(this) );\n    }, // end fn\n\n    /**\n     * Save the current form and close\n     * @method function\n     * @return {[type]} [description]\n     */\n    saveCurrentFormAndClose : function() {\n\n      jApp.opts().closeOnSave = true;\n      jUtility.submitCurrentForm( $(this) );\n      //jUtility.toggleRowMenu;\n    }, // end fn\n\n    /**\n     * Kill pending ajax request\n     * @method function\n     * @param  {[type]} requestName [description]\n     * @return {[type]}             [description]\n     */\n    killPendingRequest : function(requestName) {\n      try{\n        jApp.aG().dataGrid.requests[requestName].abort();\n      } catch(e) {\n        // nothing to abort\n      }\n    }, //end fn\n\n    /**\n     * Set instance options\n     * @method function\n     * @param  {[type]} options [description]\n     * @return {[type]}         [description]\n     */\n    setOptions : function(options) {\n      jApp.aG().options = $.extend(true, jApp.opts(),options);\n      jApp.log('1.1 Options Set')\n      return jApp.aG();\n    }, //end fn\n\n    /**\n     * Set up the visible columns menu for the table menu\n     * @method function\n     * @return {[type]} [description]\n     */\n    setupVisibleColumnsMenu : function() {\n      if ( typeof jApp.aG().temp.visibleColumnsMenuSetup === 'undefined' || jApp.aG().temp.visibleColumnsMenuSetup === false) {\n        // visible columns\n        _.each( jApp.opts().columns, function( o, i ) {\n          if (i < jApp.opts().headers.length ) {\n            jApp.opts().tableBtns.custom.visColumns.push(\n              {\n                icon : 'fa-check-square-o',\n                label : jApp.opts().headers[i],\n                fn : function() { jUtility.DOM.toggleColumnVisibility( $(this) ) }, 'data-column' : o\n              }\n            );\n          }\n        });\n\n        jApp.aG().temp.visibleColumnsMenuSetup = true;\n      } else {\n        return false;\n      }\n    }, //end fn\n\n    /**\n     * Does the form need confirmation\n     * @method function\n     * @return {[type]} [description]\n     */\n    isConfirmed : function() {\n      var conf = jUtility.$currentFormWrapper().find('#confirmation');\n      if ( !!conf.length && conf.val().toString().toLowerCase() !== 'yes') {\n        jUtility.msg.warning('Type yes to continue');\n        return false;\n      }\n      return true;\n    }, //end fn\n\n    /**\n     * Initialize scrollbar\n     * @method function\n     * @return {[type]} [description]\n     */\n    initScrollbar : function() {\n      $('.table-grid').perfectScrollbar();\n    }, //end fn\n\n    /**\n     * Is autoupdate enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isAutoUpdate : function() {\n      return !!jApp.opts().toggles.autoUpdate;\n    }, //end fn\n\n    /**\n     * Is data caching enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isCaching : function() {\n      return !!jApp.opts().toggles.caching;\n    }, // end fn\n\n    /**\n     * Is record checkout enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isCheckout : function() {\n      return !!jApp.opts().toggles.checkout && jUtility.isEditable();\n    }, // end fn\n\n    /**\n     * Is the grid data editable\n     * @method function\n     * @return {[type]} [description]\n     */\n    isEditable : function() {\n      return !!jApp.opts().toggles.editable;\n    }, //end fn\n\n    /**\n     * Are ellipses enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isEllipses : function() {\n      return !!jApp.opts().toggles.ellipses;\n    }, // end fn\n\n    /**\n     * Is a form container maximized\n     * @method function\n     * @return {[type]} [description]\n     */\n    isFormOpen : function() {\n      return !!jApp.aG().$().find('.div-form-panel-wrapper.max').length;\n    }, // end fn\n\n    /**\n     * Is pagination enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isPagination : function() {\n      return !!jApp.opts().toggles.paginate;\n    }, // end fn\n\n    /**\n     * Is sorting by column enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isSort : function() {\n      return !!jApp.opts().toggles.sort;\n    }, // end fn\n\n    /**\n     * Is toggle mine enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isToggleMine : function() {\n      return window.location.href.indexOf('/my') !== -1;\n    }, // end fn\n\n    /**\n     * Is header filters enabled\n     * @method function\n     * @return {[type]} [description]\n     */\n    isHeaderFilters : function() {\n      return !!jApp.opts().toggles.headerFilters;\n    }, // end fn\n\n    /**\n     * Are header filters currently displayed\n     * @method function\n     * @return {[type]} [description]\n     */\n    isHeaderFiltersDisplay : function() {\n      return !!jApp.opts().toggles.headerFiltersDisplay;\n    }, // end fn\n\n    /**\n     * Is the button with name 'key' enabled\n     * @method function\n     * @param  {[type]} key [description]\n     * @return {[type]}     [description]\n     */\n    isButtonEnabled : function(key) {\n      return typeof jApp.opts().toggles[key] === 'undefined' || !!jApp.opts().toggles[key]\n    }, //end fn\n\n    /**\n     * Is data cache available\n     * @method function\n     * @return {[type]} [description]\n     */\n    isDataCacheAvailable : function() {\n      return (jUtility.isCaching() && !!jApp.aG().store.get('data_' + jApp.opts().table,false) );\n    }, // end fn\n\n    /**\n     * Are there errors in the response\n     * @method function\n     * @return {[type]} [description]\n     */\n    isResponseErrors : function(response) {\n       return (typeof response.errors !== 'undefined' &&\n                      !!response.errors);\n    }, // end fn\n\n    /**\n     * Does the form exist\n     * @param  {[type]} key [description]\n     * @return {[type]}          [description]\n     */\n    isFormExists : function( key ) {\n      return ( typeof jApp.aG().forms[ '$' + key ] !== 'undefined' ||\n               typeof jApp.aG().forms[ 'o' + key.ucfirst() ] !== 'undefined' ||\n               typeof jApp.aG().forms[ key ] !== 'undefined'  );\n    }, // end fn\n\n    /**\n     * Get error message from response\n     * @method function\n     * @param  {[type]} response [description]\n     * @return {[type]}          [description]\n     */\n    getErrorMessage : function(response) {\n      return (typeof response.message !== 'undefined') ?\n        response.message :\n        'There was a problem completing your request.'\n    }, //end fn\n\n    /**\n     * The row needs to be checked out\n     * @method function\n     * @return {[type]} [description]\n     */\n    needsCheckout : function() {\n      return ( jUtility.isCheckout() && ( jApp.aG().action === 'edit' || jApp.aG().action === 'delete' ) );\n    }, //end fn\n\n    /**\n     * The row needs to be checked in\n     * @method function\n     * @return {[type]} [description]\n     */\n    needsCheckin : function() {\n      return jUtility.needsCheckout();\n    }, //end fn\n\n    /**\n     * Get current row id\n     * @method function\n     * @return {[type]} [description]\n     */\n    getCurrentRowId : function() {\n      return jUtility.getCheckedItems(true);\n    }, //end fn\n\n    /**\n     * Display unload warning if a form is open\n     * @method function\n     * @return {[type]} [description]\n     */\n    unloadWarning : function() {\n      if (jUtility.isFormOpen()) {\n        return 'You have unsaved changes.';\n      }\n    }, // end fn\n\n    /**\n     * Update the total pages of the grid\n     * @method function\n     * @return {[type]} [description]\n     */\n    updateTotalPages : function() {\n      jApp.aG().dataGrid.pagination.totalPages = Math.ceil( jApp.aG().dataGrid.data.length / jApp.aG().dataGrid.pagination.rowsPerPage );\n    }, // end fn\n\n    /**\n     * Update pagination of the grid\n     * @method function\n     * @return {[type]} [description]\n     */\n    updatePagination : function() {\n      //pagination\n      if ( jUtility.isPagination() ) {\n        jUtility.updateTotalPages();\n        jUtility.setupBootpag();\n        jUtility.setupRowsPerPage();\n      } else {\n        jUtility.hideBootpag();\n      }\n    }, // end fn\n\n    /**\n     * Setup bootpag pagination controls\n     * @method function\n     * @return {[type]} [description]\n     */\n    setupBootpag : function() {\n      jApp.tbl().find('.paging').empty().show().bootpag({\n        total : jApp.aG().dataGrid.pagination.totalPages,\n        page : jApp.opts().pageNum,\n        maxVisible : 20\n      }).on(\"page\", function(event,num) {\n        jUtility.DOM.page(num);\n      });\n    }, // end fn\n\n    /**\n     * setup/update rows per page controls\n     * @method function\n     * @return {[type]} [description]\n     */\n    setupRowsPerPage : function() {\n      jApp.tbl().find('[name=RowsPerPage]').off('change.rpp').on('change.rpp', function() {\n        jApp.tbl().find('[name=RowsPerPage]').val( $(this).val() );\n        jUtility.DOM.rowsPerPage( $(this).val() );\n      }).parent().show();\n    }, // end fn\n\n    /**\n     * Hide bootpag pagination controls\n     * @method function\n     * @return {[type]} [description]\n     */\n    hideBootpag : function() {\n      jApp.tbl().find('.paging').hide();\n      jApp.tbl().find('[name=RowsPerPage]').parent().hide();\n    }, // end fn\n\n    /**\n     * Setup header filters\n     * @method function\n     * @return {[type]} [description]\n     */\n    setupHeaderFilters : function() {\n      if (jUtility.isHeaderFilters() ) {\n        jUtility.DOM.headerFilterDeleteIcons();\n      }\n      if (jUtility.isHeaderFiltersDisplay()) {\n        jUtility.DOM.showHeaderFilters();\n      } else {\n        jUtility.DOM.hideHeaderFilters();\n      }\n    }, // end fn\n\n    /**\n     * Setup the table sort buttons\n     * @method function\n     * @return {[type]} [description]\n     */\n    setupSortButtons : function() {\n      if ( jUtility.isSort() ) {\n        jApp.aG().$().find('.tbl-sort').show();\n      } else {\n        jApp.aG().$().find('.tbl-sort').hide();\n      }\n    }, // end fn\n\n    /**\n     * Toggle Delete Icon Visibility\n     * @method function\n     * @param  {[type]} $elm [description]\n     * @return {[type]}      [description]\n     */\n    toggleDeleteIcon : function( $elm ) {\n      if ( !!$elm.val().toString().trim() ) {\n        $elm.next('.deleteicon').show();\n      } else {\n        $elm.next('.deleteicon').hide();\n      }\n    }, //end fn\n\n    /**\n     * setTimeout helper\n     * @method function\n     * @param  {[type]}   o.key   [description]\n     * @param  {Function} o.fn    [description]\n     * @param  {[type]}   o.delay [description]\n     * @return {[type]}         [description]\n     */\n    timeout : function(o) {\n      try{\n        clearTimeout( jApp.aG().dataGrid.timeouts[o.key] )\n      } catch(ignore) {}\n\n      jApp.aG().dataGrid.timeouts[o.key] = setTimeout(o.fn, o.delay );\n    }, //end fn\n\n    /**\n     * setInterval helper\n     * @method function\n     * @param  {[type]}   o.key   [description]\n     * @param  {Function} o.fn    [description]\n     * @param  {[type]}   o.delay [description]\n     * @return {[type]}         [description]\n     */\n    interval : function(o) {\n      try{\n        clearInterval( jApp.aG().dataGrid.intervals[o.key] )\n      } catch(ignore) {}\n\n      jApp.aG().dataGrid.intervals[o.key] = setInterval(o.fn, o.delay );\n    }, //end fn\n\n    /**\n     * Update Grid from cached data\n     * @method function\n     * @return {[type]} [description]\n     */\n    updateGridFromCache : function() {\n      jUtility.callback.update( jUtility.getCachedGridData() );\n      jUtility.DOM.togglePreloader(true);\n      jUtility.buildMenus();\n    }, // end fn\n\n    /**\n     * Retrieve cached data\n     * @method function\n     * @return {[type]} [description]\n     */\n    getCachedGridData : function() {\n      return jApp.aG().store.get('data_' + jApp.opts().table);\n    }, // end fn\n\n\n    /**\n     * get JSON\n     * @method function\n     * @param  {[type]} requestOptions [description]\n     * @return {[type]}                [description]\n     */\n    getJSON : function( requestOptions ) {\n\n        var opts = $.extend(true,\n          {\n            url : null,\n            data : {},\n            success : function() { },\n            fail : function() { },\n            always : jUtility.callback.displayResponseErrors,\n            complete : function() {}\n          } , requestOptions );\n\n        jApp.log('6.5 ajax options set, executing ajax request')\n        return $.getJSON(opts.url, opts.data, opts.success )\n          .fail( opts.fail )\n          .always( opts.always )\n          .complete( opts.complete );\n    }, // end fn\n\n    /**\n     * Prepare form data\n     * @param  {[type]} data [description]\n     * @return {[type]}      [description]\n     */\n    prepareFormData : function( data ) {\n      var fd = new FormData;\n\n      _.each( data, function(value, key) {\n        fd.append(key, value);\n      })\n\n      return fd;\n\n    }, // end fn\n\n    /**\n     * post JSON\n     * @method function\n     * @param  {[type]} requestOptions [description]\n     * @return {[type]}                [description]\n     */\n    postJSON : function( requestOptions ) {\n\n        // if ( typeof requestOptions.data.append !== 'function' ) {\n        //   requestOptions.data = jUtility.prepareFormData( requestOptions.data || {} );\n        // }\n\n        var opts = $.extend(true,\n          {\n            url : null,\n            data : {},\n            success : function() { },\n            fail : function() { },\n            always : jUtility.callback.displayResponseErrors,\n            complete : function() {}\n          } , requestOptions );\n\n        return $.ajax({\n            url: opts.url,\n            data : opts.data,\n            success : opts.success,\n            type : 'POST',\n            dataType : 'json',\n            //processData : false,\n            //contentType : false\n          })\n          .fail( opts.fail )\n          .always( opts.always )\n          .complete( opts.complete );\n    }, // end fn\n\n    /**\n     * Execute the grid data request\n     * @method function\n     * @return {[type]} [description]\n     */\n    executeGridDataRequest : function() {\n      jApp.log('6.3 Setting up options for the data request')\n      var params = $.extend(true,  jApp.aG().dataGrid.requestOptions,\n          {\n            success : jUtility.callback.update,\n            fail \t\t: jUtility.gridDataRequestCallback.fail,\n            always \t: jUtility.gridDataRequestCallback.always,\n            complete: jUtility.gridDataRequestCallback.complete\n          } ),\n          r = jApp.aG().dataGrid.requests;\n\n      // show the preloader\n      jUtility.DOM.activityPreloader('show');\n\n      // execute the request\n      jApp.log('6.4 Executing ajax request')\n      r.gridData = jUtility.getJSON( params );\n    }, //end fn\n\n    /**\n     * Turn off modal overlays\n     * @method function\n     * @return {[type]} [description]\n     */\n    turnOffOverlays : function() {\n      jUtility.DOM.overlay(1,'off');\n      jUtility.DOM.overlay(2,'off');\n    }, //end fn\n\n    /**\n     * Attempt to locate jQuery target\n     * @method function\n     * @param  {[type]} target [description]\n     * @return {[type]}        [description]\n     */\n    locateTarget : function(target, scope) {\n      // first look in the grid scope,\n      // then the document scope,\n      // then look through the window object\n      // to see if the target is a member\n      // of the global scope e.g. $(window)\n      if (typeof scope === 'undefined') {\n        return jApp.aG().$().find(target) || $(target) || $(window[target]);\n      } else {\n        return jApp.aG().$().find(target, scope) || $(target, scope) || $(window[target], scope);\n      }\n    }, //end fn\n\n    /**\n     * Process the event bindings for the grid\n     * @method function\n     * @return {[type]} [description]\n     */\n    processGridBindings : function() {\n      var events, target, fn, event;\n\n      _.each( jApp.opts().events.grid, function( events, target ) {\n        _.each( events, function(fn, event) {\n            if (typeof fn === 'function') {\n              jUtility.setCustomBinding( target, fn, event )\n            }\n        });\n      })\n    }, //end fn\n\n    /**\n     * Process the event bindings for the form\n     * @method function\n     * @return {[type]} [description]\n     */\n    processFormBindings : function() {\n      var events, target, fn, event;\n\n      _.each( jApp.opts().events.form, function( events, target ) {\n        _.each( events, function(fn, event) {\n            jUtility.setCustomBinding( target, fn, event, '.div-form-panel-wrapper', 'force' )\n        });\n      });\n    }, //end fn\n\n    /**\n     * Set up a custom event binding\n     * @method function\n     * @param  {[type]}   event [description]\n     * @param  {Function} fn    [description]\n     * @return {[type]}         [description]\n     */\n    setCustomBinding : function( target, fn, event, scope, force ) {\n      var eventKey = event + '.custom-' + $.md5( fn.toString() ),\n          $scope = (typeof scope === 'undefined') ? $(document) : $(scope),\n          scope = (typeof scope === 'undefined') ? 'document' : scope;\n          force = (typeof force === 'undefined') ? false : !!force;\n\n      if ( event === 'boot' ) {\n        return (typeof fn === 'function') ? fn() : false;\n      }\n\n      // we cannot use event bubbling for scroll\n      // events, we must use capturing\n      if ( event !== 'scroll' ) {\n        if ( !!$(window[target]).length ) {\n          jApp.log('Found target within global scope ' + target);\n          jApp.log('Binding event ' + eventKey + ' to target ' + target);\n          $(window[target]).off(eventKey).on(eventKey, fn);\n        } else if ( !jUtility.isEventDelegated(target,eventKey,scope) || force ) {\n          jApp.log('Binding event ' + event + ' to target ' + target + ' within scope ' + scope);\n          $scope.undelegate(target,eventKey).delegate(target, eventKey, fn);\n          jUtility.eventIsDelegated(target,eventKey,scope);\n        }\n      } else {\n        document.addEventListener(event, fn , true);\n      }\n    }, // end fn\n\n    /**\n     * Has the event been delegated for the target?\n     * @method function\n     * @param  {[type]} target   [description]\n     * @param  {[type]} eventKey [description]\n     * @return {[type]}          [description]\n     */\n    isEventDelegated : function( target, eventKey, scope ) {\n      return _.indexOf(jApp.aG().delegatedEvents, scope + '-' + target + '-' + eventKey) !== -1;\n    }, // end fn\n\n    /**\n     * Mark event delegated\n     * @method function\n     * @param  {[type]} target   [description]\n     * @param  {[type]} eventKey [description]\n     * @param  {[type]} scope    [description]\n     * @return {[type]}          [description]\n     */\n    eventIsDelegated : function( target, eventKey, scope) {\n      return jApp.aG().delegatedEvents.push( scope + '-' + target + '-' + eventKey );\n    }, // end fn\n\n    /**\n     * Form boot up function\n     * @method function\n     * @return {[type]} [description]\n     */\n    formBootup : function() {\n      jUtility.$currentFormWrapper()\n        //reset validation stuff\n        .find('.has-error').removeClass('has-error').end()\n        .find('.has-success').removeClass('has-success').end()\n        .find('.help-block').hide().end()\n        .find('.form-control-feedback').hide().end()\n\n        //multiselects\n        .find('select').addClass('bsms').end()\n        .find('.bsms').each( function(i,elm) {\n          $(elm).data('jInput').fn.multiselect().fn.multiselectRefresh();\n        } ).end()\n        .find('[data-tokens]').each( function(){\n          if ( typeof $(this).data('tokenFieldSource') != 'null' ) {\n              $(this).tokenfield({\n                autocomplete : {\n                  source : $(this).data('tokenFieldSource'),\n                  delay : 300\n                },\n                showAutoCompleteOnFocus : false,\n                tokens : $(this).val() || []\n              })\n              $(this).data('tokenFieldSource',null);\n          }\n          // var val = $(this).data('value').split('|') || []\n          // $(this).tokenfield( 'setTokens', val );\n\n        }).end()\n\n        .find('[_linkedElmID]').change();\n\n    }, //end fn\n\n    /**\n     * Load event bindings for processing\n     * @method function\n     * @return {[type]} [description]\n     */\n    loadBindings : function() {\n        // form bindings\n        jApp.opts().events.form = $.extend(true, {\n          // the bind function will assume the scope is relative to the current form\n          // unless the key is found in the global scope\n          // boot functions will be automatically called at runtime\n          \"[data-validType='Phone Number']\" : {\n            keyup : function() {\n              $(this).val( formatPhone( $(this).val() ) );\n            }\n          },\n\n          \"[data-validType='Zip Code']\" : {\n            keyup : function() {\n              $(this).val( formatZip( $(this).val() ) );\n            }\n          },\n\n          \"[data-validType='SSN']\" : {\n            keyup : function() {\n              var This = $(this);\n              setTimeout( function() {\n                This.val( formatSSN( jApp.aG().val() ) );\n              }, 200);\n            }\n          },\n\n          \"[data-validType='color']\" : {\n            keyup : function() {\n              $(this).css('background-color',$(this).val());\n            }\n          },\n\n          \"[data-validType='Number']\" : {\n            change : function() {\n              $(this).val( formatNumber( $(this).val() ) );\n            }\n          },\n\n          \"[data-validType='Integer']\" : {\n            change : function() {\n              $(this).val( formatInteger( $(this).val() ) );\n            }\n          },\n\n          \"[data-validType='US State']\" : {\n            change : function() {\n              $(this).val( formatUC( $(this).val() ) );\n            }\n          },\n\n          \"button.close, .btn-cancel\" : {\n            click : function() {\n              if ( jUtility.needsCheckin() )  {\n                console.log('checking in record');\n                jUtility.checkin( jUtility.getCurrentRowId() );\n              } else {\n                console.log('closing current form');\n                jUtility.closeCurrentForm();\n              }\n            }\n          },\n\n          \".btn-go\" : {\n            click : jUtility.saveCurrentFormAndClose\n          },\n\n          \".btn-save\" : {\n            click : jUtility.saveCurrentForm\n          },\n\n          \".btn-reset\" : {\n            click : jUtility.resetCurrentForm\n          },\n\n          \".btn-refreshForm\" : {\n            click : jUtility.refreshCurrentForm\n          },\n\n          \".btn-array-add\" : {\n            click : jUtility.arrayAddRow\n          },\n\n          \".btn-array-remove\" : {\n            click : jUtility.arrayRemoveRow\n          },\n\n          \"input\" : {\n            keyup : function(e) {\n              e.preventDefault();\n              if (e.which === 13) {\n                if( jUtility.isConfirmed() ) {\n                  jUtility.saveCurrentFormAndClose();\n                }\n              } else if (e.which === 27) {\n                jUtility.closeCurrentForm();\n              }\n            }\n          },\n\n          \"#confirmation\" : {\n            keyup : function() {\n              if( $(this).val().toString().toLowerCase() === 'yes' ) {\n                jUtility.$currentForm().find('.btn-go').removeClass('disabled');\n              } else {\n                jUtility.$currentForm().find('.btn-go').addClass('disabled');\n              }\n            }\n          },\n\n          \"[_linkedElmID]\" : {\n            change : function() {\n              var This = $(this),\n                $col = This.attr('_linkedElmFilterCol'),\n                $id\t = This.val(),\n                $labels = This.attr('_linkedElmLabels'),\n                $options = This.attr('_linkedElmOptions'),\n                oFrm = jUtility.oCurrentForm(),\n                oElm = oFrm.fn.getElmById( This.attr('_linkedElmID') );\n\n\n              // set data to always expire;\n              oElm.fn.setTTL(-1);\n              oElm.jApp.opts().hideIfNoOptions = true;\n              oElm.jApp.opts().cache = false;\n\n              oElm.fn.attr( {\n                '_optionsFilter' : $col + '=' + $id,\n                '_firstoption' : 0,\n                '_firstlabel' : '-Other-',\n                '_labelsSource' : $labels,\n                '_optionsSource' : $options\n                } );\n\n              oElm.fn.initSelectOptions(true);\n\n            },\n          }\n\n        }, jApp.opts().events.form);\n\n        // grid events\n        jApp.opts().events.grid = $.extend(true, {\n          // the bind function will assume the scope is relative to the grid\n          // unless the key is found in the global scope\n          // boot functions will be automatically called at runtime\n          window : {\n            resize : function() {\n              jUtility.timeout( {\n                key : 'resizeTimeout',\n                fn : jUtility.DOM.updateColWidths,\n                delay : 500\n              });\n            },\n\n            beforeunload : jUtility.unloadWarning,\n          },\n\n          \".table-grid\" : {\n            \"scroll\" : function() {\n              jUtility.timeout( {\n                key : 'tableGridScroll',\n                fn : jUtility.DOM.pageWrapperScrollHandler,\n                delay : 300\n              })\n            }\n          },\n\n          \".header-filter\" : {\n            keyup : function() {\n              jUtility.toggleDeleteIcon( $(this) );\n\n              jUtility.timeout( {\n                key : 'applyHeaderFilters',\n                fn : jUtility.DOM.applyHeaderFilters,\n                delay : 300\n              });\n\n            },\n\n            boot : jUtility.DOM.applyHeaderFilters\n          },\n\n          \".tbl-sort\" : {\n            click : function() {\n              var $btn, $btnIndex, $desc\n\n              //button\n              $btn = $(this);\n              //index\n              $btnIndex = $btn.closest('.table-header').index()+1;\n\n              //tooltip\n              $btn.attr('title', $btn.attr('title').indexOf('Descending') !== -1 ?\n                'Sort Ascending' :\n                'Sort Descending'\n              ).attr('data-original-title', $btn.attr('title') )\n              .tooltip({delay:300});\n\n              //ascending or descending\n              $desc = $btn.find('i').hasClass('fa-sort-amount-desc');\n\n              //other icons\n              jApp.tbl().find('.tbl-sort i.fa-sort-amount-desc')\n                .removeClass('fa-sort-amount-desc')\n                .addClass('fa-sort-amount-asc')\n                .end()\n                .find('.tbl-sort.btn-primary')\n                .removeClass('btn-primary');\n\n              //btn style\n              $btn.addClass('btn-primary');\n\n              //icon\n              $btn.find('i')\n                .removeClass( ($desc) ? 'fa-sort-amount-desc' : 'fa-sort-amount-asc')\n                .addClass( ($desc) ? 'fa-sort-amount-asc' : 'fa-sort-amount-desc');\n\n              jApp.tbl().find('.table-body .table-row').show();\n\n              // perform the sort on the table rows\n              jUtility.DOM.sortByCol( $btnIndex, $desc );\n            }\n          },\n\n          \"[title]\" : {\n            boot : function() {\n              $('[title]').tooltip({delay:300});\n            }\n          },\n\n          \".btn-readmore\" : {\n            click : function()  {\n              $(this).toggleClass('btn-success btn-warning');\n              $(this).siblings('.readmore').toggleClass('active');\n            }\n          },\n\n          \"[name=RowsPerPage]\" : {\n            change : function() {\n              jApp.tbl().find('[name=RowsPerPage]').val( $(this).val() );\n              jUtility.DOM.rowsPerPage( $(this).val() );\n            },\n            boot : function() {\n              if ( jUtility.isPagination() ) {\n                $('[name=RowsPerPage]').parent().show();\n              } else {\n                $('[name=RowsPerPage]').parent().hide();\n              }\n            }\n          },\n\n          \".deleteicon\" : {\n            boot : function() {\n              $(this).remove();\n            },\n            click : function() {\n              $(this).prev('input').val('').focus().trigger('keyup');\n              jUtility.DOM.applyHeaderFilters();\n            }\n          },\n\n          \".chk_all\" : {\n            change : function() {\n              jApp.aG().$().find('.chk_cid').prop('checked',$(this).prop('checked'));\n              $('.chk_cid').eq(0).change();\n            }\n          },\n\n          \".chk_cid\" : {\n            change : function() {\n              var $chk_all,\t// $checkall checkbox\n                $checks,\t// $checkboxes\n                total_num,\t// total checkboxes\n                num_checked,// number of checkboxes checked\n\n\n              $chk_all = jApp.tbl().find('.chk_all');\n              $checks = jApp.tbl().find('.chk_cid');\n              total_num = $checks.length;\n              num_checked = jApp.tbl().find('.chk_cid:checked').length\n\n              jUtility.DOM.updateRowMenu( num_checked );\n\n              // set the state of the checkAll checkbox\n              $chk_all\n              .prop('checked', (total_num === num_checked) ? true : false )\n              .prop('indeterminate', (num_checked > 0 && num_checked < total_num) ? true : false );\n            }\n          },\n\n          \".btn-new\" : {\n            click : function() {\n              jUtility.actionHelper('new');\n            }\n          },\n\n          \".btn-edit\" : {\n            click : function() {\n              jUtility.actionHelper('edit');\n            }\n          },\n\n          \".btn-headerFilters\" : {\n            click : jUtility.DOM.toggleHeaderFilters\n          },\n\n          \".btn-delete\" : {\n            click : function() {\n              jUtility.withSelected('delete');\n            }\n          },\n\n          \".btn-clear\" : {\n            click : function() {\n              jApp.aG().$().find('.chk_cid').prop('checked',false);\n              $('.chk_cid').eq(0).change();\n            }\n          },\n\n          \".btn-refresh\" : {\n            click : function() {\n              $(this).addClass('disabled').delay(2000).removeClass('disabled');\n              jUtility.updateAll();\n            }\n          },\n\n          // \".btn-showMenu\" : {\n          //   click : jUtility.DOM.toggleRowMenu\n          // },\n\n          \".table-body\" : {\n            mouseover : function() {\n              $(this).focus();\n            }\n          },\n\n          // \".table-body .table-row\" : {\n          //   mouseover : function() {\n          //     var $tr = $(this);\n          //\n          //     clearTimeout(jApp.aG().dataGrid.intervals.cancelRowMenuUpdate);\n          //     jApp.aG().dataGrid.intervals.moveRowMenu = setTimeout( function() {\n          //       jApp.tbl().find('.btn-showMenu').removeClass('hover');\n          //       if (jApp.tbl().find('.rowMenu').hasClass('expand') === false) {\n          //         jApp.tbl().find('.btn-showMenu').removeClass('active');\n          //       }\n          //       $tr.find('.btn-showMenu').addClass('hover');\n          //\n          //     }, 250 );\n          //   },\n          //\n          //   mouseout : function() {\n          //\n          //     var $tr = $(this);\n          //     clearTimeout(jApp.aG().dataGrid.intervals.moveRowMenu);\n          //     jApp.aG().dataGrid.intervals.cancelRowMenuUpdate = setTimeout( function() {\n          //       jApp.tbl().find('.btn-showMenu').removeClass('hover');\n          //       if (!jApp.tbl().find('.rowMenu').hasClass('expand')) {\n          //         $tr.find('.btn-showMenu').removeClass('active');\n          //       }\n          //       jApp.tbl().find('.rowMenu').removeClass('active');\n          //     }, 100 );\n          //   }\n          // }\n\n        }, jApp.opts().events.grid);\n    }, //end fn\n\n    /**\n     * Load Form Definitions\n     * @method function\n     * @return {[type]} [description]\n     */\n    loadFormDefinitions : function() {\n      jApp.opts().formDefs = $.extend(true, {}, {\n\n        editFrm : {\n          model : jApp.opts().model,\n          table : jApp.opts().table,\n          pkey : jApp.opts().pkey,\n          tableFriendly : jApp.opts().tableFriendly,\n          atts : { method : 'PATCH' },\n          disabledElements : jApp.opts().disabledFrmElements,\n        },\n\n        newFrm : {\n          model : jApp.opts().model,\n          table : jApp.opts().table,\n          pkey : jApp.opts().pkey,\n          tableFriendly : jApp.opts().tableFriendly,\n          atts : { method : 'POST' },\n          disabledElements : jApp.opts().disabledFrmElements\n        },\n\n        colParamFrm : {\n          table : 'col_params',\n          pkey : 'colparam_id',\n          tableFriendly : 'Column Parameters',\n          btns : [],\n          atts : {\n            name : 'frm_element_editor',\n          },\n          fieldset : {\n            'legend' : '3. Edit Column Parameters',\n          }\n        }\n      }, jApp.opts().formDefs);\n    }, //end fn\n\n    /**\n     * Grid data request callback methods\n     * @type {Object}\n     */\n    gridDataRequestCallback : {\n      /**\n       * Grid data request failed\n       * @method function\n       * @return {[type]} [description]\n       */\n      fail : function() {\n        console.warn( 'update grid data failed, it may have been aborted' );\n      }, //end fn\n\n      /**\n       * Always execute after grid data request\n       * @method function\n       * @param  {[type]} response [description]\n       * @return {[type]}          [description]\n       */\n      always : function(response) {\n        jUtility.callback.displayResponseErrors(response);\n        if (jUtility.isCaching()) {\n            jApp.aG().store.set('data_' + jApp.opts().table,response);\n        }\n        jUtility.DOM.togglePreloader(true);\n        jUtility.buildMenus();\n      }, // end fn\n\n      /**\n       * Grid data request completed\n       * @method function\n       * @return {[type]} [description]\n       */\n      complete : function() {\n        jUtility.DOM.activityPreloader('hide');\n      }, // end fn\n    }, // end callbacks\n\n    /**\n     * Clear countdown interval\n     * @method function\n     * @return {[type]} [description]\n     */\n    clearCountdownInterval : function() {\n      try {\n        clearInterval( jApp.aG().dataGrid.intervals.countdownInterval );\n      } catch(e) {\n        // do nothing\n      }\n    }, // end fn\n\n    /**\n     * Set the countdown interval\n     * @method function\n     * @return {[type]} [description]\n     */\n    setCountdownInterval : function() {\n      jUtility.clearCountdownInterval();\n      jApp.aG().dataGrid.intervals.countdownInterval = setInterval( jUtility.updateCountdown,1000 );\n    }, // end fn\n\n    /**\n     * Clear the get checked out records interval\n     * @method function\n     * @return {[type]} [description]\n     */\n    clearGetCheckedOutRecordsIntevrval : function() {\n      try {\n        clearInterval( jApp.aG().dataGrid.intervals.getCheckedOutRecords );\n      } catch(e) {\n        // do nothing\n      }\n    }, // end fn\n\n    /**\n     * Set the get checked out records interval\n     * @method function\n     * @return {[type]} [description]\n     */\n    setGetCheckedOutRecordsInterval : function() {\n      if ( jUtility.isCheckout() ) {\n        jUtility.clearGetCheckedOutRecordsIntevrval();\n        jApp.aG().dataGrid.intervals.getCheckedOutRecords = setInterval( jUtility.getCheckedOutRecords, 10000 );\n      }\n    }, // end fn\n\n    /**\n     * Update countdown\n     * @method function\n     * @return {[type]} [description]\n     */\n    updateCountdown : function() {\n      if (jUtility.isFormOpen()) { return false; }\n\n      var txt = 'Refreshing in ';\n      txt += (jApp.aG().dataGrid.intervals.countdownTimer > 0) ? Math.floor( jApp.aG().dataGrid.intervals.countdownTimer / 1000) : 0;\n      txt += 's';\n\n      jApp.tbl().find('button#btn_table_status').text( txt );\n      jApp.aG().dataGrid.intervals.countdownTimer -= 1000;\n\n      if ( jApp.aG().dataGrid.intervals.countdownTimer <= -1000) {\n        jUtility.updateAll();\n      }\n\n    }, // end fn\n\n    /**\n     * Initialize countdown timer value\n     * @method function\n     * @return {[type]} [description]\n     */\n    initCountdown : function() {\n      jApp.aG().dataGrid.intervals.countdownTimer = jApp.opts().refreshInterval-2000;\n    }, // end fn\n\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   ellipsis\n     *\n     *  Truncates cells that are too long\n     *  according to the maxCellLength grid\n     *  option. Adds a read-more button to\n     *  any cells that are truncated.\n     **  **  **  **  **  **  **  **  **  **/\n    ellipsis : function( txt ) {\n      var $rdMr, $dtch, $btn, $truncated, $e;\n\n      $btn = $('<button/>', {\n        'class' : 'btn btn-success btn-xs btn-readmore pull-right',\n        'type' : 'button'}\n      ).html(' . . . ');\n\n      $e = $('<div/>').html(txt);\n\n      if ( $e.text().length > jApp.opts().maxCellLength ) {\n        // look for child html elements\n        if ( $e.find(':not(i)').length > 0) {\n          $rdMr = $('<span/>', {'class':'readmore'});\n\n          while ( $e.text().length > jApp.opts().maxCellLength ) {\n            // keep detaching html elements until the cell length is\n            // within allowable limits\n\n            // store detached element\n            $dtch = ( !!$e.find(':not(i)').last().parent('h4').length ) ?\n              $e.find(':not(i)').last().parent().detach() :\n              $e.find(':not(i)').last().detach();\n\n            // append the detached element to the readmore span\n            $rdMr.html( $rdMr.html( ) + ' ' ).append($dtch);\n\n            // clean up the element html of extra whitespace\n            $e.html( $e.html().replace(/(\\s*)?\\,*(\\s*)?$/ig,'') );\n          }\n\n          $e.append($rdMr).prepend($btn);\n        }// end if\n\n        // all text, no child html elements in the cell\n        else {\n          // place the extra text in the readmore span\n          $rdMr = $('<span/>', {'class':'readmore'})\n            .html( $e.html().substr(jApp.opts().maxCellLength) );\n\n          // truncate the visible text in the cell\n          $truncated = $e.html().substr(0,jApp.opts().maxCellLength);\n\n          $e.empty().append($truncated).append($rdMr).prepend($btn);\n        } // end else\n      }// end if\n\n      return $e.html();\n\n    }, // end fn\n\n    /**\n     * Set up HTML templates\n     * @method function\n     * @return {[type]} [description]\n     */\n    setupHtmlTemplates : function() {\n      /**\n       *   HTML TEMPLATES\n       *\n       *  Place large html templates here.\n       *  These are rendered with\n       *  the method jUtility.render.\n       *\n       *  Parameters of the form {@ParamName}\n       *  are expanded by the render function\n       */\n      jApp.aG().html = $.extend(true, {}, {\n\n        // main grid body\n        tmpMainGridBody : `<div class=\"row\">\n                            <div class=\"col-lg-12\">\n                              <div class=\"panel panel-info panel-grid panel-grid1\">\n                                <div class=\"panel-heading\">\n                                  <h1 class=\"page-header\"><i class=\"fa {@icon} fa-fw\"></i><span class=\"header-title\"> {@headerTitle} </span></h1>\n                                  <div class=\"alert alert-warning alert-dismissible helpText\" role=\"alert\"> <button type=\"button\" class=\"close\" data-dismiss=\"alert\"><span aria-hidden=\"true\">&times;</span><span class=\"sr-only\">Close</span></button> {@helpText} </div>\n                                </div>\n                                <div class=\"panel-body grid-panel-body\">\n                                  <div class=\"table-responsive\">\n                                    <div class=\"table table-bordered table-grid\">\n                                      <div class=\"table-head\">\n                                        <div class=\"table-row table-menu-row\">\n                                          <div class=\"table-header table-menu-header\" style=\"width:100%\">\n                                            <div class=\"btn-group btn-group-sm table-btn-group\">  </div>\n                                          </div>\n                                        </div>\n                                        <div style=\"display:none\" class=\"table-row table-rowMenu-row\"></div>\n                                        <div class=\"table-row tfilters\" style=\"display:none\">\n                                          <div style=\"width:10px;\" class=\"table-header\">&nbsp;</div>\n                                          <div style=\"width:175px;\" class=\"table-header\" align=\"right\"> <span class=\"label label-info filter-showing\"></span> </div>\n                                        </div>\n                                      </div>\n                                      <div class=\"table-body\" id=\"tbl_grid_body\">\n                                        <!--{$tbody}-->\n                                      </div>\n                                      <div class=\"table-foot\">\n                                        <div class=\"row\">\n                                          <div class=\"col-md-3\">\n                                            <div style=\"display:none\" class=\"ajax-activity-preloader pull-left\"></div>\n                                            <div class=\"divRowsPerPage pull-right\">\n                                              <select style=\"width:180px;display:inline-block\" type=\"select\" name=\"RowsPerPage\" id=\"RowsPerPage\" class=\"form-control\">\n                                                <option value=\"10\">10</option>\n                                                <option value=\"15\">15</option>\n                                                <option value=\"25\">25</option>\n                                                <option value=\"50\">50</option>\n                                                <option value=\"100\">100</option>\n                                                <option value=\"10000\">All</option>\n                                              </select>\n                                            </div>\n                                          </div>\n                                          <div class=\"col-md-9\">\n                                            <div class=\"paging\"></div>\n                                          </div>\n                                        </div>\n                                      </div>\n                                      <!-- /. table-foot -->\n                                    </div>\n                                  </div>\n                                  <!-- /.table-responsive -->\n                                </div>\n                                <!-- /.panel-body -->\n                              </div>\n                              <!-- /.panel -->\n                            </div>\n                            <!-- /.col-lg-12 -->\n                          </div>\n                          <!-- /.row -->`,\n\n        // check all checkbox template\n        tmpCheckAll\t: `<label for=\"chk_all\" class=\"btn btn-default pull-right\"> <input id=\"chk_all\" type=\"checkbox\" class=\"chk_all\" name=\"chk_all\"> </label>`,\n\n        // header filter clear text button\n        tmpClearHeaderFilterBtn : `<span class=\"fa-stack fa-lg\"><i class=\"fa fa-circle-thin fa-stack-2x\"></i><i class=\"fa fa-remove fa-stack-1x\"></i></span>`,\n\n        // filter showing ie Showing X / Y Rows\n        tmpFilterShowing : `<i class=\"fa fa-filter fa-fw\"></i>{@totalVis} / {@totalRows}`,\n\n        // table header sort button\n        tmpSortBtn : `<button rel=\"{@ColumnName}\" title=\"{@BtnTitle}\" class=\"btn btn-sm btn-default {@BtnClass} tbl-sort pull-right\" type=\"button\"> <i class=\"fa fa-sort-{@faClass} fa-fw\"></i> </button>`,\n\n        // form templates\n        forms : {\n\n          // Edit Form Template\n          editFrm\t: `<div id=\"div_editFrm\" class=\"div-btn-edit min div-form-panel-wrapper\">\n                      <div class=\"frm_wrapper\">\n                        <div class=\"panel panel-blue\">\n                          <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-pencil fa-fw\"></i> <span class=\"spn_editFriendlyName\">{@Name}</span> [Editing] </div>\n                          <div class=\"panel-overlay\" style=\"display:none\"></div>\n                          <div class=\"panel-body\">\n                            <div class=\"row side-by-side\">\n                              <div class=\"side-by-side editFormContainer formContainer\"> </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>`,\n\n          // New Form Template\n          newFrm\t: `<div id=\"div_newFrm\" class=\"div-btn-new min div-form-panel-wrapper\">\n                      <div class=\"frm_wrapper\">\n                        <div class=\"panel panel-green\">\n                          <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-plus fa-fw\"></i> New: <span class=\"spn_editFriendlyName\">{@tableFriendly}</span> </div>\n                          <div class=\"panel-overlay\" style=\"display:none\"></div>\n                          <div class=\"panel-body\">\n                            <div class=\"row side-by-side\">\n                              <div class=\"side-by-side newFormContainer formContainer\"> </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>`,\n\n          // New Form Template\n          newOtherFrm\t: `<div id=\"div_newFrm\" class=\"div-btn-new min div-form-panel-wrapper\">\n                          <div class=\"frm_wrapper\">\n                            <div class=\"panel panel-info\">\n                              <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-plus fa-fw\"></i> New: <span class=\"spn_editFriendlyName\">{@tableFriendly}</span> </div>\n                              <div class=\"panel-overlay\" style=\"display:none\"></div>\n                              <div class=\"panel-body\">\n                                <div class=\"row side-by-side\">\n                                  <div class=\"side-by-side newOtherFormContainer formContainer\"> </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>`,\n\n          // Delete Form Template\n          deleteFrm\t: `<div id=\"div_deleteFrm\" class=\"div-btn-delete min div-form-panel-wrapper\">\n                        <div class=\"frm_wrapper\">\n                          <div class=\"panel panel-red\">\n                            <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\">×</button> <i class=\"fa fa-trash-o fa-fw\"></i> <span class=\"spn_editFriendlyName\"></span> : {@deleteText} </div>\n                            <div class=\"panel-overlay\" style=\"display:none\"></div>\n                            <div class=\"panel-body\">\n                              <div class=\"row side-by-side\">\n                                <div class=\"delFormContainer formContainer\"></div>\n                              </div>\n                            </div>\n                          </div>\n                          </form>\n                        </div>\n                      </div>`,\n\n          // Colparams Form Template\n          colParamFrm\t: `<div id=\"div_colParamFrm\" class=\"div-btn-other min div-form-panel-wrapper\">\n                          <div class=\"frm_wrapper\">\n                            <div class=\"panel panel-lblue\">\n                              <div class=\"panel-heading\"> <button type=\"button\" class=\"close\" aria-hidden=\"true\" data-original-title=\"\" title=\"\">×</button> <i class=\"fa fa-gear fa-fw\"></i> <span class=\"spn_editFriendlyName\">Form Setup</span> </div>\n                              <div class=\"panel-overlay\" style=\"display:none\"></div>\n                              <div class=\"panel-body\" style=\"padding:0 0px !important;\">\n                                <div class=\"row side-by-side\">\n                                  <div class=\"col-lg-3 tbl-list\"></div>\n                                  <div class=\"col-lg-2 col-list\"></div>\n                                  <div class=\"col-lg-7 param-list\">\n                                    <div class=\"side-by-side colParamFormContainer formContainer\"> </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div class=\"panel-heading\"> <input type=\"button\" class=\"btn btn-success btn-save\" id=\"btn_save\" value=\"Save\"> <button type=\"reset\" class=\"btn btn-warning btn-reset\" id=\"btn_reset\">Reset</button> <input type=\"button\" class=\"btn btn-warning btn-refreshForm\" id=\"btn_refresh\" value=\"Refresh Form\"> <input type=\"button\" class=\"btn btn-danger btn-cancel\" id=\"btn_cancel\" value=\"Cancel\"> </div>\n                            </div>\n                          </div>\n                        </div>`,\n        }\n      }, jApp.opts().html);\n\n      jApp.log('2.1 HTML Templates Done')\n\n    }, // end fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   render\n     *\n     *  @str   (string) containing\n     *  \t\tmultiline text\n     *\n     *  @params (obj) contains key/value pairs\n     *  \t\t  defining parameters that\n     *  \t\t  will be interpolated in\n     *  \t\t  the returned text\n     *\n     *  returns the interpolated text\n     **  **  **  **  **  **  **  **  **  **/\n    render : function(str,params) {\n      var ptrn, key, val;\n\n      //if (typeof params !== 'object') return '';\n\n      _.each( params, function(val, key) {\n        ptrn = new RegExp( '\\{@' + key + '\\}', 'gi' );\n        str = str.replace(ptrn, val );\n      })\n\n      return str.replace(/\\{@.+\\}/gi,'');\n    }, //end fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   interpolate\n     *\n     *  @value (str) string to be interpolated\n     *\n     *  @return (str) the interpolated string\n     *\n     *  recursively processes the input value and\n     *  replaces parameters of the form\n     *  {@ParamName} with the corresponding\n     *  value from the JSON data. Uses the\n     *  replace callbak jUtility.replacer.\n     *\n     *  e.g. {@ParamName} -> jApp.aG().dataGrid.data[row][ParamName]\n     **  **  **  **  **  **  **  **  **  **/\n    interpolate : function(value) {\n      return value.replace(/\\{@(\\w+)\\}/gi, jUtility.replacer)\n    }, // end fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   replacer - RegExp replace callback\n     *\n     *  @match \t(str) the match as defined\n     *  \t\t\tby the RegExp pattern\n     *  @p1\t  \t{str} the partial match as\n     *  \t\t\tdefined by the first\n     *  \t\t\tcapture group\n     *  @offset\t(int) the offset where the\n     *  \t\t\tmatch was found in @string\n     *  @string\t(str) the original string\n     *\n     *  @return\t(str) the replacement string\n     **  **  **  **  **  **  **  **  **  **/\n    replacer : function(match, p1, offset, string) {\n      return jApp.aG().currentRow[p1];\n    }, // end fn\n\n    /**\n     * Get the rows that match the header filter text\n     * @method function\n     * @return {[type]} [description]\n     */\n    getHeaderFilterMatchedRows : function() {\n      var columnOffset = (jUtility.isEditable()) ? 3 : 2,\n          currentColumn,\n          currentMatches,\n          matchedRows = [],\n          targetString\n\n\n      //iterate through header filters and apply each\n      jApp.tbl().find('.header-filter').filter( function() {\n        return !!$(this).val().toString().trim().length\n      }).each( function(i) {\n\n        // calculate the 1-indexed index of the current column\n        currentColumn = +1+$(this).parent().index();\n\n        jApp.log( 'The current column is'  + currentColumn);\n\n        // set the target string for the current column\n        // note: using a modified version of $.contains that is case-insensitive\n        targetString = \".table-row .table-cell:nth-child(\" + currentColumn + \"):contains('\" + $(this).val() + \"')\";\n\n        // find the matched rows in the current column\n        currentMatches = jApp.tbl().find(targetString)\n                            .parent()\n                            .map( function(i, obj) { return $(obj).index(); })\n                            .get();\n\n        // if matchedRows is non-empty, find the intersection of the\n        // matched rows and the current rows - ie the rows that match\n        // all of the criteria processed so far.\n        matchedRows = (!matchedRows.length) ?\n          currentMatches :\n          _.intersection(matchedRows,currentMatches);\n\n      });\n\n      return matchedRows;\n\n    }, //end fn\n\n    /**\n     * Sets the rows that are visible\n     * @param  {array} visibleRows [indexes of the visible rows]\n     * @return {[type]}             [description]\n     */\n    setVisibleRows : function( visibleRows ) {\n      // show appropriate rows\n      jApp.tbl().find('.table-body .table-row').hide()\n         .filter( function(i) {\n           return _.indexOf(visibleRows, i) !== -1;\n      }).show();\n    }, // end fn\n\n    /**\n     * Are Header Filters Non-empty\n     * @method function\n     * @return {[type]} [description]\n     */\n    areHeaderFiltersNonempty : function() {\n      return !!jApp.tbl().find('.header-filter').filter( function() {\n        return !!this.value;\n      }).length\n    }, //end fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   prepareValue\n     *\n     *  @value \t(str) the column value as\n     *  \t\tspecified in the JSON\n     *  \t\tdata\n     *  @column (str) the column name as\n     *  \t\tspecified in the JSON\n     *  \t\tdata\n     *\n     *  @return (str) the prepared value\n     *\n     *  prepares the value for display in\n     *  the DOM, applying a template\n     *  function if applicable.\n     **  **  **  **  **  **  **  **  **  **/\n    prepareValue : function(value,column) {\n      var template;\n\n      if (value == null) {\n        value = '';\n      }\n\n      if (value.toString().toLowerCase() === 'null') {\n        return '';\n      }\n\n      if (typeof jApp.opts().templates[column] === 'function') {\n        template = jApp.opts().templates[column];\n        value = template(value);\n      }\n\n      if (value.toString().trim() === '') {\n        return '';\n      }\n\n      if (value.toString().indexOf('|') !== -1) {\n        value = value.replace(/\\|/gi,', ');\n      }\n\n      if ( jUtility.isEllipses() ) {\n        value = jUtility.ellipsis( value );\n      }\n\n      return value;\n    }, // end fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   deltaData\n     *\n     *  @prev (obj) previous state of object\n     *  @now  (obj) current state of object\n     *\n     *  computes and returns the difference\n     *  between two objects\n     **  **  **  **  **  **  **  **  **  **/\n    deltaData : function(prev, now) {\n      var changes = {}, prop, c;\n      $.each(now, function( i, row) {\n        if (typeof prev[i] === 'undefined') {\n          changes[i] = row;\n        } else {\n          $.each( row, function( prop, value) {\n            if (prev[i][prop] !== value) {\n              if (typeof changes[i] === 'undefined') {\n                changes[i] = {};\n              }\n              changes[i][prop] = value;\n            }\n          })\n        }\n      })\n      if ($.isEmptyObject(changes)) {\n        return false;\n      }\n      return changes;\n\n    }, // end fn\n\n    /**\n     * Checkout record\n     * @param  {[type]} id [description]\n     * @return {[type]}    [description]\n     */\n    checkout : function(id) {\n      jUtility.getJSON( {\n        url : '/checkout/_' + jApp.opts().model + '_' + id,\n        success : jUtility.callback.checkout\n      });\n    }, // end fn\n\n    /**\n     * Checkin record\n     * @param  {[type]} id [description]\n     * @return {[type]}    [description]\n     */\n    checkin : function(id) {\n      jUtility.getJSON({\n        url : '/checkin/_' + jApp.opts().model + '_' + id,\n        success : jUtility.callback.checkin,\n        always : function() { /* ignore */ }\n      });\n    }, // end fn\n\n    /**\n     * Get all checked out records\n     * @return {[type]} [description]\n     */\n    getCheckedOutRecords : function() {\n      jUtility.getJSON({\n        url : '/checkedout/_' + jApp.opts().model,\n        success : jUtility.callback.getCheckedOutRecords\n      });\n    }, // end fn\n\n    /**\n     * Set initial parameters\n     * @method function\n     * @return {[type]} [description]\n     */\n    setInitParams : function() {\n      var ag = jApp.aG();\n\n      /**\n       * Placeholders\n       */\n      ag = $.extend( ag, {\n        action : 'new',\n        store : $.jStorage,\n        currentRow : {},\n        permissions : {},\n        dataGrid : {\n\n          // pagination parameters\n          pagination : {\n            totalPages : -1,\n            rowsPerPage : $.jStorage.get('pref_rowsPerPage',ag.options.rowsPerPage)\n          },\n\n          // ajax requests\n          requests : [],\n\n          // request options\n          requestOptions : {\n            url : ag.options.url,\n            data : {\n              filter : ag.options.filter,\n              filterMine : 0\n            }\n          },\n\n          // intervals\n          intervals : {},\n\n          // timeouts\n          timeouts : {},\n\n          // grid data\n          data : {},\n\n          // data delta (i.e. any differences in the data)\n          delta : {},\n        }, // end dataGrid\n\n        DOM : {\n          $grid : false,\n          $currentRow : false,\n          $tblMenu : false,\n          $rowMenu : $('<div/>', { class : 'btn-group btn-group-sm rowMenu', style : 'position:relative !important' }),\n        },\n\n        forms : {},\n        linkTables : [],\n        temp : {},\n\n      });\n\n      jApp.log('3.1 Initial Params Set')\n    }, // end fn\n\n    /**\n     * Get checked items\n     * @method function\n     * @return {[type]} [description]\n     *\n     *  $cid = self.DOM.$grid.find('.chk_cid:checked').map( function(i,elm) {\n       return $(elm).closest('.table-row').attr('data-identifier');\n     }).get(); jUtility.withSelectedAction(action,callback, $cid);\n     */\n    getCheckedItems : function( includeHidden ) {\n      var selector = (!!includeHidden) ? '.chk_cid:checked' : '.chk_cid:checked:visible';\n\n      return $('.table-grid').find( selector ).map( function(i, elm) {\n        return $(elm).closest('.table-row').attr('data-identifier');\n      }).get();\n\n    }, // end fn\n\n    /**\n     * Are any invisible items checked\n     * @method function\n     * @return {[type]} [description]\n     */\n    numInvisibleItemsChecked : function() {\n      return jApp.tbl().find('.chk_cid:checked:not(:visible)').length;\n    }, // end fn\n\n    /**\n     * Determine if invisible checked items\n     *  should be included in the operation\n     * @method function\n     * @return {[type]} [description]\n     */\n    confirmInvisibleCheckedItems : function(action, callback) {\n      bootbox.dialog({\n          message: \"There are  \" + jUtility.numInvisibleItemsChecked() + \" items which are checked and are currently not displayed. Include hidden items in the operation?\",\n          title: \"Include Hidden Checked Items?\",\n          buttons: {\n            yes: { label: \"Include Hidden Items\", className: \"btn-primary\", callback: function() { return jUtility.withSelectedAction(action,callback,true); } },\n            no:  { label: \"Do Not Include Hidden Items\", className: \"btn-warning\", callback: function() { return jUtility.withSelectedAction(action,callback,false); } },\n            cancel : { label : \"Cancel Operation\", className : \"btn-danger\", callback: function() { dialog.modal('hide') } }\n          }\n        });\n\n    }, // end fn\n\n    /**\n     * Initialize the grid template\n     * @method function\n     * @return {[type]} [description]\n     */\n    initializeTemplate : function() {\n      jUtility.DOM.emptyPageWrapper();\n      jApp.log('5.1 Page Wrapper Emptied')\n      jUtility.DOM.initGrid();\n      jApp.log('5.2 Grid Initialized')\n    },\n\n    /**\n     * Setup grid intervals\n     * @method function\n     * @return {[type]} [description]\n     */\n    setupIntervals : function() {\n      if ( jUtility.isAutoUpdate() ) {\n        jUtility.setCountdownInterval();\n\n        if ( jUtility.isCheckout() ) {\n          jUtility.setGetCheckedOutRecordsInterval();\n        }\n      }\n    },\n\n    /**\n     * Build all grid menus\n     * @method function\n     * @return {[type]} [description]\n     */\n    buildMenus : function() {\n      jUtility.DOM.clearMenus();\n\n      //jUtility.setupVisibleColumnsMenu();\n      jUtility.DOM.buildBtnMenu( jApp.opts().tableBtns, jApp.aG().DOM.$tblMenu, true );\n      jUtility.DOM.buildBtnMenu( jApp.opts().rowBtns, jApp.aG().DOM.$rowMenu, false);\n      //jUtility.DOM.buildLnkMenu( jApp.opts().withSelectedBtns, jApp.aG().DOM.$withSelectedMenu );\n\n      jUtility.DOM.attachRowMenu();\n    }, // end fn\n\n    /**\n     * Build all grid forms\n     * @method function\n     * @return {[type]} [description]\n     */\n    buildForms : function() {\n      jUtility.loadFormDefinitions();\n\n      _.each( jApp.opts().formDefs, function( o, key ) {\n        jUtility.DOM.buildForm( o, key );\n      });\n\n    },\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   linkTables\n     *\n     *  iterates through the linktable\n     *  definitions in the options and\n     *  adds the appropriate elements to the\n     *  forms\n     **  **  **  **  **  **  **  **  **  **/\n    linkTables : function() {\n      var oLT;\n      _.each( jApp.opts().linkTables, function(o,key) {\n        o.callback = jUtility.callback.linkTables;\n        oLT = new jLinkTable( o );\n      });\n    }, // end fn\n\n    /**\n     * Sets up the countdown that displays\n     *  the time remaining until the next\n     *  refresh\n     * @return {[type]} [description]\n     */\n    countdown : function( ) {\n      if ( !jUtility.isAutoUpdate() ) {\n        return false;\n      }\n\n      jUtility.clearCountdownInterval();\n      jUtility.initCountdown();\n      jUtility.setCountdownInterval();\n    }, // end fn\n\n    /**\n     * Update all the grids currently on the page\n     * @return {[type]} [description]\n     */\n    updateAll : function() {\n      jUtility.getGridData();\n    }, //end fn\n\n    /**\n     * get the grid data\n     * @method function\n     * @param  {[type]} preload [description]\n     * @return {[type]}         [description]\n     */\n    getGridData : function( preload ) {\n      // show the preload if needed\n      if (!!preload) {\n        jUtility.DOM.togglePreloader();\n        jUtility.setupIntervals();\n      }\n\n      jApp.log('6.1 Starting Countdown timer')\n      // start the countdown timer\n      jUtility.countdown();\n\n      // kill the pending request if it's still going\n      jUtility.killPendingRequest('gridData');\n\n      // use cached copy, if available\n      if ( jUtility.isDataCacheAvailable() ) {\n        jApp.log('6.2 Updating grid from cache')\n        setTimeout( jUtility.updateGridFromCache(), 100);\n      } else {\n        jApp.log('6.2 Executing data request')\n        jUtility.executeGridDataRequest();\n      }\n    }, // end fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   oCurrentForm\n     *\n     *  returns the currently active form\n     *  or false if the current action is\n     *  a non-standard action.\n     *\n     *  @return jForm (obj) || false\n     *\n     **  **  **  **  **  **  **  **  **  **/\n    oCurrentForm : function() {\n      var key;\n\n      if (!! (key = _.findKey( jApp.aG().forms, function(o, key) {\n        if (key.indexOf('o') !== 0) return false;\n        return key.toLowerCase().indexOf( jApp.aG().action.toString().toLowerCase() ) !== -1;\n      }) )) {\n        return jApp.aG().forms[key];\n      } else {\n        console.warn( 'There is no valid form associated with the current action' );\n        return false;\n      }\n    },\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   $currentForm\n     *\n     *  returns the currently active form\n     *  jQuery handle or false if the current\n     *  action is a non-standard action.\n     *\n     *  @return jQuery (obj) || false\n     *\n     **  **  **  **  **  **  **  **  **  **/\n    $currentForm : function() {\n      try {\n        return jUtility.oCurrentForm().$()\n      } catch(e) {\n        console.warn('No current form object found');\n        return false\n      }\n    },\n\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   $currentFormWrapper\n     *\n     *  returns the currently active form\n     *  wrapper jQuery handle or false\n     *  if the current action is a non-\n     *  standard action.\n     *\n     *  @return jQuery (obj) || false\n     *\n     **  **  **  **  **  **  **  **  **  **/\n    $currentFormWrapper : function() {\n      try {\n        return jUtility.$currentForm().closest('.div-form-panel-wrapper');\n      } catch(e) {\n        console.warn('No current form wrapper found');\n        return false;\n      }\n    },\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   bind\n     *\n     *  binds event handlers to the various\n     *  DOM elements.\n     **  **  **  **  **  **  **  **  **  **/\n    bind : function() {\n      jUtility.setupBootpag();\n      jUtility.setupSortButtons();\n      jUtility.turnOffOverlays();\n      jUtility.loadBindings();\n      jUtility.setupHeaderFilters();\n      jUtility.processGridBindings();\n      jUtility.processFormBindings();\n    }, // end bind fn\n\n    /**  **  **  **  **  **  **  **  **  **\n     *   setupFormContainer\n     *\n     *  When a rowMenu button is clicked,\n     *  this function sets up the\n     *  corresponding div\n     **  **  **  **  **  **  **  **  **  **/\n    setupFormContainer : function() {\n      jUtility.DOM.overlay(2,'on');\n      jApp.aG().hideOverlayOnError = false;\n      jUtility.resetCurrentForm();\n      jUtility.maximizeCurrentForm();\n      jUtility.setCurrentFormFocus();\n      jUtility.formBootup();\n      jUtility.getCurrentFormRowData();\n    }, // end fn\n\n\n    /**\n     * Messaging functions\n     * @type {Object}\n     */\n    msg : {\n\n\t\t\t/**\n\t\t\t * Clear all messages\n\t\t\t * @method function\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tclear : function() {\n\t\t\t\t\t$.noty.closeAll();\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Show a message\n\t\t\t * @method function\n\t\t\t * @param  {[type]} message [description]\n\t\t\t * @param  {[type]} type    [description]\n\t\t\t * @return {[type]}         [description]\n\t\t\t */\n\t\t\tshow : function(message, type) {\n\t\t\t\tvar n = noty({\n\t\t\t\t\tlayout: 'bottomLeft',\n\t\t\t\t\ttext : message,\n\t\t\t\t\ttype : type || 'info',\n\t\t\t\t\tdismissQueue: true,\n\t\t\t\t\ttimeout : 3000\n\t\t\t\t})\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Display a success message\n\t\t\t * @method function\n\t\t\t * @param  {[type]} message [description]\n\t\t\t * @return {[type]}         [description]\n\t\t\t */\n\t\t\tsuccess : function(message) {\n\t\t\t\tjUtility.msg.show(message,'success');\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Display a error message\n\t\t\t * @method function\n\t\t\t * @param  {[type]} message [description]\n\t\t\t * @return {[type]}         [description]\n\t\t\t */\n\t\t\terror : function(message) {\n\t\t\t\tjUtility.msg.show(message,'error');\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Display a warning message\n\t\t\t * @method function\n\t\t\t * @param  {[type]} message [description]\n\t\t\t * @return {[type]}         [description]\n\t\t\t */\n\t\t\twarning : function(message) {\n\t\t\t\tjUtility.msg.show(message,'warning');\n\t\t\t}, // end fn\n\n\t\t},\n\n    /**\n     * DOM Manipulation Functions\n     * @type {Object}\n     */\n    DOM : {\n\n      /**\n       * Hide header filters\n       * @method function\n       * @return {[type]} [description]\n       */\n      hideHeaderFilters : function() {\n        jApp.aG().$().find('.table-head .tfilters').hide();\n        $('#btn_toggle_header_filters').removeClass('active');\n      }, // end fn\n\n      /**\n       * Show header filters\n       * @method function\n       * @return {[type]} [description]\n       */\n      showHeaderFilters : function() {\n        jUtility.DOM.headerFilterDeleteIcons();\n        jApp.aG().$().find('.table-head .tfilters').show();\n        $('#btn_toggle_header_filters').addClass('active');\n      }, // end fn\n\n      /**\n       * Updates the grid when there is\n       * or is not any data\n       * @method function\n       * @return {[type]}              [description]\n       */\n\n      dataEmptyHandler : function() {\n        $('.table-cell.no-data').remove();\n        $('<div/>', { class : 'table-cell no-data'}).html('<div class=\"alert alert-warning\"> <i class=\"fa fa-fw fa-warning\"></i> I did not find anything matching your query.</div>').appendTo( jApp.tbl().find('#tbl_grid_body') );\n        jUtility.DOM.updateColWidths();\n      }, // end fn\n\n      /**\n       * Updates the grid when is or is not errors\n       * in the response\n       * @method function\n       * @param  {Boolean} isDataEmpty [description]\n       * @return {[type]}              [description]\n       */\n      dataErrorHandler : function() {\n        $('.table-cell.no-data').remove();\n        $('<div/>', { class : 'table-cell no-data'}).html('<div class=\"alert alert-danger\"> <i class=\"fa fa-fw fa-warning\"></i> There was an error retrieving the data.</div>').appendTo( jApp.tbl().find('#tbl_grid_body') );\n        jUtility.DOM.updateColWidths();\n      }, // end fn\n\n\n      /**\n       * Update the header title\n       * @param  {[type]} newTitle [description]\n       * @return {[type]}          [description]\n       */\n      updateHeaderTitle : function(newTitle) {\n        jApp.opts().gridHeader.headerTitle = newTitle;\n        jApp.tbl().find('span.header-title').html(newTitle);\n      }, // end fn\n\n      /**\n       * Toggle column visibility\n       * @param  {[type]} elm [description]\n       * @return {[type]}     [description]\n       */\n      toggleColumnVisibility : function( elm ) {\n        var col = elm.data('column'),\n          i = +elm.closest('li').index()+2;\n\n        if (elm.find('i').hasClass('fa-check-square-o')) {\n          elm.find('i').removeClass('fa-check-square-o').addClass('fa-square-o');\n          jApp.tbl().find('.table-head .table-row:not(:first-child) .table-header:nth-child(' + i +'), .table-body .table-cell:nth-child(' + i +')').hide();\n        } else {\n          elm.find('i').addClass('fa-check-square-o').removeClass('fa-square-o');\n          jApp.tbl().find('.table-head .table-row:not(:first-child) .table-header:nth-child(' + i +'), .table-body .table-cell:nth-child(' + i +')').show();\n        }\n\n        jUtility.DOM.updateColWidths();\n\n      }, //end fn\n\n      /**  **  **  **  **  **  **  **  **  **\n       *   rowsPerPage\n       *\n       *  @rowsPerPage (int) hide the preloader\n       *\n       *  show/hide the preload animation\n       **  **  **  **  **  **  **  **  **  **/\n      rowsPerPage : function( rowsPerPage ) {\n        if ( isNaN(rowsPerPage) ) return false;\n\n        jApp.aG().store.set('pref_rowsPerPage',rowsPerPage);\n        jApp.opts().pageNum = 1;\n        jApp.aG().dataGrid.pagination.rowsPerPage = Math.floor(rowsPerPage);\n        jUtility.updatePagination();\n        jUtility.DOM.page(1);\n        jUtility.DOM.updateColWidths();\n      }, // end fn\n\n      /**  **  **  **  **  **  **  **  **  **\n       *   preload\n       *\n       *  @hide (bool) hide the preloader\n       *\n       *  show/hide the preload animation\n       **  **  **  **  **  **  **  **  **  **/\n      togglePreloader : function( hide ) {\n        if (typeof hide === 'undefined') { hide = false; }\n\n        if (!hide) {\n          jApp.tbl().css('background','url(\"/images/tbody-preload.gif\") no-repeat center 175px rgba(0,0,0,0.15)')\n           .find('[name=RowsPerPage],[name=q]').prop('disabled',true).end()\n           .find('.table-body').css('filter','blur(1px) grayscale(100%)').css('-webkit-filter','blur(2px) grayscale(100%)') .css('-moz-filter','blur(2px) grayscale(100%)')\n           //.find('.table-cell, .table-header').css('border','1px solid transparent').css('background','none');\n        } else {\n          jApp.tbl().css('background','')\n           .find('[name=RowsPerPage],[name=q]').prop('disabled',false).end()\n           .find('.table-body').css('filter','').css('-webkit-filter','').css('-moz-filter','')\n           //.find('.table-cell, .table-header').css('border','').css('background','');\n        }\n      }, // end fn\n\n      /**  **  **  **  **  **  **  **  **  **\n       *   page\n       *\n       *  @pageNum (int) the new page number\n       *  \t\t\t\tto display\n       *\n       *  jumps to the desired page number\n       **  **  **  **  **  **  **  **  **  **/\n      page : function( pageNum ) {\n        var first, last;\n\n        jUtility.DOM.togglePreloader();\n\n        if (isNaN(pageNum)) return false;\n        pageNum = Math.floor(pageNum);\n\n        jApp.opts().pageNum = pageNum;\n        first = +( (pageNum-1) * jApp.aG().dataGrid.pagination.rowsPerPage );\n        last  = +(first+jApp.aG().dataGrid.pagination.rowsPerPage);\n        jApp.tbl().find('.table-body .table-row').hide().slice(first,last).show();\n\n        // set col widths\n        setTimeout(\tjUtility.DOM.updateColWidths, 100 );\n      }, // end fn\n\n      /**  **  **  **  **  **  **  **  **  **\n       *   updatePanelHeader\n       *\n       *  @text\t(string) text to display\n       *\n       *  updates the text display in the\n       *  header of the form wrapper\n       *\n       **  **  **  **  **  **  **  **  **  **/\n      updatePanelHeader : function(text) {\n        jUtility.$currentFormWrapper().find('.spn_editFriendlyName').html( text );\n      }, // end fn\n\n      /**\n       * Remove rows from the DOM that do not have corresponding data\n       * @param  {[type]} all [description]\n       * @return {[type]}     [description]\n       */\n      removeRows : function(all) {\n        var identifiers = _.pluck(jApp.aG().dataGrid.data, jApp.opts().pkey);\n\n        if (typeof all !== 'undefined' && all) {\n          jApp.tbl().find('.table-body .table-row').remove();\n        } else {\n          //--jApp.aG().DOM.$rowMenu.detach();\n\n          jApp.tbl().find('.table-row[data-identifier]')\n             .filter( function(i, row) {\n                return _.indexOf( identifiers, $(row).attr('data-identifier') ) === -1;\n             }\n          ).remove();\n        }\n      }, // end fn\n\n      /**\n       * Apply the header filters\n       * @method function\n       * @return {[type]} [description]\n       */\n      applyHeaderFilters : function() {\n        var matchedRows = [];\n\n        jApp.log('Applying Header Filters');\n\n        if ( !jUtility.areHeaderFiltersNonempty() ) {\n          return jUtility.DOM.removeHeaderFilters();\n        }\n\n        jUtility.DOM.hidePaginationControls();\n\n        jApp.log('Getting matched rows');\n        matchedRows = jUtility.getHeaderFilterMatchedRows();\n\n        jUtility.setVisibleRows( matchedRows );\n\n        jApp.tbl().find('.filter-showing').html(\n             jUtility.render( jApp.aG().html.tmpFilterShowing,\n               {\n                 'totalVis' : matchedRows.length,\n                 'totalRows' : jApp.tbl().find('.table-body .table-row').length\n               }\n              )\n           );\n\n        // update column widths\n        jUtility.DOM.updateColWidths();\n\n      }, // end fn\n\n      /**\n       * Remove the header filters\n       * @method function\n       * @return {[type]} [description]\n       */\n      removeHeaderFilters : function() {\n        if ( jUtility.isPagination() ) {\n          jUtility.DOM.showPaginationControls();\n          jUtility.DOM.updateFilterText('');\n          jUtility.DOM.page(jApp.opts().pageNum);\n        }\n      }, // end fn\n\n      /**\n       * Update the Showing x/x filter text\n       * @method function\n       * @param  {[type]} text [description]\n       * @return {[type]}      [description]\n       */\n      updateFilterText : function(text) {\n        jApp.tbl().find('.filter-showing').html( text );\n      }, // end fn\n\n      /**\n       * Show the pagination controls\n       * @method function\n       * @return {[type]} [description]\n       */\n      showPaginationControls : function() {\n        jApp.tbl().find('.divRowsPerPage, .paging').show();\n      }, // end fn\n\n      /**\n       * Hide the pagination controls\n       * @method function\n       * @return {[type]} [description]\n       */\n      hidePaginationControls : function() {\n        jApp.tbl().find('.divRowsPerPage, .paging').hide();\n      }, // end fn\n\n      /**\n       * Header Filter Delete Icons\n       * @method function\n       * @return {[type]} [description]\n       */\n      headerFilterDeleteIcons : function() {\n        if ( !$('.table-header .deleteicon').length ) {\n          jApp.log('Adding header filter delete icons');\n          $('.header-filter').after(\n            $('<span/>', {'class':'deleteicon','style':'display:none'})\n            .html(\n              jUtility.render( jApp.aG().html.tmpClearHeaderFilterBtn )\n            )\n          )\n        } else {\n          jApp.log('Delete icons already added');\n        }\n      }, // end fn\n\n      /**  **  **  **  **  **  **  **  **  **\n       *   sortByCol\n       *\n       *  @colNum (int) the 1-indexed html\n       *  \t\t\tcolumn to sort by\n       *\n       *  @desc \t(bool) sort descending\n       *\n       *  sorts the table rows in the DOM\n       *  according the the input column\n       *  and direction (asc default)\n       **  **  **  **  **  **  **  **  **  **/\n      sortByCol : function( colNum, desc ) {\n        var $col;\n\n        if (typeof colNum === 'undefined' && typeof jApp.aG().temp.sortOptions === 'undefined') {\n          return false;\n        }\n\n        if (typeof colNum === 'undefined') {\n          colNum = jApp.aG().temp.sortOptions.colNum;\n          desc = jApp.aG().temp.sortOptions.desc;\n        } else {\n            jApp.aG().temp.sortOptions = { colNum : colNum, desc : desc };\n        }\n\n\n        //col\n        $col = jApp.tbl().find('.table-body .table-row .table-cell:nth-child(' + colNum + ')')\n          .map( function(i,elm) {\n            return [[\n                  $(elm).text().toLowerCase(),\n                  $(elm).parent()\n                ]];\n          })\n          .sort(function(a,b) {\n\n            if (jQuery.isNumeric(a[0]) && jQuery.isNumeric(b[0])) {\n              return a[0]-b[0];\n            }\n\n            if (a[0] > b[0]) {\n              return 1;\n            }\n\n            if (a[0] < b[0]) {\n              return -1;\n            }\n\n            // a must be equal to b\n            return 0;\n          }\n        );\n\n        // iterate through col\n        $.each($col, function(i,elm){\n          var $e = $(elm[1]);\n\n          // detach the row from the DOM\n          $e.detach();\n\n          // attach the row in the correct order\n          (!desc) ?\n            jApp.tbl().find('.table-body').append( $e ) :\n            jApp.tbl().find('.table-body').prepend( $e );\n        });\n\n        // go to the appropriate page to refresh the view\n        jUtility.DOM.page( jApp.opts().pageNum );\n\n        // apply header filters\n        jUtility.DOM.applyHeaderFilters()\n      }, // end fn\n\n      /**\n       * Hide or show the activity preloader\n       * @method function\n       * @param  {[type]} action [description]\n       * @return {[type]}        [description]\n       */\n      activityPreloader : function( action ) {\n        if (action !== 'hide') {\n          $('.ajax-activity-preloader').show();\n        } else {\n          $('.ajax-activity-preloader').hide();\n        }\n      }, //end fn\n\n      /**\n       * Empty the page wrapper div\n       * @method function\n       * @return {[type]} [description]\n       */\n      emptyPageWrapper : function() {\n        $('#page-wrapper').empty();\n      }, //end fn\n\n      /**\n       * Toggle header filters\n       * @method function\n       * @return {[type]} [description]\n       */\n      toggleHeaderFilters : function() {\n        jApp.log('headerFilters toggled');\n\n        jApp.opts().toggles.headerFiltersDisplay =\n          !jApp.opts().toggles.headerFiltersDisplay;\n\n        if ( $('.tfilters:visible').length ) {\n          jUtility.DOM.hideHeaderFilters();\n        } else {\n          jUtility.DOM.showHeaderFilters();\n        }\n\n        jUtility.DOM.updateColWidths();\n      }, //end fn\n\n      /**\n       * Update the grid position\n       * @return {[type]} [description]\n       */\n      updateGridPosition : function() {\n        var p = jUtility.calculateGridPosition();\n        if (!p) return false;\n\n        $('.grid-panel-body')\n          .css({ 'marginTop' : p.marginTop })\n          .find('.table')\n            .css({ 'height' : p.height });\n\n        $('.table-grid').perfectScrollbar('update');\n      }, // end fn\n\n      /**\n       * Handles the page wrapper after scrolling\n       * @return {[type]} [description]\n       */\n      pageWrapperScrollHandler : function() {\n\n        var pw = $('#page-wrapper'),\n            isScrolled = pw.hasClass('scrolled'),\n            offsetTop = $('.table-body').offset().top,\n            lowerBound = 150,\n            upperBound = 180;\n\n        if ( !isScrolled && offsetTop < lowerBound ) {\n          pw.addClass('scrolled');\n          jUtility.DOM.updateGridPosition();\n        } else if ( isScrolled && offsetTop > upperBound  ) {\n          pw.removeClass('scrolled');\n          jUtility.DOM.updateGridPosition();\n        }\n\n      }, // end fn\n\n      /**\n       * Clear the column widths\n       * @return {[type]} [description]\n       */\n      clearColumnWidths : function() {\n        $('.grid-panel-body .table-row').find('.table-cell, .table-header').css('width','');\n      }, //end fn\n\n      /**\n       * Update column widths\n       * @method function\n       * @return {[type]} [description]\n       */\n      updateColWidths : function() {\n        var headerRowIndex = 3,\n            bottomOffset = 0;\n\n        jUtility.DOM.updateGridPosition();\n        jUtility.setupSortButtons();\n\n        jUtility.DOM.clearColumnWidths();\n\n        // perfect scrollbar\n        $('.table-grid').perfectScrollbar('update');\n\n        jApp.opts().maxColWidth =  +350/1920 * +$(window).innerWidth();\n\n        //visible columns\n        var visCols = +$('.table-head .table-row.colHeaders').find('.table-header:visible').length-1;\n\n        for(var ii=1; ii <= visCols; ii++ ) {\n\n          var colWidth = Math.max.apply( Math, $('.grid-panel-body .table-row').map(function(i) {\n            return $(this).find('.table-cell:visible,.table-header-text:visible').eq(ii).innerWidth() } ).get()\n          );\n\n          if ( +colWidth > jApp.opts().maxColWidth && ii < visCols ) {\n            colWidth = jApp.opts().maxColWidth;\n          }\n\n          if ( ii == visCols ) {\n            colWidth = +$(window).innerWidth()-$('.table-head .table-row.colHeaders').find('.table-header:visible').slice(0,-1)\n                            .map( function(i) { return $(this).innerWidth() } ).get().reduce( function(p,c) { return p+c } )-40;\n          }\n\n          var nindex = +ii+1;\n\n          // set widths of each cell\n          $(  '.grid-panel-body .table-row:not(.tr-no-data) .table-cell:visible:nth-child(' + nindex + '),' +\n            '.grid-panel-body .table-row:not(.tr-no-data) .table-header:nth-child(' + nindex + ')').css('width',+colWidth+14);\n        }\n\n        //hide preload mask\n        jUtility.DOM.togglePreloader(true);\n      }, // end fn\n\n      /**  **  **  **  **  **  **  **  **  **\n       *   moveRowMenu\n       *\n       *  @tr - target table row element\n       *\n       *  Moves the row menu to the target\n       **  **  **  **  **  **  **  **  **  **/\n      moveRowMenu : function($tr) {\n        // jApp.aG().DOM.$rowMenu.detach().appendTo( $tr.find('.table-cell .rowMenu-container').eq(0) );\n      }, // end fn\n\n      /**\n       * Attach Row Menu To The DOM\n       * @method function\n       * @return {[type]} [description]\n       */\n      attachRowMenu : function() {\n        $('.table-rowMenu-row').empty().append( jApp.aG().DOM.$rowMenu.wrap('<div class=\"table-header\"></div>').parent() );\n      }, //end fn\n\n      /**\n       * Update the row menu\n       * @method function\n       * @return {[type]} [description]\n       */\n      updateRowMenu : function(num_checked) {\n        switch( num_checked ) {\n          case 0 :\n            jUtility.DOM.toggleRowMenu(false);\n\n          break;\n\n          case 1 :\n            jUtility.DOM.toggleRowMenu(true);\n            jUtility.DOM.toggleRowMenuItems( false );\n          break;\n\n          default :\n            jUtility.DOM.toggleRowMenu(true);\n            jUtility.DOM.toggleRowMenuItems( true );\n          break;\n        }\n      }, // end fn\n\n      /**\n       * Toggle Row Menu Items\n       * @method function\n       * @param  {[type]} hideNonMultiple [description]\n       * @return {[type]}                 [description]\n       */\n      toggleRowMenuItems : function( disableNonMultiple ) {\n        if (disableNonMultiple) {\n          $( '.table-row.table-rowMenu-row .btn[data-multiple=false]').addClass('disabled').prop('disabled',true);\n        } else {\n          var p = jApp.aG().permissions;\n          $( '.table-row.table-rowMenu-row .btn').each( function() {\n            if ( $(this).attr('data-permission') == null ||  !!p[ $(this).attr('data-permission')  ] ) {\n                $(this).removeClass('disabled').prop('disabled',false);\n            }\n          });\n        }\n      }, //end fn\n\n      /**\n       * Toggle Row Menu visibility\n       * @method function\n       * @return {[type]} [description]\n       */\n      toggleRowMenu : function( on ) {\n        if (on != null) {\n          $('.table-row.table-rowMenu-row').toggle(on);\n          $('.table-row.table-menu-row').toggle(!on);\n        } else {\n          $('.table-row.table-rowMenu-row').toggle();\n          $('.table-row.table-menu-row').toggle();\n        }\n        jUtility.DOM.updateColWidths();\n      }, // end fn\n\n\n      /**\n       * Reset row menu to non-expanded state\n       * @method function\n       * @return {[type]} [description]\n       */\n      resetRowMenu : function() {\n        //$('.btn-showMenu').removeClass('rotate');\n        //jApp.aG().DOM.$rowMenu.removeClass('expand');\n      }, // end fn\n\n      /**\n       * Initialize grid\n       * @method function\n       * @return {[type]} [description]\n       */\n      initGrid : function() {\n        var id = jApp.opts().table + '_' + Date.now();\n\n        jApp.aG().DOM.$grid = $('<div/>' , { id : id }).html(\n          jUtility.render(\n            jApp.aG().html.tmpMainGridBody , jApp.opts().gridHeader\n          )\n        ).find('select#RowsPerPage')\n          .val( jApp.aG().dataGrid.pagination.rowsPerPage )\n          .end()\n        .appendTo('#page-wrapper');\n\n        jApp.aG().DOM.$tblMenu = jApp.aG().DOM.$grid.find('.table-btn-group');\n\n        if ( !jApp.opts().gridHeader.helpText ) {\n          jApp.tbl().find('.helpText').hide();\n        }\n\n      }, // end fn\n\n      /**\n       * iterates through changed data and updates the DOM\n       * @method function\n       * @return {[type]} [description]\n       */\n      updateGrid : function() {\n        // init vars\n        var appendTR = false,\n          appendTD = false;\n\n        if (!!jApp.aG().dataGrid.delta[0] && jApp.aG().dataGrid.delta[0][jApp.opts().pkey] === 'NoData') {\n          var tr = $('<div/>', { class : 'table-row tr-no-data'} ).append( $('<div/>', { class : 'table-cell'} ).html('No Data') );\n\n          jApp.tbl().find('.table-body').empty().append( tr );\n          return false;\n        }\n\n        // iterate through the changed data\n        $.each( jApp.aG().dataGrid.delta, function(i,oRow) {\n\n          jApp.tbl().find('.table-body .tr-no-data').remove();\n\n          // save the current row.\n          jApp.aG().currentRow = jApp.aG().dataGrid.data[i];\n\n          // find row in the table if it exists\n          var\ttr = jApp.tbl().find('.table-row[data-identifier=\"' + oRow[jApp.opts().pkey] + '\"]');\n\n          // try the json key if you can't find the row by the pkey\n          if (!tr.length) tr = jApp.tbl().find('.table-row[data-jsonkey=' + i + ']');\n\n          // create the row if it does not exist\n          if (!tr.length) {\n            tr = $('<div/>', { 'class' : 'table-row', 'data-identifier' : oRow[jApp.opts().pkey], 'data-jsonkey' : i } );\n            appendTR = true;\n\n            if (jUtility.isEditable()) {\n\n\n              var td_chk = $('<div/>', { 'class' : 'table-cell', \"nowrap\" : \"nowrap\",  \"style\" : \"position:relative;\"} );\n              //var td_chk = $('<div/>', { 'class' : 'table-cell', \"nowrap\" : \"nowrap\" } );\n              if (!!jApp.opts().cellAtts['*']) {\n                $.each( jApp.opts().cellAtts['*'], function(at, fn) {\n                  td_chk.attr( at,fn() );\n                });\n              }\n\n              var collapseMenu = '';\n\n              var\ttdCheck = (!!oRow[jApp.opts().pkey]) ? '<input type=\"checkbox\" class=\"chk_cid\" name=\"cid[]\" />' : '';\n\n              var lblCheck = '<label class=\"btn btn-default pull-right lbl-td-check\" style=\"margin-left:20px;\"> ' + tdCheck + '</label>';\n\n              td_chk.html( \tcollapseMenu +\n                        lblCheck +\n                      '<div class=\"rowMenu-container\"></div> \\\n                      </div>&nbsp;'\n              );\n              tr.append(td_chk);\n            }\n\n          } else { // update the row data- attributes\n            tr.attr('data-identifier',oRow[jApp.opts().pkey]).attr('data-jsonkey',i);\n\n            var td_chk = tr.find('.table-cell').eq(0);\n            // update the attributes on the first cell\n            if (!!jApp.opts().cellAtts['*']) {\n              $.each( jApp.opts().cellAtts['*'], function(at, fn) {\n                td_chk.attr( at,fn() );\n              });\n            }\n          }\n\n\n\n          // iterate through the columns\n          //$.each( jApp.aG().currentRow, function(key, value) {\n          $.each( jApp.opts().columns, function(i, key) {\n\n            // get the value of the current key\n            var value = jApp.aG().currentRow[key];\n\n            // determine if the column is hidden\n            if ( _.indexOf(jApp.opts().hidCols, key) !== -1) {\n              return false;\n            }\n\n            // find the cell if it exists\n            var td = tr.find('.table-cell[data-identifier=\"' + key + '\"]');\n\n            // create the cell if needed\n            if (!td.length) {\n              td = $('<div/>', { 'class' : 'table-cell', 'data-identifier' : key} );\n              appendTD = true;\n            }\n\n            // set td attributes\n            if (!!jApp.opts().cellAtts['*']) {\n              $.each( jApp.opts().cellAtts['*'], function(at, fn) {\n                td.attr( at,fn() );\n              });\n            }\n\n            if(!!jApp.opts().cellAtts[key]) {\n              $.each( jApp.opts().cellAtts[key], function(at, fn) {\n                td.attr( at,fn() );\n              });\n            }\n\n            // prepare the value\n            value = jUtility.prepareValue(value,key);\n\n            if ( td.html().trim() !== value.trim() ) {\n              // set the cell value\n              td\n               .html(value)\n               .addClass('changed')\n            }\n\n\n            // add the cell to the row if needed\n            if (appendTD) {\n              tr.append(td);\n            }\n\n          });// end each\n\n          // add the row if needed\n          if (appendTR) {\n            jApp.tbl().find('.table-body').append(tr);\n          }\n        }); // end each\n\n        // reset column widths\n        jUtility.DOM.updateColWidths();\n\n        // animate changed cells\n\n          // .stop()\n          // .css(\"background-color\", \"#FFFF9C\")\n          // .animate({ backgroundColor: 'transparent'}, 1500, function() { $(this).removeAttr('style');  } );\n\n\n        setTimeout( function() { jApp.tbl().find('.table-cell.changed').removeClass('changed') }, 2000 );\n\n\n        jUtility.countdown();\n        jUtility.DOM.page( jApp.opts().pageNum );\n\n        // deal with the row checkboxes\n        jApp.tbl().find('.table-row')\n          .filter(':not([data-identifier])')\n            .find('.lbl-td-check').remove() // remove the checkbox if there is no primary key for the row\n            .end()\n          .end()\n          .filter('[data-identifier]') // add the checkbox if there is a primary key for the row\n          .each(function(i,elm) {\n            if ( jUtility.isEditable() && $(elm).find('.lbl-td-check').length === 0 ) {\n              $('<label/>', { class : 'btn btn-default pull-right lbl-td-check', style : 'margin-left:20px' })\n                .append( $('<input/>', { type: 'checkbox', class : 'chk_cid', name : 'cid[]' } ))\n                .appendTo ( $(elm) );\n            }\n          });\n\n        jApp.tbl().find('.table-body .table-row, .table-head .table-row:last-child').each( function(i,elm) {\n          if ( $(elm).find('.table-cell,.table-header').length < 4 ) {\n            $('<div/>', {'class' : 'table-cell'}).appendTo( $(elm) );\n          }\n        });\n\n        jApp.tbl().find('.table-head .table-row:nth-child(2)').each( function(i,elm) {\n          if ( $(elm).find('.table-cell,.table-header').length < 3 ) {\n            $('<div/>', {'class' : 'table-cell'}).appendTo( $(elm) );\n          }\n        });\n\n        // process pagination\n        jUtility.updatePagination();\n\n\n      },\n\n      /**\n       * Clear the menus so they can be rebuilt\n       * @method function\n       * @return {[type]} [description]\n       */\n      clearMenus : function() {\n        jApp.aG().DOM.$tblMenu.find( '.btn:not(.btn-toggle)' ).remove();\n        jApp.aG().DOM.$rowMenu.empty();\n        //jApp.aG().DOM.$withSelectedMenu.empty();\n      }, // end fn\n\n      /**\n       * Build a menu\n       * @method function\n       * @param  {obj} collection \tcollection of menu options to iterate over\n       * @param  {jQuery} target    DOM target for new buttons/links\n       * @param  {string} type \t\t\tbuttons | links\n       */\n      buildMenu : function(collection, target, type, order) {\n        var o, key, oo, kk, btn;\n\n        if (typeof type === 'undefined') { type = 'buttons'}\n\n        //build menu\n        _.each( collection, function(o, key) {\n          if (!!o.ignore) return false;\n          if ( jUtility.isButtonEnabled(key) ) {\n            if (key === 'custom') {\n              _.each( o, function( oo, kk ) {\n                if (!!oo.ignore) return false;\n\n                if ( jUtility.isPermission(oo) ) {\n                  jApp.log('Button enabled : ' + kk);\n                  delete oo.disabled;\n                } else {\n                  jApp.log('Button disabled : ' + kk);\n                  oo.disabled = true;\n                }\n\n                if (type == 'buttons') {\n                  jUtility.DOM.createMenuButton( oo ).appendTo( target );\n                } else {\n                  jUtility.DOM.createMenuLink( oo ).appendTo( target );\n                }\n              });\n            } else {\n\n                if ( jUtility.isPermission(o) ) {\n                  jApp.log('Button enabled : ' + key);\n                  delete o.disabled;\n                } else {\n                  jApp.log('Button disabled : ' + key);\n                  o.disabled = true;\n                }\n\n                //jApp.log(o);\n                if (type == 'buttons') {\n                  jUtility.DOM.createMenuButton( o ).clone().appendTo( target );\n                } else {\n                  jUtility.DOM.createMenuLink( o ).appendTo( target );\n                }\n              }\n            }\n          }\n        );\n\n        //sort buttons by data-order\n        if (!!order) {\n          var btns = target.find('.btn');\n\n          btns.detach().sort( function(a,b) {\n            var an = +a.getAttribute('data-order'),\n                bn = +b.getAttribute('data-order');\n\n            if (an > bn) return 1;\n            if (an < bn) return -1;\n            return 0;\n          }).appendTo(target);\n        }\n      }, //end fn\n\n      /**\n       * Build a button menu\n       * @method function\n       */\n      buildBtnMenu : function(collection, target, order) {\n        jUtility.DOM.buildMenu(collection, target, 'buttons', order);\n      }, //end fn\n\n      /**\n       * Build a link menu\n       * @method function\n       */\n      buildLnkMenu : function(collection, target, order) {\n        jUtility.DOM.buildMenu(collection, target, 'links', order);\n      }, // end fn\n\n      /**\n       * Helper function to create menu links\n       * @method function\n       * @param  {obj} o html parameters of the link\n       * @return {jQuery obj}\n       */\n      createMenuLink : function( o ) {\n        var $btn, $btn_a, $btn_choice, $ul;\n\n        $btn_choice = $('<a/>', { href : 'javascript:void(0)', 'data-permission' : (o['data-permission'] != null) ? o['data-permission'] : '' });\n\n        //add the icon\n        if (!!o.icon) {\n          $btn_choice.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + o.icon } ) );\n        }\n        // add the label\n        if (!!o.label) {\n          $btn_choice.append( $('<span/>').html(o.label) );\n        }\n\n        // disable/enable the button\n        if (o.disabled === true) {\n          $btn_choice.prop('disabled',true).addClass('disabled');\n        } else {\n          $btn_choice.prop('disabled',false).removeClass('disabled');\n        }\n\n        // add the click handler\n        if (!!o.fn) {\n          if (typeof o.fn === 'string') {\n            if (o.fn !== 'delete') {\n              $btn_choice.off('click.custom').on('click.custom', function() {\n              jApp.aG().withSelectedButton = $(this);\n              jUtility.withSelected( 'custom', jApp.aG().fn[o.fn] )\n              } );\n            } else {\n              $btn_choice.off('click.custom').on('click.custom', function() {\n              jApp.aG().withSelectedButton = $(this);\n              jUtility.withSelected( 'delete', null )\n              } );\n            }\n          } else if (typeof o.fn === 'function') {\n            $btn_choice.off('click.custom').on('click.custom', function() {\n            jApp.aG().withSelectedButton = $(this);\n            jUtility.withSelected( 'custom', o.fn )\n            } );\n          }\n        }\n\n        // add the html5 data\n        if (!!o.data) {\n          _.each( o.data, function(v,k) {\n            $btn_choice.attr('data-'+k,v);\n          });\n        }\n\n        return $('<li/>', {class : o.class, title : o.title}).append( $btn_choice );\n\n      }, // end fn\n\n      /**\n       * Helper function to create menu buttons\n       * @method function\n       * @param  {obj} o html parameters of the button\n       * @return {jQuery obj}\n       */\n      createMenuButton : function( params ) {\n        var $btn, $btn_a, $btn_choice, $ul;\n\n\n        if ( typeof params[0] === 'object') { // determine if button is a dropdown menu\n          $btn = $('<div/>', { class : 'btn-group btn-group-sm'})\n          // params[0] will contain the dropdown toggle button\n          $btn_a = $('<a/>', {\n                    type : 'button',\n                    class : params[0].class + ' dropdown-toggle',\n                    href : '#',\n                    'data-toggle' : 'dropdown'\n                 });\n\n\n\n          // add the icon if applicable\n          if (!!params[0].icon) {\n            $btn_a.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + params[0].icon } ) );\n          }\n          // add the label if applicable\n          if (!!params[0].label) {\n            $btn_a.append( $('<span/>').html(params[0].label) );\n          }\n          // add the click handler, if applicable\n          if (typeof params[0].fn !== 'undefined') {\n            if (typeof params[0].fn === 'string') {\n              $btn_a.off('click.custom').on('click.custom', jApp.aG().fn[params[0].fn ] );\n            } else if (typeof params[0].fn === 'function') {\n              $btn_a.off('click.custom').on('click.custom', params[0].fn );\n            }\n          }\n          // add the dropdown if there are multiple options\n          if (params.length > 1) {\n            $btn_a.append( $('<span/>', {class : 'fa fa-caret-down'}));\n            $btn.append($btn_a);\n            $ul = $('<ul/>', { class : 'dropdown-menu'});\n\n            _.each( params, function(o,key) {\n              if (key == 0) return false;\n              var signature = 'btn_' + Array(26).join((Math.random().toString(36)+'000000000000000000000').slice(2, 18)).slice(0, 25);\n\n              $btn_choice = $('<a/>', $.extend(true, { 'data-permission' : '' }, _.omit(o,'fn') , { href : '#', 'data-signature' : signature }) );\n\n              // disable/enable the button\n              if (o.disabled === true) {\n                $btn_choice.prop('disabled',true).addClass('disabled');\n              } else {\n                $btn_choice.prop('disabled',false).removeClass('disabled');\n              }\n\n              //add the icon\n              if (!!o.icon) {\n                $btn_choice.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + o.icon } ) );\n              }\n              // add the label\n              if (!!o.label) {\n                $btn_choice.append( $('<span/>').html(o.label) );\n              }\n\n              // add the click handler\n              if (!!o.fn) {\n                if (typeof o.fn === 'string') {\n                  $(document).delegate( 'a[data-signature=' + signature + ']', 'click.custom', jApp.aG().fn[o.fn] );\n                } else if (typeof o.fn === 'function') {\n                  $(document).delegate( 'a[data-signature=' + signature + ']', 'click.custom', o.fn );\n                }\n              }\n\n              $btn_choice.wrap('<li></li>').parent().appendTo($ul);\n            });\n\n            $btn.append($ul);\n          } else {\n            $btn.append($btn_a);\n          }\n\n        } else {\n          // generate a random, unique button signature\n          var signature = 'btn_' + Array(26).join((Math.random().toString(36)+'000000000000000000000').slice(2, 18)).slice(0, 25);\n\n          $btn = $('<button/>', _.omit(params, ['fn']) ).attr('data-signature',signature);\n\n          //add ignore flag for toggle buttons\n          if ( $btn.hasClass('btn-toggle') ) {\n            params.ignore = true;\n          }\n          if (!!params.icon) {\n            $btn.append( $('<i/>', { 'class' : 'fa fa-fw fa-lg ' + params.icon } ) );\n          }\n          if (!!params.label) {\n            $btn.append( $('<span/>').html(params.label) );\n          }\n          if (!!params.fn) {\n            if (typeof params.fn === 'string') {\n              $(document).delegate( 'button[data-signature=' + signature + ']', 'click.custom', jApp.aG().fn[params.fn] );\n            } else if (typeof params.fn === 'function') {\n              $(document).delegate( 'button[data-signature=' + signature + ']', 'click.custom', params.fn );\n            }\n          }\n          // disable/enable the button\n          if (params.disabled === true) {\n            $btn.prop('disabled',true).addClass('disabled');\n          } else {\n            $btn.prop('disabled',false).removeClass('disabled');\n          }\n        }\n\n        return $btn;\n      }, // end fn\n\n      /**\n       * Build form\n       * @method function\n       * @param  {[type]} params [description]\n       * @param  {[type]} key    [description]\n       * @return {[type]}        [description]\n       */\n      buildForm : function( params, key, htmlKey, tableFriendly ) {\n        var $frmHandle = '$' + key,\n            oFrmHandle = 'o' + key.ucfirst(),\n            oFrm;\n\n        htmlKey = ( htmlKey != null ) ? htmlKey : key;\n\n        // make sure the form template exists\n        if ( typeof jApp.aG().html.forms[htmlKey] === 'undefined' ) return false;\n\n        // create form object\n        jApp.aG().forms[oFrmHandle] = oFrm = new jForm( params );\n\n        // create form container\n        jApp.aG().forms[$frmHandle] = $('<div/>', { 'class' : 'gridFormContainer' })\n          .html( jUtility.render( jApp.aG().html.forms[htmlKey], { tableFriendly : tableFriendly || jApp.opts().model } ) )\n          .find( '.formContainer' ).append( oFrm.fn.handle() ).end()\n          .appendTo( jApp.aG().$() );\n      }, // end fn\n\n      /**  **  **  **  **  **  **  **  **  **\n       *   overlay\n       *\n       *  Controls the modal overlays\n       **  **  **  **  **  **  **  **  **  **/\n      overlay : function(which,action) {\n        var $which = (which == 1) ? '#modal_overlay' : '#modal_overlay2';\n        if (action == 'on') {\n          $($which).show();\n        } else {\n          $($which).hide();\n        }\n      },\n\n      /**\n       * Setup Grid Headers\n       * @method function\n       * @return {[type]} [description]\n       */\n      setupGridHeaders : function() {\n        // init vars\n\t\t\t\tvar\tappendTH = false,\n\t\t\t\t\ttheaders,\n\t\t\t\t\ttfilters,\n\t\t\t\t\tbtn,\n\t\t\t\t\tisActive,\n          self = jApp.aG();\n\n        // find the header row\n\t\t\t\ttheaders = self.DOM.$grid.find('.table-head .table-row.colHeaders');\n\n\t\t\t\t// create the header row if needed\n\t\t\t\tif (!theaders.length) {\n\t\t\t\t\ttfilters = self.DOM.$grid.find('.table-row.tfilters');\n\t\t\t\t\ttheaders = $('<div/>', {'class' : 'table-row colHeaders'});\n\t\t\t\t\tappendTH = true;\n\n\t\t\t\t\t// Append the check all checkbox\n\t\t\t\t\tif (jUtility.isEditable()) {\n\t\t\t\t\t\ttheaders.append( $('<div/>', {'class' : 'table-header table-header-text'}).html( jUtility.render( self.html.tmpCheckAll ) ));\n\t\t\t\t\t}\n\n\t\t\t\t\t// create header for this column if needed\n\t\t\t\t\t$.each( self.options.headers, function(i,v) {\n\t\t\t\t\t\t// determine if the current column is the active sortBy column\n\t\t\t\t\t\tisActive = (self.options.columns[i] === self.options.sortBy) ? true : false;\n\n\t\t\t\t\t\t// render the button\n\t\t\t\t\t\tbtn = jUtility.render( self.html.tmpSortBtn, {\n\t\t\t\t\t\t\t'ColumnName' : self.options.columns[i],\n\t\t\t\t\t\t\t'BtnClass' : (isActive) ? 'btn-primary' : '',\n\t\t\t\t\t\t\t'faClass' : (isActive) ? 'amount-desc' : 'amount-asc',\n\t\t\t\t\t\t\t'BtnTitle' : (isActive) ? 'Sort Descending' : 'Sort Ascending'\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t// append the header\n\t\t\t\t\t\ttheaders.append( $('<div/>', { 'class' : 'table-header table-header-text' }).html( btn + v ) );\n\n\t\t\t\t\t\tif ( i > 0 ) { // skip the id column\n\t\t\t\t\t\t\ttfilters.append( $('<div/>', { 'class' : 'table-header', 'style' : 'position:relative'}).append( $('<input/>',\n\t\t\t\t\t\t\t//tfilters.append( $('<div/>', { 'class' : 'table-header'}).append( $('<input/>',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t'rel' : self.options.columns[i],\n\t\t\t\t\t\t\t\t\t'id'  :\t'filter_' + self.options.columns[i],\n\t\t\t\t\t\t\t\t\t'name' : 'filter_' + self.options.columns[i],\n\t\t\t\t\t\t\t\t\t'class' : 'header-filter form-control',\n\t\t\t\t\t\t\t\t\t'style' : 'width:100%',\n                  'placeholder' : self.options.headers[i]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tself.DOM.$grid.find('.table-head').append(theaders);\n\t\t\t\t\tself.DOM.$grid.find('.paging').parent().attr('colspan',self.options.headers.length-2);\n\t\t\t\t\t//self.DOM.$grid.find('.with-selected-menu').append( self.DOM.$withSelectedMenu.find('li') );\n\t\t\t\t}\n      }\n\n    }, // end DOM fns\n\n    /**  **  **  **  **  **  **  **  **  **\n\t\t *   CALLBACK\n\t\t *\n\t\t *  Defines the callback functions\n\t\t *  used by the various AJAX calls\n\t\t **  **  **  **  **  **  **  **  **  **/\n\t\tcallback : {\n\n\t\t\t/**\n\t\t\t * Process the result of the form submission\n\t\t\t * @method function\n\t\t\t * @param  {[type]} response [description]\n\t\t\t * @return {[type]}          [description]\n\t\t\t */\n\t\t\tsubmitCurrentForm : function(response) {\n\t\t\t\tif ( jUtility.isResponseErrors(response) ) {\n\t\t\t\t\tjUtility.msg.error( jUtility.getErrorMessage(response) )\n\t\t\t\t} else {\n\t\t\t\t\tjUtility.msg.success( 'Operation Completed Successfully!');\n\t\t\t\t\tif (jApp.opts().closeOnSave) {\n            if ( jUtility.needsCheckin() )  {\n              jUtility.checkin( jUtility.getCurrentRowId() );\n            } else {\n              jUtility.closeCurrentForm();\n            }\n\t\t\t\t\t}\n\t\t\t\t\tjUtility.getGridData();\n\t\t\t\t\tjUtility.DOM.resetRowMenu();\n\t\t\t\t}\n\t\t\t}, // end fn\n\n\t\t\t/**  **  **  **  **  **  **  **  **  **\n\t\t\t *   update\n\t\t\t *\n\t\t\t *  @response (obj) The JSON object\n\t\t\t *  returned by the ajax request\n\t\t\t *\n\t\t\t *  processes the result of the AJAX\n\t\t\t *  request\n\t\t\t **  **  **  **  **  **  **  **  **  **/\n\t\t\tupdate : function(response) {\n\t\t\t\tjApp.log('6.6 data received. processing...')\n\n        jUtility.DOM.setupGridHeaders();\n\n        $('.table-cell.no-data').remove();\n\n        if ( jUtility.isResponseErrors(response) ) {\n          return jUtility.DOM.dataErrorHandler();\n        }\n\n        if ($.isEmptyObject(response)) {\n          return jUtility.DOM.dataEmptyHandler();\n        }\n\n\t\t\t\t// init vars\n\t\t\t\tvar\tappendTH = false,\n\t\t\t\t\ttheaders,\n\t\t\t\t\ttfilters,\n\t\t\t\t\tbtn,\n\t\t\t\t\tisActive,\n          self = jApp.aG();\n\n\t\t\t\t// detect changes in data;\n\t\t\t\tself.dataGrid.delta = ( !$.isEmptyObject(self.dataGrid.data) ) ?\n\t\t\t\t\tjUtility.deltaData(self.dataGrid.data,response) :\n\t\t\t\t\tresponse;\n\n\t\t\t\t// merge the changes into self.dataGrid.data\n\t\t\t\tif (!!self.dataGrid.delta) {\n\t\t\t\t\tself.dataGrid.data = response;\n\t\t\t\t} else { // abort if no changes in the data\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t// remove all rows, if needed\n\t\t\t\tif (self.options.removeAllRows) {\n\t\t\t\t\tjUtility.DOM.removeRows(true);\n\t\t\t\t}\n\n\t\t\t\t// show the preloader, then update the contents\n\t\t\t\tjUtility.DOM.togglePreloader();\n\n\t\t\t\t// update the DOM\n\t\t\t\tjUtility.DOM.updateGrid();\n\n\t\t\t\t// remove the rows that may have been removed from the data\n\t\t\t\tjUtility.DOM.removeRows();\n\t\t\t\tjUtility.buildMenus();\n\t\t\t\tjUtility.DOM.togglePreloader(true);\n\t\t\t\tself.options.removeAllRows = false;\n\n\t\t\t\tif (!self.loaded) {\n\t\t\t\t\t// custom init fn\n\t\t\t\t\tif ( self.fn.customInit && typeof self.fn.customInit === 'function' ) {\n\t\t\t\t\t\tself.fn.customInit();\n\t\t\t\t\t}\n\t\t\t\t\tself.loaded = true;\n\t\t\t\t}\n\n\t\t\t\t// adjust column widths\n\t\t\t\tjUtility.DOM.updateColWidths();\n\n        // adjust permissions\n        jUtility.callback.getPermissions( jApp.aG().permissions );\n\n        // perform sort if needed\n        jUtility.DOM.sortByCol();\n\n\t\t\t}, // end fn\n\n      /**\n       * Update panel header from row data\n       * @method function\n       * @param  {[type]} response [description]\n       * @return {[type]}          [description]\n       */\n\t\t\tupdateDOMFromRowData : function(response) {\n\t\t\t\t\tvar data = response,\n              self = jApp.aG();\n\t\t\t\t\tself.rowData = response;\n\t\t\t\t\t//jUtility.DOM.updatePanelHeader( data[ self.options.columnFriendly ] );\n\t\t\t}, // end fn\n\n      /**\n       * Check out row\n       * @method function\n       * @param  {[type]} response [description]\n       * @return {[type]}          [description]\n       */\n\t\t\tcheckout : function(response) {\n\t\t\t\tif ( !jUtility.isResponseErrors(response) ) {\n          jUtility.msg.success('Record checked out for editing.');\n          jUtility.setupFormContainer();\n          jUtility.getCheckedOutRecords();\n        }\n\t\t\t}, //end fn\n\n      /**\n       * Check in row\n       * @method function\n       * @return {[type]} [description]\n       */\n\t\t\tcheckin : function(response) {\n        if ( jUtility.isResponseErrors(response) ) {\n          jUtility.msg.warning( jUtility.getErrorMessage(response) )\n        }\n        jUtility.getCheckedOutRecords();\n        jUtility.closeCurrentForm();\n\t\t\t}, //end fn\n\n      /**\n       * Display response errors\n       * @method function\n       * @param  {[type]} response [description]\n       * @return {[type]}          [description]\n       */\n      displayResponseErrors : function(response) {\n        if ( jUtility.isResponseErrors(response) ) {\n          jUtility.msg.clear();\n          jUtility.msg.error( jUtility.getErrorMessage(response) )\n        }\n      }, //end fn\n\n      /**\n       * Get Checked out records\n       * @method function\n       * @param  {[type]} response [description]\n       * @return {[type]}          [description]\n       */\n\t\t\tgetCheckedOutRecords : function(response) {\n        /**\n         * To do\n         */\n\n        var $tr,\n            $i = $('<i/>', { class : 'fa fa-lock fa-fw checkedOut'}),\n            self = jApp.aG();\n\n\t\t\t\tself.DOM.$grid.find('.chk_cid').parent().removeClass('disabled').show();\n\t\t\t\tself.DOM.$grid.find('.rowMenu-container').removeClass('disabled');\n\t\t\t\tself.DOM.$grid.find('.checkedOut').remove();\n\n\t\t\t\t_.each(response, function(o,key) {\n\n\t\t\t\t\tif (!!o && !!o.lockable_id) {\n\t\t\t\t\t\t$tr = $('.table-row[data-identifier=\"' + o.lockable_id + '\"]');\n\n\t\t\t\t\t\t$tr.find('.chk_cid').parent().addClass('disabled').hide()\n\t\t\t\t\t\t\t.closest('.table-cell').append( $('<span/>',{class : 'btn btn-default btn-danger pull-right checkedOut'})\n              .html($i.prop('outerHTML')).clone().attr('title','Locked By ' + o.user.person.name));\n\t\t\t\t\t\t$tr.find('.rowMenu-container').addClass('disabled').find('.rowMenu.expand').removeClass('expand');\n\t\t\t\t\t}\n\t\t\t\t});\n\n      }, //end fn\n\n\t\t\t/**\n\t\t\t * Process the grid link tables\n\t\t\t * @method function\n\t\t\t * @param  {[type]} colParams [description]\n\t\t\t * @return {[type]}           [description]\n\t\t\t */\n\t\t\tlinkTables : function( colParams ) {\n        var self = jApp.aG();\n\n\t\t\t\t// add the colParams to the linkTable store\n\t\t\t\tself.linkTables = _.union( self.linkTables, colParams );\n\n\t\t\t\t// count the number of completed requests\n\t\t\t\tif ( !self.linkTableRequestsComplete ) {\n\t\t\t\t\tself.linkTableRequestsComplete = 1;\n\t\t\t\t} else {\n\t\t\t\t\tself.linkTableRequestsComplete++;\n\t\t\t\t}\n\n\t\t\t\t// once all linkTable requests are complete, apply the updates to the forms\n\t\t\t\tif (self.linkTableRequestsComplete == self.options.linkTables.length) {\n\t\t\t\t\t// update the edit form\n\t\t\t\t\tself.forms.oEditFrm.options.colParamsAdd = self.linkTables;\n\t\t\t\t\tself.forms.oEditFrm.fn.processColParams();\n\t\t\t\t\tself.forms.oEditFrm.fn.processBtns();\n\n\t\t\t\t\t// update the new form\n\t\t\t\t\tself.forms.oNewFrm.options.colParamsAdd = self.linkTables;\n\t\t\t\t\tself.forms.oNewFrm.fn.processColParams();\n\t\t\t\t\tself.forms.oNewFrm.fn.processBtns();\n\t\t\t\t}\n\n\t\t\t}, //end fn\n\n      /**\n       * Show or hide controls based on permissions.\n       * @method function\n       * @param  {[type]} response [description]\n       * @return {[type]}          [description]\n       */\n      getPermissions : function(response) {\n\n        jApp.log( 'Setting activeGrid permissions');\n        jApp.activeGrid.permissions = response;\n\n        jApp.log( jApp.aG().permissions );\n\n        _.each(response, function(value, key) {\n          jApp.log( '12.1 Setting Permission For ' + key + ' to ' + value )\n          if (value !== 1) {\n            $('[data-permission=' + key + ']').remove();\n          }\n        })\n      }, // end fn\n\n\t\t} // end callback defs\n\n  }\n\n  // add it to the global scope\n  window.jUtility = jUtility;\n\n})(window, $, jApp);\n"," /**\n  *  jForm.class.js - Custom Form JS class\n  *\n  *  Defines the properties and methods of the\n  *  custom form class.\n  *\n  *  Jeremy Bloomstrom | jeremy@in.genio.us\n  *  Released under the MIT license\n  *\n  *  Prereqs: \tjQuery, underscore.js, jStorage.js\n  */\n\n // jquery function for clearing a form of all its values\n $.fn.clearForm = function() {\n  return this.each(function() {\n    if ( !!$(this).prop('disabled') || !!$(this).prop('readonly') ) return false;\n\n\tvar type = this.type, tag = this.tagName.toLowerCase();\n    if (tag == 'form')\n      return $(':input',this).clearForm();\n    if (type == 'text' || type == 'password' || tag == 'textarea')\n      this.value = '';\n    else if (type == 'checkbox' || type == 'radio')\n      this.checked = false;\n    else if (tag == 'select')\n       this.selectedIndex = (!!$(this).prop('multiple')) ? -1 : 0;\n\t$(this).psiblings('.form-control-feedback').removeClass('glyphicon-remove').removeClass('glyphicon-ok').hide();\n\t$(this).closest('.form_element').removeClass('has-error').removeClass('has-success');\n  });\n};\n\n// javascript closure\n;(function( window, $, jQuery ) {\n\n\t'use strict';\n\n\tvar jForm = function( options ) {\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   VARS\n \t\t **  **  **  **  **  **  **  **  **  **/\n\n\t\t// alias this\n\t\tvar self = this;\n\n\t\tthis.$frm = false;\n\t\tthis.store = $.jStorage;\n    this.submitted = false;\n\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n\t\t *   DEFAULT OPTIONS\n\t\t *\n\t\t *  Set the default options for the\n\t\t *  instance here. Any values specified\n\t\t *  at runtime will overwrite these\n\t\t *  values.\n\t\t **  **  **  **  **  **  **  **  **  **/\n\n\t\tthis.options = {\n\t\t\t// form setup\n\t\t\tmodel : '',\n      table : '',\n      atts : {\t\t\t\t\t\t// form html attributes\n\t\t\t\t'method' : 'POST',\n        'action' : '',\n\t\t\t\t'role' : 'form',\n\t\t\t\t'onSubmit' : 'return false',\n\t\t\t\t'name' : false,\n        'enctype' : 'multipart/form-data'\n\t\t\t},\n\t\t\thiddenElms : false,\n\t\t\twrap : '',\n\t\t\tbtns : false,\n\t\t\tfieldset : false,\n\t\t\tdisabledElements : [],\n\t\t\t/* colParams - \taccept, alt, autocomplete, autofocus, checked, cols,\n\t\t\t\t\t\t\tdisabled, form, formaction, formenctype, formmethod,\n\t\t\t\t\t\t\tformnovalidate, formtarget, height, id, list, max,\n\t\t\t\t\t\t\tmaxlength, min, multiple, name, pattern, placeholder,\n\t\t\t\t\t\t\treadonly, required, rows, size, src, step, type, data-validType,\n\t\t\t\t\t\t\tvalue, width, wrap, onClick, onChange, class, _labels,\n\t\t\t\t\t\t\t_options, _firstlabel, _firstoption, _label, _enabled,\n\t\t\t\t\t\t\tviewName, data-ordering, fieldset, _optionsSource, _labelsSource,\n\t\t\t\t\t\t\t_optionsFilter, _linkedElmID, _linkedElmOptions,\n\t\t\t\t\t\t\t_linkedElmLabels, _linkedElmFilterCol\n\t\t\t*/\n\t\t\tcolParams : {},\n\t\t\tcolParamsAdd : [], // storage container for additional colParams such as from linkTables\n\t\t\tloadExternal : true, // load external colParams e.g. from a db\n\t\t\tttl : 30, // TTL for external data (mins)\n\t\t\ttableFriendly : '', // friendly name of table e.g. Application\n\t\t\tlayout : 'standard' // standard (three-column layout) | single (one-col layout)\n\t\t};\n\n\t\t// set the runtime values for the options\n\t\t$.extend(true, this.options,options);\n\n    // set up the callback functions\n    $.extend(true, this.callback, options.callback);\n\n    // alias for attributes container\n\t\tvar oAtts = this.options.atts;\n\n\t\t// set default values\n\t\tif (!this.options.fieldset) {\n\t\t\tthis.options.fieldset = {\n\t\t\t\t'legend' : self.options.tableFriendly + ' Details',\n\t\t\t\t'id' : 'fs_details'\n\t\t\t};\n\t\t}\n\n\t\t// set the default buttons, if not present\n\t\tif (!this.options.btns) {\n\t\t\tthis.options.btns = [\n        { type : 'button', class : 'btn btn-primary btn-formMenu',  id : 'btn_form_menu_heading', value : '<i class=\"fa fa-fw fa-bars\"></i>',},\n\t\t\t\t{ type : 'button', class : 'btn btn-primary btn-go', \t      id : 'btn_go',                value : '<i class=\"fa fa-fw fa-floppy-o\"></i> Save &amp; Close' },\n\t\t\t\t{ type : 'button', class : 'btn btn-primary btn-reset',     id : 'btn_reset',             value : '<i class=\"fa fa-fw fa-refresh\"></i> Reset' },\n\t\t\t\t{ type : 'button', class : 'btn btn-primary btn-cancel',    id : 'btn_cancel',            value : '<i class=\"fa fa-fw fa-times\"></i> Cancel' },\n\t\t\t];\n\t\t}\n\n\t\t// set the default name for the form, if not present\n\t\tif (!this.options.atts.name) {\n\t\t\tthis.options.atts.name = 'frm_edit' + this.options.tableFriendly;\n\t\t}\n\n\t\t// set the default hidden elements if not present\n\t\tif (!this.options.hiddenElms) {\n\t\t\t// setup the hidden elements\n\t\t\tthis.options.hiddenElms = [\n\t\t\t\t{ atts : { 'type' : 'hidden', 'readonly' : 'readonly', 'name' : '_method', 'value' : options.atts.method, 'data-static' : true } },\n\t\t\t];\n\t\t}\n\n\t\t// container for jQuery DOM elements\n\t\tthis.DOM = {\n\t\t\t$prnt : $('<div/>'),\n\t\t\t$frm : false,\n\t\t\t$fs : false\n\t\t};\n\n\t\tthis.oInpts = {};\n\t\tthis.DOM.$Inpts = $('<div/>');\n\t\tthis.rowData = {};\n\t\tthis.readonlyFields = [];\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n\t\t *   HTML TEMPLATES\n\t\t *\n\t\t *  Place large html templates here\n\t\t *  as functions. These are rendered with\n\t\t *  the method self.fn.render.\n\t\t *\n\t\t *  Parameters of the form {@ParamName}\n\t\t *  are expanded by the render function\n\t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.html = {\n\n\t\t};// end html templates\n\n\t\t// create shortcut to the form\n\t\tthis.$ = function() {\n\t\t\treturn this.DOM.$frm;\n\t\t}\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   FUNCTION DEFS\n \t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.fn = {\n\t\t\t_init : function() {\n\t\t\t\tvar inpt, hdn;\n\n\t\t\t\t// create the form\n\t\t\t\tself.DOM.$frm = $('<form/>', oAtts )\n\t\t\t\t\t.wrap(self.options.wrap);\n\n        // add the fieldset if we are not loading external col params\n        if ( !self.options.loadExternal ) {\n          self.DOM.$frm\n           .append(  $('<fieldset/>', self.options.fieldset)\n\t\t\t\t\t      .append( $('<legend/>').html( self.options.fieldset.legend ) )\n          );\n        }\n\n        // add the inputs to the DOM\n        self.DOM.$frm.append( self.DOM.$Inpts )\n\n\n\t\t\t\t// append the form to the parent container\n\t\t\t\tself.DOM.$prnt.append( ( !!self.DOM.$frm.parents().length ) ?\n\t\t\t\t\t  self.DOM.$frm.parents().last() :\n\t\t\t\t\t  self.DOM.$frm\n\t\t\t\t);\n\n\t\t\t\t// create and append the hidden elements\n\t\t\t\t_.each( self.options.hiddenElms, function( o, key )  {\n          o.form = self;\n          inpt = new jInput( o );\n\t\t\t\t\tself.oInpts[ o.atts.name ] = inpt ;\n\t\t\t\t\tself.DOM.$Inpts.append( inpt.fn.handle() );\n\t\t\t\t\tif (o.atts.readonly === 'readonly') {\n\t\t\t\t\t\tself.readonlyFields.push( o.atts.name );\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// get the colParams\n\t\t\t\tif ( !!self.options.loadExternal ) { // get the colparams from an external json source\n\t\t\t\t\tself.fn.getColParams();\n\t\t\t\t} else { // colparams must be specified locally, so process them\n\t\t\t\t\tself.fn.processColParams();\n\t\t\t\t\tself.fn.processBtns();\n\t\t\t\t}\n\t\t\t}, // end fn\n\n      /**\n       * Is the form field an array input\n       * @param  {[type]} oInpt [description]\n       * @return {[type]}       [description]\n       */\n      isArrayFormField : function( oInpt ) {\n        return ( !!oInpt.arrayField );\n      }, //end fn\n\n      /**\n       * Is the form field a tokens field\n       * @param  {[type]} value [description]\n       * @param  {[type]} oInpt [description]\n       * @return {[type]}       [description]\n       */\n      isTokensFormField : function( oInpt, value ) {\n        return ( typeof value === 'object' && !!_.pluck(value,'name').length && typeof oInpt.$().attr('data-tokens') !== 'undefined'  );\n      }, // end fn\n\n      /**\n       * Populate and array field with the form data\n       * @return {[type]} [description]\n       */\n      populateArrayFormData : function( oInpt, data ) {\n        jUtility.arrayRemoveAllRows( oInpt.$() );\n        jApp.log('------Array Data------' );\n        jApp.log(data);\n\n        // iterate through the data rows and populate the form\n        _.each( data, function( obj ) {\n\n          // create a row in the array field table\n          jApp.log('--------Adding Row To The Array ---------');\n          jApp.log( oInpt.$() )\n          jUtility.arrayAddRowFromContainer( oInpt.$(), obj );\n\n        });\n\n        // boot the form\n        jUtility.formBootup();\n\n      }, // end fn\n\n      /**\n       * Get the form data as a FormData object\n       * @method function\n       * @return {[type]} [description]\n       */\n      getFormData : function() {\n        // var data = new FormData;\n        //\n        // _.each( self.$().serializeObject(), function(value,name) {\n        //   data.append(name, value);\n        // });\n        //\n        // self.$().find('input[type=file]').each( function(i, elm) {\n        //     jApp.log('adding files to the FormData object');\n        //\n        //     jApp.log( elm.files );\n        //\n        //     _.each( elm.files, function( o ) {\n        //       jApp.log( 'Adding ' + elm.name );\n        //       jApp.log( o );\n        //\n        //       data.append( elm.name, o );\n        //     });\n        // })\n\n        return self.$().serialize();\n\n      }, // end fn\n\n      /**\n       * Get the DOM handle of the form\n       * @return {[type]} [description]\n       */\n\t\t\thandle : function() {\n\t\t\t\treturn self.DOM.$prnt;\n\t\t\t}, // end fn\n\n      /**\n       * Get the form fieldset\n       * @return {[type]} [description]\n       */\n\t\t\t$fieldset : function() {\n\t\t\t\treturn self.DOM.$frm.find('fieldset');\n\t\t\t}, //end fn\n\n      /**\n       * Get form input by id\n       * @param  {[type]} id [description]\n       * @return {[type]}    [description]\n       */\n\t\t\tgetElmById : function(id) {\n\t\t\t\tid = id.replace('#','');\n\n\t\t\t\treturn self.oInpts[id];\n\t\t\t},\n\n      /**\n       * Render the form html\n       * @param  {[type]} params [description]\n       * @return {[type]}        [description]\n       */\n\t\t\trender : function(params) {\n\t\t\t\tvar tmp = self.DOM.$prnt.prop('outerHTML');\n\n\t\t\t\tif (!!params && !$.isEmptyObject(params)) {\n\t\t\t\t\tfor (key in params ) {\n\t\t\t\t\t\tptrn = new RegExp( '\\{@' + key + '\\}', 'gi' );\n\t\t\t\t\t\ttmp = tmp.replace(ptrn, params[key] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn tmp;\n\t\t\t}, //end fn\n\n      /**\n       * Add inputs to the form\n       * @param  {[type]} arr [description]\n       * @return {[type]}     [description]\n       */\n\t\t\taddElements : function(arr) {\n\t\t\t\tself.options.colParamsAdd = _.union( self.options.colParamsAdd, arr );\n\t\t\t}, //end fn\n\n      /**\n       * Get external column parameters - deprecated\n       * @return {[type]} [description]\n       */\n\t\t\tgetColParams : function() {\n        jApp.log('A. Getting external colparams');\n        self.options.colParams = jApp.colparams[ self.options.model ];\n        jApp.log(self.options.colParams);\n\n        //process the colParams;\n\t\t\t\tself.fn.processExternalColParams();\n\n\t\t\t\t//add the buttons\n\t\t\t\tself.fn.processBtns();\n\n\t\t\t}, //end fn\n\n      /**\n       * Pre-Filter column parameters to remove invalid entries\n       * @param  {[type]} unfilteredParams [description]\n       * @return {[type]}                  [description]\n       */\n      preFilterColParams : function( unfilteredParams ) {\n        return _.filter( unfilteredParams, function(o) {\n          if (o == null) return false;\n          if (typeof o._enabled == 'undefined') return false;\n          if (o._enabled == false) return false;\n          if ( _.indexOf( self.options.disabledElements, o.name ) !== -1 ) return false;\n\n          return _.omit(o, function(value, key, object ) {\n            return ( value == null || value == 'null' || value.toString().toLowerCase() == '__off__' || +value == 0 || value == false  );\n          });\n\n        });\n      }, // end fn\n\n      /**\n       * Get row data for the form\n       * @param  {[type]}   url      [description]\n       * @param  {Function} callback [description]\n       * @return {[type]}            [description]\n       */\n\t\t\tgetRowData : function( url, callback ) {\n\n        $('.panel-overlay').show();\n\n\t\t\t\t$.getJSON( url\n\t\t\t\t\t, {}\n\t\t\t\t\t, self.callback.getRowData\n\t\t\t\t).fail( function() {\n\t\t\t\t\tconsole.error('There was a problem getting the row data');\n\t\t\t\t}).always( function(response) {\n\t\t\t\t\tif (typeof callback !== 'undefined' && typeof callback === 'function' ) {\n\t\t\t\t\t\tcallback(response);\n\t\t\t\t\t} else if ( typeof callback !== 'undefined' && typeof callback === 'string' && typeof self.fn[callback] !== 'undefined' && typeof self.fn[callback] === 'function' ) {\n\t\t\t\t\t\tself.fn[callback](response);\n\t\t\t\t\t}\n\t\t\t\t\t//console.log('Got the row data');\n\t\t\t\t\t//console.log(response);\n\t\t\t\t})\n\t\t\t}, //end fn\n\n      /**\n       * Process externally loaded column parameters\n       * @method function\n       * @return {[type]} [description]\n       */\n      processExternalColParams : function() {\n        _.each( self.options.colParams, function(o, index) {\n          self.fn.processFieldset(o, index);\n        });\n      }, // end fn\n\n      /**\n       * Process fieldset\n       * @method function\n       * @param  {[type]} o     [description]\n       * @param  {[type]} index [description]\n       * @return {[type]}       [description]\n       */\n      processFieldset : function( o, index ) {\n\n        jApp.log('A. Processing the fieldset');\n        jApp.log(o);\n        //create the fieldset\n        var $fs = $('<div/>', {\n          class : o.class\n        });\n\n        // add the label, if necessary\n        if (o.label != null) {\n          $fs.append( $('<legend/>').html(o.label) );\n        }\n\n        // add the helptext if necessary\n        if (o.helpText != null) {\n          $fs.append( $('<div/>', { class : 'alert alert-info' } ).html(o.helpText) )\n        }\n\n        // add the fields\n        _.each( self.fn.preFilterColParams( o.fields ), function(oo) {\n          self.fn.processField(oo, $fs);\n        });\n\n        // add the fieldset to the DOM\n        self.DOM.$Inpts.append( $fs )\n\n      }, // end fn\n\n      /**\n       * Populate a row with the field inputs\n       * @method function\n       * @param  {[type]} params [description]\n       * @return {[type]}        [description]\n       */\n      populateFieldRow : function(params, index, data) {\n        var $td,\n            $btn_add = $('<button/>', {type : 'button', class : 'btn btn-primary btn-array-add'}).html( '<i class=\"fa fa-fw fa-plus\"></i>' ),\n            $btn_remove = $('<button/>', {type : 'button', class : 'btn btn-danger btn-array-remove'}).html( '<i class=\"fa fa-fw fa-trash-o\"></i>' ),\n            index = (typeof index === 'undefined') ? 0 : index;\n\n        jApp.log('---------Array Row Data---------');\n        jApp.log(data);\n\n        return $('<tr/>').append(\n          _.map( params.fields, function( oo, ii ) {\n              var $td = $('<td/>'),\n                  value = ( ii == 0 ) ?\n                    data.id :\n                    data.pivot[ oo.name.replace('[]','') ] || null  ;\n\n              self.fn.processField( oo, $td, value );\n              return $td;\n          })\n\n        ).append(\n          [\n              $('<td/>').append([$btn_remove, (index === 0) ? $btn_add : null])\n          ]\n        );\n      }, // end fn\n\n      /**\n       * Process form field from parameters\n       * @method function\n       * @param  {[type]} params [description]\n       * @param  {[type]} target [description]\n       * @return {[type]}        [description]\n       */\n      processField : function( params, target, value ) {\n        var inpt;\n\n        jApp.log('B. Processing Field')\n        jApp.log(params);\n\n        // check if the type is array\n        //if (params.type == 'array') return self.fn.processArrayField(params, target);\n\n        inpt = new jInput( { atts : params, form : self} );\n        self.oInpts[ params.name ] = inpt;\n        inpt.fn.val( value );\n        target.append( inpt.fn.handle() );\n        if (params.readonly === 'readonly') self.readonlyFields.push(params.name);\n\n      }, // end fn\n\n      /**\n       * Process externally loaded column parameters - deprecated\n       * @return {[type]} [description]\n       */\n\t\t\tprocessColParams : function() {\n\t\t\t\tself.DOM.$Inpts.find('.fs, .panel-heading').remove();\n\n\t\t\t\tif (self.options.layout === 'standard') {\n\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs col-lg-4' }) )\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs col-lg-4' }) )\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs col-lg-4' }) )\n\t\t\t\t} else {\n\t\t\t\t\tself.DOM.$Inpts.append( $('<div/>', { 'class' : 'fs' }) )\n\t\t\t\t}\n\n\t\t\t\t// process static or dynamically loaded colParams\n\t\t\t\t_.each( _.sortBy( self.options.colParams, function( o ) { return (!isNaN(o['data-ordering'])) ? +o['data-ordering'] : 1000 } ) , function( o, key ) {\n          var inpt, eq;\n\t\t\t\t\tif (!!o && !!o.name && _.indexOf( self.options.disabledElements, o.name ) === -1 ) {\n\n\t\t\t\t\t\teq = ( !!o['data-fieldset'] ) ? Number( o['data-fieldset'] )-1 : 0;\n            inpt = new jInput( { atts : o, form : self } );\n\t\t\t\t\t\tself.oInpts[ o.name ] = inpt ;\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq( (self.options.layout === 'standard') ? eq : 0 ).append( inpt.fn.handle() );\n\t\t\t\t\t\tif (o.readonly === 'readonly') {\n\t\t\t\t\t\t\tself.readonlyFields.push( o.name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t//console.log('Now adding the colParamsAdd : ' + self.options.colParamsAdd.length);\n\t\t\t\t// process additional colParams that may have come from linkTables\n\t\t\t\t_.each( _.sortBy( self.options.colParamsAdd, function( o ) { return (!isNaN(o['data-ordering'])) ? +o['data-ordering'] : 1000 } ) , function( o, key ) {\n\t\t\t\t\tvar inpt, eq;\n\t\t\t\t\tif (!!o && !!o.name && _.indexOf( self.options.disabledElements, o.name ) === -1 ) {\n\n\t\t\t\t\t\teq = ( !!o['data-fieldset'] ) ? Number( o['data-fieldset'] )-1 : 0;\n            inpt = new jInput( { atts : o, form : self } );\n\t\t\t\t\t\tself.oInpts[ o.name ] = inpt ;\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq( (self.options.layout === 'standard') ? eq : 0 ).append( inpt.fn.handle() );\n\t\t\t\t\t\tif (o.readonly === 'readonly') {\n\t\t\t\t\t\t\tself.readonlyFields.push( o.name );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (self.options.layout === 'standard') {\n\t\t\t\t\t// set fieldset classes\n\t\t\t\t\tif ( self.DOM.$Inpts.find('.fs').eq(1).find('div').length === 0  ) {\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq(1).removeClass('col-lg-4').end()\n\t\t\t\t\t\t\t\t\t\t\t\t   .eq(0).removeClass('col-lg-4').addClass('col-lg-8');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.DOM.$Inpts.find('.fs').eq(1).addClass('col-lg-4').end()\n\t\t\t\t\t\t\t\t\t\t\t\t   .eq(0).addClass('col-lg-4').removeClass('col-lg-8');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// handle linked Elements\n\t\t\t\tself.$().find('[_linkedElmID]').off('change.linkedelm').on('change.linkedelm', function() {\n\t\t\t\t\t//console.log( 'Setting up linked Element' );\n\t\t\t\t\tvar This = $(this),\n\t\t\t\t\t\t$col = This.attr('_linkedElmFilterCol'),\n\t\t\t\t\t\t$id\t = This.val(),\n\t\t\t\t\t\t$labels = This.attr('_linkedElmLabels'),\n\t\t\t\t\t\t$options = This.attr('_linkedElmOptions'),\n\t\t\t\t\t\toElm = self.fn.getElmById( This.attr('_linkedElmID') ),\n\t\t\t\t\t\tatts;\n\n\t\t\t\t\t//console.log(This.attr('name'));\n\t\t\t\t\t//console.log($id);\n\t\t\t\t\t//console.log(oElm);\n\n\t\t\t\t\t// set data to always expire;\n\t\t\t\t\toElm.fn.setTTL(-1);\n\t\t\t\t\toElm.options.hideIfNoOptions = true;\n\t\t\t\t\toElm.options.cache = false;\n\n\t\t\t\t\tif (typeof $id === 'string') { $id = \"'\" + $id + \"'\" }\n\t\t\t\t\tif (typeof $id === 'object') { $id = _.map($id, function(elm) { return \"'\" + elm + \"'\" }) }\n\n\t\t\t\t\tatts = {\n\t\t\t\t\t\t'_optionsFilter' : $col + ' in (' + $id + ')',\n\t\t\t\t\t\t'_labelsSource' : $labels,\n\t\t\t\t\t\t'_optionsSource' : $options,\n\t\t\t\t\t\t'getExtData' : true,\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( !oElm.fn.attr('multiple') || oElm.fn.attr('multiple') != 'multiple' ) {\n\t\t\t\t\t\tatts = _.extend( atts, { '_firstoption' : 0, '_firstlabel' : '-Other-' } );\n\t\t\t\t\t}\n\n\t\t\t\t\toElm.fn.attr( atts );\n\n\t\t\t\t\toElm.fn.initSelectOptions(true);\n\n\t\t\t\t}).change();\n\n\t\t\t}, //end fn\n\n      /**\n       * Add the form buttons\n       * @method function\n       * @return {[type]} [description]\n       */\n\t\t\tprocessBtns : function() {\n\t\t\t\tvar btnPanel = $('<div/>', { 'class' : 'panel-btns header' } ),\n            btnFooter = $('<div/>', { 'class' : 'panel-btns footer' } );\n\n\t\t\t\t_.each( self.options.btns, function( o, key ) {\n          if (o.type === 'button') {\n            var inpt = $('<button/>',o).html(o.value);\n          } else {\n            var inpt = $('<input/>', o);\n          }\n\n\t\t\t\t\tbtnPanel.append( inpt );\n          btnFooter.append( inpt.clone() );\n\t\t\t\t});\n\n        self.DOM.$Inpts.append([btnPanel, btnFooter]);\n\t\t\t}, //end fn\n\n      /**\n       * Submit the form\n       * @return {[type]} [description]\n       */\n\t\t\tsubmit : function() {\n\n        self.fn.toggleSubmitted();\n\n        $.ajax({\n          //dataType : 'json',\n          method : 'POST',\n          url : self.options.atts.action,\n          data : self.$().serialize(),\n          success : self.callback.submit,\n        }).done( self.fn.toggleSubmitted );\n\n      }, //end fn\n\n      /**\n       * Toggle the submited flag of the form\n       * @return {[type]} [description]\n       */\n      toggleSubmitted : function() {\n        if (!self.submitted) {\n          self.submitted = true;\n          //self.oElms['btn_go'].fn.disable();\n        } else {\n          self.submitted = false;\n          //self.oElms['btn_go'].fn.enable();\n        }\n      }\n\n\t\t}; // end fns\n\n    // alias the submit function\n    this.submit = this.fn.submit;\n\n\t\tthis.callback = {\n\n      /**\n       * Get row data callback\n       * @param  {[type]} response [description]\n       * @return {[type]}          [description]\n       */\n\t\t\tgetRowData : function(response) {\n        var oInpt, $inpt;\n\n        if (typeof response[0] !== 'undefined') {\n          response = response[0];\n        }\n\n        self.rowData = response;\n\n\t\t\t\tself.DOM.$frm.clearForm();\n\n\t\t\t\t_.each( response, function( value, key ) {\n          jApp.log('Setting up input ' + key);\n          jApp.log(value);\n\n          if ( typeof self.oInpts[key] === 'undefined' || typeof self.oInpts[key].$ !== 'function' ) {\n            jApp.log('No input associated with this key.');\n            return false;\n          }\n\n          oInpt = self.oInpts[key];\n          $inpt = oInpt.$();\n\n          // enable the input\n          oInpt.fn.enable();\n\n\t\t\t\t\tif (value != null && value.indexOf('|') !== -1 && key !== '_labelssource' && key !== '_optionssource') {\n\t\t\t\t\t\tvalue = value.split('|');\n\t\t\t\t\t}\n\n          if ( self.fn.isArrayFormField( oInpt )  ) { // handle an array input\n            jApp.log('-----------------Populating Array Form Field-----------------------')\n            self.fn.populateArrayFormData( oInpt, value );\n          } else if ( self.fn.isTokensFormField( oInpt, value ) ) {\n            $inpt.tokenfield('setTokens', _.pluck(value,'name'));\n          }\n          else if (typeof value === 'object' && !!_.pluck(value,'id').length) {\n            oInpt.fn.val(_.pluck(value,'id'));\n          } else {\n            oInpt.fn.val(value);\n          }\n\t\t\t\t\tif (oInpt.options.atts.type === 'select') {\n\t\t\t\t\t\t$inpt.multiselect('refresh').change();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\tself.DOM.$frm.find('.bsms').multiselect('refresh');\n\t\t\t\t$('.panel-overlay').hide();\n\t\t\t},\n\n      // do something with the response\n      submit : function(response) {\n        console.log(response);\n      }\n\t\t}; // end fns\n\n\t\t// initialize\n\t\tthis.fn._init();\n\n\t} // end jForm declaration\n\n\twindow.jForm = jForm; // add to global scope\n\n})(window, $, jQuery);\n","/**  **  **  **  **  **  **  **  **  **  **  **  **  **  **  **  **\n *\n *  jInput.class.js - Custom Form Input JS class\n *\n *  Defines the properties and methods of the\n *  custom input class.\n *\n *  Jeremy Bloomstrom | jeremy@in.genio.us\n *\n *  Created: \t\t4/20/15\n *  Last Updated: \t4/20/15\n *\n *  Prereqs: \tjQuery, underscore.js, jStorage.js\n *\n *  Changelog:\n *   4-20-15\tCreated the jInput class\n *\n *   4-30-15\tAdded the feedback icon container and help block container\n */\n\n;(function( window, $) {\n\n\t'use strict';\n\n\tvar jInput = function( options ) {\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   VARS\n \t\t **  **  **  **  **  **  **  **  **  **/\n\n\t\t// alias this\n\t\tvar self = this;\n\t\tthis.store = $.jStorage;\n\t\tthis.readonly = false;\n\t\tthis.form = options.form || options.atts.form || {};\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n\t\t *   DEFAULT OPTIONS\n\t\t *\n\t\t *  Set the default options for the\n\t\t *  instance here. Any values specified\n\t\t *  at runtime will overwrite these\n\t\t *  values.\n\t\t **  **  **  **  **  **  **  **  **  **/\n\n\t\tthis.options = {\n\t\t\t// html attributes\n\t\t\tatts : {\n\t\t\t\t'type' : 'text',\n\t\t\t\t'class' : 'form-control'\n\t\t\t},\n\n\t\t\t// DOM presentation options\n\t\t\tparent : $('<div/>', { 'class' : 'form_element has-feedback'}),\n\n\t\t\t// wrap - wrap the label and input elements with something e.g. <div></div>\n\t\t\twrap : false,\n\n\t\t\t// separator - separate the label and input elements\n\t\t\tseparator : true,\n\n\t\t\t// external data for options, etc.\n\t\t\textData : false,\n\n\t\t\t// TTL for external data (mins)\n\t\t\tttl : 10,\n\n\t\t\t// cache options locally\n\t\t\tcache : true,\n\n\t\t\t// hide if no options\n\t\t\thideIfNoOptions : false,\n\n\t\t\t// multiselect defaults\n\t\t\tbsmsDefaults : {\t\t\t\t\t\t\t\t\t// bootstrap multiselect default options\n\t\t\t\t//buttonContainer : '<div class=\"btn-group\" />',\n\t\t\t\tenableCaseInsensitiveFiltering: true,\n\t\t\t\tincludeSelectAllOption: true,\n\t\t\t\tmaxHeight: 185,\n\t\t\t\tnumberDisplayed: 1,\n\t\t\t\tdropUp: true\n\t\t\t},\n\n\t\t}; // end options\n\n\t\t// set the runtime values for the options\n\t\t$.extend(true,this.options, { atts : { 'id' : this.options.atts.name } }, options);\n\n\t\tthis.readonly = (this.options.atts.readonly === 'readonly') ? true : false;\n\n\t\t// alias to attributes object\n\t\tvar oAtts = self.options.atts;\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   ALLOWABLE ATTRIBUTES BY INPUT TYPE\n \t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.allowedAtts = {\n\t\t\tdate : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\n\t\t\tdatetime : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\n\t\t\t'datetime-local' :\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\n\t\t\tmonth : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\n\t\t\ttime : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\n\t\t\tweek : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','readOnly','required','step','type','value'],\n\n\t\t\turl : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\n\t\t\ttext : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\n\t\t\ttokens :\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\n\t\t\tsearch : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\n\n\t\t\tnumber : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','placeholder','readOnly','required','step','type','value'],\n\t\t\trange : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','max','min','name','step','type','value'],\n\n\t\t\tpassword : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','maxLength','name','pattern','placeholder','readOnly','required','size','type','value'],\n\n\t\t\tbutton : \t\t\t['autofocus','defaultValue','disabled','form','name','type','value'],\n\t\t\treset : \t\t\t['autofocus','defaultValue','disabled','form','name','type','value'],\n\t\t\tsubmit : \t\t\t['autofocus','defaultValue','disabled','form','name','type','value'],\n\n\t\t\tradio : \t\t\t['autofocus','checked','defaultChecked','defaultValue','disabled','form','name','required','type','value'],\n\t\t\tcheckbox : \t\t\t['autofocus','checked','defaultChecked','defaultValue','disabled','form','indeterminate','name','required','type','value'],\n\n\t\t\tfile : \t\t\t\t['accept','autofocus','defaultValue','disabled','files','form','multiple','name','required','type','value'],\n\n\t\t\thidden : \t\t\t['defaultValue','form','name','type','value','readonly'],\n\n\t\t\timage : \t\t\t['alt','autofocus','defaultValue','disabled','form','height','name','src','type','value','width'],\n\n\t\t\tselect : \t\t\t['disabled','form','multiple','name','size','type','value','_linkedElmID','_linkedElmFilterCol','_linkedElmLabels','_linkedElmOptions'],\n\n\t\t\ttextarea : \t\t\t['autofocus','cols','defaultValue','disabled','form','maxLength','name','placeholder','readOnly','required','rows','type','value','wrap'],\n\n\t\t\tcolor : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','name','type','value'],\n\n\t\t\temail : \t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','multiple','name','pattern','placeholder','readOnly','required','size','type','value'],\n\t\t\ttel : \t\t\t\t['autocomplete','autofocus','defaultValue','disabled','form','list','maxLength','pattern','placeholder','readOnly','required','size','type','value'],\n\t\t}; // end allowable attributes\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   ALLOWABLE COLPARAMS BY INPUT TYPE\n \t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.allowedColParams = {\n\t\t\tradio : \t\t\t['_labelssource','_optionssource','_optionsfilter'],\n\t\t\tselect : \t\t\t['_firstoption','_firstlabel','_labelssource','_optionssource','_optionsfilter'],\n\t\t}; // end allowable attributes\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   DISALLOWABLE COLPARAMS BY INPUT TYPE\n \t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.disallowedColParams = {\n\t\t\thidden : \t\t\t['_label','onClick','onChange'],\n\t\t}; // end allowable attributes\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   GLOBAL HTML ATTRIBUTES TO ALLOW\n \t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.globalAtts = [\n\t\t\t'accesskey', 'class', 'contenteditable', 'contextmenu', 'dir',\n\t\t\t'draggable', 'dropzone', 'hidden', 'id', 'lang', 'lang',\n\t\t\t'spellcheck', 'style', 'tabindex', 'title', 'translate',\n\t\t\t'data-validType', 'readonly', 'required', 'onClick', 'onChange', 'form'\n\t\t];\n\n\t\tthis.globalColParams = [\n\t\t\t'_enabled', '_label', 'data-fieldset', 'data-ordering', 'data-validType-template', 'type'\n\t\t];\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   DOM ELEMENTS\n \t\t *\n \t\t *  These placeholders get replaced\n \t\t *  by their jQuery handles\n \t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.DOM = {\n\t\t\t$prnt : false,\n\t\t\t$inpt : false,\n\t\t\t$lbl  : false,\n\t\t};\n\n\t\t/**\n\t\t * [oInpts description]\n\t\t * @type {Array}\n\t\t */\n\t\tthis.oInpts = [];\n\n\t\t/**\n\t\t * Is this an array field\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.arrayField = false;\n\n\t\tthis.$ = function() {\n\t\t\treturn self.DOM.$inpt;\n\t\t};\n\n\t\t/**  **  **  **  **  **  **  **  **  **\n \t\t *   FUNCTION DEFS\n \t\t **  **  **  **  **  **  **  **  **  **/\n\t\tthis.fn = {\n\n\t\t\t_init : function() {\n\t\t\t\tvar $br = (!!self.options.separator) ? $('<br/>') : false;\n\t\t\t\tself.type = oAtts.type;\n\n\t\t\t\t// get the input name\n\t\t\t\tself.fn.resolveInputName();\n\n\t\t\t\t//set the parent element\n\t\t\t\tself.DOM.$prnt = self.options.parent;\n\n\t\t\t\t//create the label\n\t\t\t\tif ( self.type !== 'hidden' ) {\n\t\t\t\t\tself.DOM.$lbl = $('<label/>', { 'for' : oAtts.id } )\n\t\t\t\t\t\t\t\t  .html( oAtts._label )\n\t\t\t\t\t\t\t\t  .wrap( self.options.wrap );\n\t\t\t\t}\n\n\t\t\t\t//create the input element\n\t\t\t\tswitch ( self.type ) {\n\t\t\t\t\tcase 'textarea' :\n\t\t\t\t\t\tself.DOM.$inpt = $('<textarea/>', self.fn.getAtts() ).wrap( self.options.wrap );\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'select' :\n\t\t\t\t\t\tself.DOM.$inpt = $('<select/>', self.fn.getAtts() ).wrap( self.options.wrap );\n\t\t\t\t\t\tself.fn.initSelectOptions();\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'tokens' :\n\t\t\t\t\t\tjApp.log('Tokens Attributes')\n\t\t\t\t\t\tjApp.log($.extend(true, self.fn.getAtts(), { type : 'text', 'data-tokens' : true, 'data-url' : self.fn.getExtUrl('tokens')} ));\n\t\t\t\t\t\tself.DOM.$inpt = $('<input/>', $.extend(true, self.fn.getAtts(), { type : 'text', 'data-tokens' : true, 'data-url' : self.fn.getExtUrl('tokens')} ) );\n\t\t\t\t\t\tself.fn.getExtOptions();\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'radio' :\n\t\t\t\t\tcase 'checkbox' :\n\t\t\t\t\t\toAtts._options = [];\n\t\t\t\t\t\toAtts._labels = [];\n\t\t\t\t\t\t// determine if we are loading options from an external source (db)\n\t\t\t\t\t\tif ( typeof oAtts._labelssource !== 'undefined' && oAtts._labelssource.indexOf('.') !== -1 ) {\n\t\t\t\t\t\t\tself.options.extData = true;\n\t\t\t\t\t\t\tself.fn.getExtOptions();\n\t\t\t\t\t\t} else { // options are loaded locally\n\t\t\t\t\t\t\tif ( typeof oAtts._labelssource !== 'undefined' && typeof oAtts._optionssource !== 'undefined') {\n\t\t\t\t\t\t\t\toAtts._options = oAtts._optionssource.split('|');\n\t\t\t\t\t\t\t\toAtts._labels = ( !!oAtts._labelssource ) ?\n\t\t\t\t\t\t\t\t\toAtts._labelssource.split('|') :\n\t\t\t\t\t\t\t\t\toAtts._optionssource.split('|');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// shift off the first elements of the labels and options arrays and create the first radio element\n\t\t\t\t\t\tvar firstOpt = (typeof oAtts._options[0] !== 'undefined') ? oAtts._options[0] : false;\n\t\t\t\t\t\tvar firstLbl = (typeof oAtts._labels[0] !== 'undefined') ?  oAtts._labels[0] : false;\n\n\t\t\t\t\t\t// set the attributes of the first element\n\t\t\t\t\t\tvar atts = _.extend( self.fn.getAtts(), {\n\t\t\t\t\t\t\t'value' : firstOpt,\n\t\t\t\t\t\t\t'checked' : ( _.indexOf( oAtts.value, firstOpt ) !== -1 ) ? 'checked' : '',\n\t\t\t\t\t\t\t'id' : oAtts.name + '_0'\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// add the first element\n\t\t\t\t\t\tself.DOM.$inpt = $('<label/>', {'class' : 'form-control'})\n\t\t\t\t\t\t\t\t\t\t\t.append( $('<input/>', atts) )\n\t\t\t\t\t\t\t\t\t\t\t.append( $('<div/>', { style : 'width:200px' }).html( firstLbl ) )\n\t\t\t\t\t\t\t\t\t\t\t.wrap('<div class=\"radio-group\"></div>');\n\n\t\t\t\t\t\t//iterate through the remaining options\n\t\t\t\t\t\t_.each( oAtts._options, function( v, k ) {\n\t\t\t\t\t\t\tif ( k>0 ) { // skip the first one\n\t\t\t\t\t\t\t\tvar lbl = oAtts._labels[k];\n\t\t\t\t\t\t\t\tvar atts = _.extend( self.fn.getAtts(), {\n\t\t\t\t\t\t\t\t\t'value' : v,\n\t\t\t\t\t\t\t\t\t'checked' : ( _.indexOf( oAtts.value, v ) !== -1 ) ? 'checked' : false,\n\t\t\t\t\t\t\t\t\t'id' : oAtts.name + '_' + k,\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t// add the radio options\n\t\t\t\t\t\t\t\tself.DOM.$inpt\n\t\t\t\t\t\t\t\t.after( $('<label/>', {'class' : 'form-control'})\n\t\t\t\t\t\t\t\t  .append( $('<input/>', atts) )\n\t\t\t\t\t\t\t\t  .append( $('<div/>', { style : 'width:200px' } ).html( lbl ) )\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}); // end each\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'button' :\n\t\t\t\t\t\tself.DOM.$inpt = $('<button/>', self.fn.getAtts() ).html(oAtts.value).wrap(self.options.wrap );\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'array' :\n\t\t\t\t\t\tself.DOM.$inpt = self.fn.processArrayField( oAtts );\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault :\n\t\t\t\t\t\tself.DOM.$inpt = $('<input/>', self.fn.getAtts() ).wrap( self.options.wrap );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// assign a reference to the jInput object to the DOM element\n\t\t\t\tself.DOM.$inpt.data('jInput',self);\n\n\t\t\t\t//bind change handler to keep this object updated\n\t\t\t\tself.DOM.$inpt.off('change.jInput').on('change.jInput', function() {\n\t\t\t\t\toAtts.value = $(this).val();\n\t\t\t\t});\n\n\t\t\t\t//append the label, if applicable\n\t\t\t\tif (!!self.DOM.$lbl && self.type !== 'hidden' && oAtts._label != null) {\n\t\t\t\t\tself.DOM.$prnt\n\t\t\t\t\t .append(  ( !!self.DOM.$lbl.parents().length ) ? self.DOM.$lbl.parents().last() : self.DOM.$lbl );\n\t\t\t\t}\n\n\t\t\t\t//append the separator, if applicable\n\t\t\t\tif (!!self.options.separator && self.type !== 'hidden' && oAtts._label != null) {\n\t\t\t\t\tself.DOM.$prnt.append( $br.clone() );\n\t\t\t\t}\n\n\t\t\t\t//append the input\n\t\t\t\tself.DOM.$prnt.append( ( !!self.DOM.$inpt.parents().length ) ? self.DOM.$inpt.parents().last() : self.DOM.$inpt );\n\n\t\t\t\t//append the feedback icon container and help block\n\t\t\t\tself.DOM.$prnt.append( $('<i/>', { class : 'form-control-feedback glyphicon', style : 'display:none'}) );\n\t\t\t\tself.DOM.$prnt.append( $('<small/>', { class : 'help-block', style : 'display:none' }));\n\n\t\t\t\t//update reference to $inpt for radio groups\n\t\t\t\tif (self.type === 'radio') {\n\t\t\t\t\tself.DOM.$inpt = self.DOM.$prnt.find( '[name=' + oAtts.name + ']' );\n\t\t\t\t}\n\n\t\t\t\t//place in DOM\n\t\t\t\t//self.DOM.$prnt.appendTo('body');\n\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Resolve the input name\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tresolveInputName : function() {\n\t\t\t\tif ( self.fn.isMultiple() ) {\n\t\t\t\t\toAtts.name = oAtts.name.replace('[]','') + '[]';\n\t\t\t\t}\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Does the input accept multiple values\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tisMultiple : function() {\n\t\t\t\treturn ( oAtts.multiple != null && ( !!oAtts.multiple || oAtts.multiple === 'multiple' ));\n\t\t\t},\n\n\t\t\t/**\n       * Process form field from parameters\n       * @method function\n       * @param  {[type]} params [description]\n       * @param  {[type]} target [description]\n       * @return {[type]}        [description]\n       */\n      processField : function( params, target ) {\n        var inpt;\n\n        jApp.log('B. Processing Field')\n        jApp.log(params);\n\n        // check if the type is array\n        //if (params.type == 'array') return self.fn.processArrayField(params, target);\n\n        inpt = new jInput( { atts : params, form: self.form } );\n        self.oInpts[ params.name ] = inpt;\n        target.append( inpt.fn.handle() );\n        if (params.readonly === 'readonly') self.readonlyFields.push(params.name);\n\n      }, // end fn\n\n\t\t\t/**\n       * Process array field from parameters\n       * @method function\n       * @param  {[type]} params [description]\n       * @param  {[type]} target [description]\n       * @return {[type]}        [description]\n       */\n      processArrayField : function( params ) {\n        var $container = $('<div/>', { class : 'array-field-container alert alert-info' }).data('colparams', params),\n            $table = $('<table/>', { class : 'table' } ),\n            inpt,\n            $tr, $th, $td, inpt, hidNames = [];\n\n\t\t\t\t// Set the arrayField flag\n\t\t\t\tself.arrayField = true;\n\n\t\t\t\t// Grab the first input and put it in the first row\n\t\t\t\tinpt = new jInput( { atts : params.fields.shift() } );\n\t\t\t\tself.oInpts.push(inpt);\n\n\t\t\t\tinpt.fn.handle().off('change.arrayCustom').on('change.arrayCustom', function() {\n\t\t\t\t\tvar selected = $(this).find(':selected').map( function(i, elm) { return $(elm).html() } ).get();\n\n\t\t\t\t\t// remove non-matching rows\n\t\t\t\t\t$table.find('[data-array-placeholder]').filter( function(i, elm ) {\n\t\t\t\t\t\treturn ( _.indexOf( selected, $(elm).val() ) === -1 );\n\t\t\t\t\t}).closest('tr').remove();\n\n\t\t\t\t\t// add the extra fields for each of the selected values\n\t\t\t\t\t_.each( selected, function( val ) {\n\t\t\t\t\t\t// make sure the row hasn't been made yet\n\t\t\t\t\t\tif ( $table.find('[data-array-placeholder]').filter( function(i, elm ) {\n\t\t\t\t\t\t\treturn $(elm).val() === val;\n\t\t\t\t\t\t}).length ) return false;\n\n\t\t\t\t\t\tvar fields = _.clone(params.fields);\n\n\t\t\t\t\t\tfields.unshift({\n\t\t\t\t\t\t\tname : params.name,\n\t\t\t\t\t\t\tdisabled : true,\n\t\t\t\t\t\t\t'data-array-placeholder' : true,\n\t\t\t\t\t\t\tvalue : val\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$table.append( self.fn.populateFieldRow( fields ) );\n\t\t\t\t\t})\n\t\t\t\t});\n\n\t\t\t\t$container.append( inpt.fn.handle() );\n\n        _.each( params.fields, function(o) {\n\t\t\t\t\tif (o.name != null) {\n\t\t\t\t\t\to['data-name'] = o.name;\n\t\t\t\t\t\thidNames.push(o.name.replace('[]',''));\n\t\t\t\t\t}\n        });\n\n        $container.append($table);\n\n        var hid = {\n          name : params.name + '_extra_columns',\n          type : 'hidden',\n          value : hidNames.join()\n        }\n\n        var oHid = new jInput({ atts : hid } );\n        $container.append( oHid.fn.handle() );\n\n\t\t\t\treturn $container;\n      }, // end fn\n\n      /**\n       * Populate a row with the field inputs\n       * @method function\n       * @param  {[type]} params [description]\n       * @return {[type]}        [description]\n       */\n      populateFieldRow : function(fields) {\n        var $td;\n\n        return $('<tr/>').append(\n          _.map( fields, function( oo ) {\n              var $td = $('<td/>');\n\t\t\t\t\t\t\too['data-pivot'] = _.pluck( 'name', fields );\n\t\t\t\t\t\t\too['data-array-input'] = true;\n              self.fn.processField( oo, $td );\n              return $td;\n          })\n\n        )\n      }, // end fn\n\n\t\t\tgetAtts : function( ) {\n\t\t\t\tvar gblAtts = self.globalAtts;\n\t\t\t\tvar stdAtts = self.allowedAtts[ self.type ];\n\t\t\t\tvar allowedAttributes = _.union(stdAtts,gblAtts);\n\n\t\t\t\t//console.log( 'allowed attributes ' + oAtts.name );\n\t\t\t\t//console.log( allowedAttributes );\n\n\t\t\t\tvar filteredAtts = _.pick( oAtts, function( value, key) {\n\t\t\t\t\tif ( \ttypeof value === 'undefined' ||\n\t\t\t\t\t\t\ttypeof value === 'object' ||\n\t\t\t\t\t\t\t!value ||\n\t\t\t\t\t\t\tvalue == '__OFF__' ||\n\t\t\t\t\t\t\tvalue == '__off__' ||\n\t\t\t\t\t\t\t\t( _.indexOf( allowedAttributes, key ) === -1 && key.indexOf('data-') === -1 )\n\t\t\t\t\t) {\n\t\t\t\t\t\t//console.log(key + ' not allowed for ' + oAtts.name);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//console.log(key + ' allowed for ' + oAtts.name);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t//console.log(filteredAtts);\n\t\t\t\treturn filteredAtts;\n\t\t\t},\n\n\t\t\thide : function() {\n\t\t\t\tself.DOM.$prnt.hide();\n\t\t\t\treturn self.fn;\n\t\t\t},\n\n\t\t\tshow : function() {\n\t\t\t\tself.DOM.$prnt.show();\n\t\t\t\treturn self.fn;\n\t\t\t},\n\n\t\t\tdisable : function() {\n\t\t\t\tif (oAtts.type !== 'hidden') {\n\t\t\t\t\tself.DOM.$inpt.prop('disabled',true);\n\t\t\t\t\tself.DOM.$inpt.addClass('disabled');\n\t\t\t\t}\n\t\t\t\treturn self.fn;\n\t\t\t},\n\n\t\t\tenable : function() {\n\t\t\t\tself.DOM.$inpt.prop('disabled',false);\n\t\t\t\tself.DOM.$inpt.removeClass('disabled');\n\t\t\t\treturn self.fn;\n\t\t\t},\n\n\t\t\tsetTTL : function(ttl) {\n\t\t\t\tself.store.setTTL( ttl );\n\t\t\t}, //end fn\n\n\t\t\t/**\n\t\t\t * Initialize the select options\n\t\t\t * @param  {[type]} refresh [description]\n\t\t\t * @return {[type]}         [description]\n\t\t\t */\n\t\t\tinitSelectOptions : function(refresh) {\n\n\t\t\t\t//console.log('Initializing Select Options');\n\t\t\t\t//console.log(oAtts);\n\n\t\t\t\tself.refreshAfterLoadingOptions = (!!refresh) ? true : false;\n\n\t\t\t\t// local data\n\t\t\t\tif ( oAtts._optionssource != null && oAtts._optionssource.indexOf('|') !== -1 ) {\n\t\t\t\t\tjApp.log(' - local options data - ');\n\t\t\t\t\tself.options.extData = false;\n\t\t\t\t\toAtts._options = oAtts._optionssource.split('|');\n\t\t\t\t\toAtts._labels = ( !!oAtts._labelssource ) ?\n\t\t\t\t\t\toAtts._labelssource.split('|') :\n\t\t\t\t\t\toAtts._optionssource.split('|');\n\t\t\t\t\tself.fn.buildOptions();\n\t\t\t\t}\n\t\t\t\t// external data\n\t\t\t\telse if ( oAtts._optionssource != null && oAtts._optionssource.indexOf('.') !== -1 ) {\n\t\t\t\t\tjApp.log(' - external options data -');\n\t\t\t\t\tself.options.extData = true;\n\t\t\t\t\t//console.log('Getting External Options');\n\t\t\t\t\tself.fn.getExtOptions();\n\t\t\t\t}\n\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Get the external url of the options\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tgetExtUrl : function( type ) {\n\t\t\t\tvar model, lbl, opt, tmp;\n\n\t\t\t\ttype = (type != null) ? type : oAtts.type;\n\n\t\t\t\ttmp = oAtts._labelssource.split('.');\n\t\t\t\tself.model = model = tmp[0]; // db table that contains option/label pairs\n\t\t\t\tlbl = tmp[1]; // db column that contains labels\n\t\t\t\topt = oAtts._optionssource.split('.')[1];\n\t\t\t\t//where = ( !!oAtts._optionsFilter && !!oAtts._optionsFilter.length ) ? oAtts._optionsFilter : '1=1';\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'select' :\n\t\t\t\t\t\treturn \"/selopts/_\" + model + \"_\" + opt + \"_\" + lbl;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault :\n\t\t\t\t\t\treturn \"/tokenopts/_\" + model + \"_\" + opt + \"_\" + lbl;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}, // end fn\n\n\t\t\tgetModel : function() {\n\t\t\t\tvar tmp = oAtts._optionssource.split('.');\n\t\t\t\treturn tmp[0];\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Retrieve external options\n\t\t\t * @param  {[type]}   force    [description]\n\t\t\t * @param  {Function} callback [description]\n\t\t\t * @return {[type]}            [description]\n\t\t\t */\n\t\t\tgetExtOptions : function( force, callback ) {\n\t\t\t\tconsole.log('getting external options');\n\t\t\t\tself.options.extData = true;\n\n\t\t\t\tforce = ( typeof force !== 'undefined' ) ? force : false;\n\n\t\t\t\t// use the copy in storage if available;\n\t\t\t\tif (!force && self.options.cache && !!self.store.get( 'selectOptions_' + self.options.atts.name, false )) {\n\t\t\t\t\t//console.log('using local copy of options');\n\t\t\t\t\treturn self.fn.buildOptions( JSON.parse( self.store.get( 'selectOptions_' + self.options.atts.name ) ) );\n\t\t\t\t}\n\n\t\t\t\tvar url, data;\n\n\t\t\t\turl = self.fn.getExtUrl();\n\t\t\t\tdata = {};\n\n\t\t\t\tself.buildOptionsCallback = callback;\n\n\t\t\t\t//console.log('executing request for external options');\n\t\t\t\t$.getJSON( url, data, self.fn.buildOptions )\n\t\t\t\t .always( function() {\n\t\t\t\t\t\tif (self.options.cache) {\n\t\t\t\t\t\t\tself.store.setTTL( 'selectOptions_' + self.options.atts.name, 1000*60*self.options.ttl ); // expire in 10 mins.\n\t\t\t\t\t\t}\n\t\t\t\t });\n\t\t\t},\n\n\t\t\tbuildOptions : function( data ) {\n\t\t\t\t// load JSON data if applicable\n\t\t\t\tif (data != null) {\n\t\t\t\t\tself.JSON = data;\n\t\t\t\t}\n\n\t\t\t\tif (oAtts.type === 'select') {\n\t\t\t\t\tself.fn.populateSelectOptions()\n\t\t\t\t} else {\n\t\t\t\t\tself.fn.populateTokensOptions();\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tpopulateTokensOptions : function() {\n\t\t\t\tjApp.log('--- Building TokenField Input ---');\n\t\t\t\tjApp.log(self.JSON);\n\n\t\t\t\tself.DOM.$inpt.data( 'tokenFieldSource', _.pluck( self.JSON, 'name' ) );\n\t\t\t}, //end fn\n\n\t\t\tpopulateSelectOptions : function() {\n\n\t\t\t\t// grab the external data if applicable\n\t\t\t\tif (self.options.extData ) {\n\t\t\t\t\toAtts._labels = _.pluck(self.JSON,'label');\n\t\t\t\t\toAtts._options = _.pluck(self.JSON,'option');\n\n\t\t\t\t\tif (self.options.cache) {\n\t\t\t\t\t\tself.store.set( 'selectOptions_' + self.options.atts.name, JSON.stringify(self.JSON) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// hide if empty options\n\t\t\t\tif ( ( !oAtts._options || !oAtts._options.length ) && !!self.options.hideIfNoOptions ) {\n\t\t\t\t\t//console.log('Hiding the element because there are no options ' + oAtts.name)\n\t\t\t\t\treturn self.fn.disable().hide();\n\t\t\t\t} else {\n\t\t\t\t\tself.fn.enable().show();\n\t\t\t\t}\n\n\t\t\t\t// remove all options\n\t\t\t\tself.DOM.$inpt.find('option').remove();\n\n\t\t\t\t// append first option if applicable\n\t\t\t\tif (!!oAtts._firstlabel) {\n\t\t\t\t\tvar firstOption = (!!oAtts._firstoption) ? oAtts._firstoption : '';\n\t\t\t\t\tself.DOM.$inpt.append(\n\t\t\t\t\t\t$('<option/>', { value : firstOption }).html( oAtts._firstlabel )\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// iterate over the label/value pairs and build the options\n\t\t\t\t_.each( oAtts._options, function( v, k ) {\n\t\t\t\t\tself.DOM.$inpt.append(\n\t\t\t\t\t\t// determine if the current value is currently selected\n\t\t\t\t\t\t( _.indexOf( oAtts.value, v ) !== -1 || ( !!self.$().attr('data-value') &&  _.indexOf( self.$().attr('data-value').split('|'), v ) !== -1 )) ?\n\t\t\t\t\t\t\t$('<option/>', { value : v, 'selected' : 'selected' }).html( oAtts._labels[k] ) :\n\t\t\t\t\t\t\t$('<option/>', { value : (!!v) ? v : '' }).html( oAtts._labels[k] )\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\t// remove the unneeded data-value attribute\n\t\t\t\tself.$().removeAttr('data-value');\n\n\t\t\t\t// call the callback if applicable\n\t\t\t\tif (typeof self.buildOptionsCallback === 'function') {\n\t\t\t\t\tself.buildOptionsCallback();\n\t\t\t\t\tdelete self.buildOptionsCallback;\n\t\t\t\t}\n\n\t\t\t}, // end fn\n\n\t\t\tattr : function( key, value ) {\n\t\t\t\tif (typeof key === 'object') {\n\t\t\t\t\t//console.log( 'Setting the attrs' );\n\t\t\t\t\t//console.log(key);\n\t\t\t\t\t_.each( key, function( v, k ) {\n\t\t\t\t\t\toAtts[k] = v;\n\t\t\t\t\t});\n\t\t\t\t\t//console.log(oAtts);\n\t\t\t\t\tself.fn.refresh();\n\t\t\t\t} else if (!!value) {\n\t\t\t\t\tself.options.atts[key] = value;\n\t\t\t\t\tself.fn.refresh();\n\t\t\t\t} else {\n\t\t\t\t\treturn oAtts[key];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tval : function( value ) {\n\n\t\t\t\tif (!!value) {\n\t\t\t\t\tif (typeof value !== 'object') {\n\t\t\t\t\t\tif (oAtts.name == '_labelssource' || oAtts.name == '_optionssource') {\n\t\t\t\t\t\t\tvalue = value.replace(/\\,/gi,'|');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.$().attr('data-value',value);\n\t\t\t\t\t\treturn self.fn.attr('value',[value]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.$().attr('data-value',value.join('|'));\n\t\t\t\t\t\treturn self.fn.attr('value',value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tswitch( self.type ) {\n\t\t\t\t\tcase 'radio' :\n\t\t\t\t\tcase 'checkbox' :\n\t\t\t\t\t\treturn $.map( self.DOM.$prnt.find(':checked'), function(elm, i) {\n\t\t\t\t\t\t\treturn $(elm).val();\n\t\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault :\n\t\t\t\t\t\treturn self.DOM.$inpt.val();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\trefresh : function() {\n\t\t\t\t_.each( self.fn.getAtts(), function(v, k) {\n\t\t\t\t\tif ( k !== 'type' ) { // cannot refresh type\n\t\t\t\t\t\tself.DOM.$inpt.attr(k,v);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.DOM.$inpt.val( oAtts.value );\n\t\t\t},\n\n\t\t\trender : function() {\n\t\t\t\treturn self.DOM.$prnt.prop('outerHTML');\n\t\t\t},\n\n\t\t\thandle : function() {\n\t\t\t\treturn self.DOM.$prnt;\n\t\t\t},\n\n\t\t\tmultiselectDestroy : function() {\n\t\t\t\tself.$().multiselect('destroy');\n\t\t\t}, // end fn\n\n\t\t\tmultiselectRefresh : function() {\n\t\t\t\tif ( !self.options.extData ) { return false; }\n\n\t\t\t\t$(this).prop('disabled',true).find('i').addClass('fa-spin');\n\n\t\t\t\tself.$().attr('data-tmpVal', self.$().val() || '' )\n\t\t\t\t\t\t.val('')\n\t\t\t\t\t\t.multiselect('refresh')\n\t\t\t\t\t\t//.multiselect('disable');\n\n\t\t\t\tself.fn.getExtOptions(true, function() {\n\t\t\t\t\tjUtility.$currentForm()\n\t\t\t\t\t\t .find('.btn.btn-refresh').prop('disabled',false)\n\t\t\t\t\t\t\t .find('i').removeClass('fa-spin').end()\n\t\t\t\t\t\t .end()\n\t\t\t\t\t\t.find('[data-tmpVal]').each( function(i,elm) {\n\t\t\t\t\t\t\t$(elm).val( $(elm).attr('data-tmpVal') )\n\t\t\t\t\t\t\t\t.multiselect('enable')\n\t\t\t\t\t\t\t\t.multiselect('refresh')\n\t\t\t\t\t\t\t\t.multiselect('rebuild')\n\t\t\t\t\t\t\t\t.removeAttr('data-tmpVal')\n\n\t\t\t\t\t\t\t\t//.data('jInput').fn.multiselect();\n\t\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Add button and refresh button for multiselect elements\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tmultiselectExtraButtons : function() {\n\t\t\t\tif ( !self.options.extData ) return self;\n\n\t\t\t\t// make an add button, if the model is not the same as the current form\n\t\t\t\tif ( self.fn.getModel() !== jApp.opts().model ) {\n\n\t\t\t\t\tjApp.log('----------------------INPUT-------------------');\n\t\t\t\t\tjApp.log(self);\n\n\t\t\t\t\tvar model = self.fn.getModel(), frmDef = {\n\t\t\t\t\t\ttable : jApp.model2table( model ),\n\t\t\t\t\t\tmodel : model,\n\t\t\t\t\t\tpkey : 'id',\n\t\t\t\t\t\ttableFriendly : model,\n\t\t\t\t\t\tatts : { method : 'POST'}\n\t\t\t\t\t}, key = 'new' + model + 'Frm';\n\n\t\t\t\t\tif ( !jUtility.isFormExists( key ) ) {\n\t\t\t\t\t\tconsole.log('building the form: ' + key);\n\t\t\t\t\t\tjUtility.DOM.buildForm( frmDef, key, 'newOtherFrm', model );\n\t\t\t\t\t\tjUtility.processFormBindings();\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $btnAdd = $('<button/>', {\n\t\t\t\t\t\ttype : 'button',\n\t\t\t\t\t\tclass : 'btn btn-primary btn-add',\n\t\t\t\t\t\ttitle : 'Add ' + model\n\t\t\t\t\t}).html('<i class=\"fa fa-fw fa-plus\"></i> ' + model + ' <i class=\"fa fa-fw fa-external-link\"></i>')\n\t\t\t\t\t\t.off('click.custom').on('click.custom', function() {\n\n\t\t\t\t\t\t\tjUtility.actionHelper( 'new' + model + 'Frm' );\n\n\t\t\t\t\t\t});\n\n\t\t\t\t\tself.DOM.$prnt.find('.btn-group .btn-add').remove().end()\n\t\t\t\t\t.find('.btn-group').append( $btnAdd );\n\t\t\t\t}\n\n\t\t\t\tvar $btnRefresh = $('<button/>', {\n\t\t\t\t\ttype : 'button',\n\t\t\t\t\tclass : 'btn btn-primary btn-refresh',\n\t\t\t\t\ttitle : 'Refresh Options'\n\t\t\t\t}).html('<i class=\"fa fa-fw fa-refresh\"></i>')\n\t\t\t\t\t.off('click.custom').on('click.custom', self.fn.multiselectRefresh);\n\n\t\t\t\tself.DOM.$prnt.find('.btn-group .btn-refresh').remove().end()\n\t\t\t\t\t\t.find('.btn-group').prepend( $btnRefresh );\n\n\t\t\t\treturn self;\n\t\t\t}, // end fn\n\n\t\t\t/**\n\t\t\t * Multiselect handler\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\tmultiselect : function() {\n\t\t\t\tself.$().multiselect( self.options.bsmsDefaults ).multiselect('refresh');\n\t\t\t\tself.fn.multiselectExtraButtons();\n\t\t\t\treturn self;\n\t\t\t}\n\t\t};\n\n\t\t// initialize\n\t\tthis.fn._init();\n\n\t}; // end jInput declaration\n\n\twindow.jInput = jInput; // add to global scope\n\n})( window, $);\n","/**\n *  jGrid.class.js - Custom Data Grid JS class\n *\n *  Defines the properties and methods of the\n *  custom grid class. This version asynchronously\n *  keeps the grid updated by receiving JSON data\n *  from the server\n *\n *  Jeremy Bloomstrom | jeremy@in.genio.us\n *  Released under the MIT license\n *\n *  Prereqs: \tjQuery, underscore.js,\n *  \t\t\t\t\tjInput, jForm, $.validator\n *  \t\t\t  \tjApp, jUtility\n */\n\n;(function(window, jQuery, $, jInput, jForm, jApp, jUtility) {\n\n\t'use strict';\n\n\t/**\n\t * jGrid instance constructor\n\t * @method function\n\t * @param  {object} options\n\t * @return /jGrid         \tjGrid instance\n\t */\n\tvar jGrid = function(options) {\n\n\t\tvar self = jApp.activeGrid = this;\n\n\t\t/**\n\t\t * Alias handle to the grid\n\t\t * @method function\n\t\t * @return {[type]} [description]\n\t\t */\n\t\tthis.$ = function() {\n\t\t\treturn self.DOM.$grid;\n\t\t}\n\n\t\t/**\n\t\t * Declare Options vars\n\t\t * @type {Object}\n\t\t */\n \t\tthis.options = {\n \t\t\tformDefs : {},\n \t\t\tbind : {},\n\t\t\tevents : {},\n \t\t\tfn : {},\n \t\t\ttoggles : {},\n \t\t\tbsmsDefaults : {},\n \t\t\tgridHeader : {},\n \t\t\ttableBtns : {},\n \t\t\trowBtns : {},\n \t\t\twithSelectedBtns : {},\n\t\t\truntimeParams : options\n \t\t}; // end options\n\n\t\t/**\n\t\t * HTML Templates\n\t\t * @type {Object}\n\t\t */\n\t\tthis.html = {}\n\n\t\t/**\n\t\t * Container for events once they have been delegated to avoid collisions\n\t\t * @type {Array}\n\t\t */\n\t\tthis.delegatedEvents = [];\n\n\t\t/**\n\t\t * Class Methods\n\t\t * @type {Object}\n\t\t */\n\t\tthis.fn = {\n\n\t\t\t/**\n\t\t\t * init the instance\n\t\t\t * @method function\n\t\t\t * @return {[type]} [description]\n\t\t\t */\n\t\t\t_init : function() {\n\n\t\t\t\tjApp.log('1. Setting Options');\n\t\t\t\tjUtility.setOptions( $.extend(true, {}, jUtility.getDefaultOptions(), { tableBtns : { new : { label : 'New ' + options.model }} }, options) );\n\n\t\t\t\tjApp.log('2. Setting up html templates');\n\t\t\t\tjUtility.setupHtmlTemplates();\n\n\t\t\t\tjApp.log('3. Setting up initial parameters');\n\t\t\t\tjUtility.setInitParams();\n\n\t\t\t\tjApp.log('0. Get User Permissions');\n\t\t\t\tjUtility.getPermissions( options.model );\n\n\t\t\t\tjApp.log('4. Setting Ajax Defaults');\n\t\t\t\tjUtility.setAjaxDefaults();\n\n\t\t\t\tjApp.log('5. Initializing Template')\n\t\t\t\tjUtility.initializeTemplate();\n\n\t\t\t\tjApp.log('6. Getting grid data')\n\t\t\t\tjUtility.getGridData();\n\n\t\t\t\tjApp.log('7. Setting up intervals')\n\t\t\t\tjUtility.setupIntervals();\n\n\t\t\t\tjApp.log('8. Building Menus')\n\t\t\t\tjUtility.buildMenus();\n\n\t\t\t\tjApp.log('9. Building Forms')\n\t\t\t\tjUtility.buildForms();\n\n\t\t\t\tjApp.log('10. Setting up bindings')\n\t\t\t\tjUtility.bind();\n\n\t\t\t\tjApp.log('11. Setting up link tables')\n\t\t\t\tjUtility.linkTables();\n\n\n\n\t\t\t\t// toggle the mine button if needed\n\t\t\t\t// if ( jUtility.isToggleMine() ) {\n\t\t\t\t// \tself.fn.toggleMine();\n\t\t\t\t// }\n\n\t\t\t\tjUtility.getCheckedOutRecords();\n\t\t\t\tjUtility.initScrollbar();\n\t\t\t}, // end fn\n\t\t}; // end fn defs\n\n\t\t// add any functions to this.fn\n\t\tthis.fn = $.extend(true,  this.fn, options.fn );\n\n\t\t// initialize\n\t\tthis.fn._init();\n\n\t}; // end jGrid\n\n\twindow.jGrid = jGrid;\n\n\n})(window, jQuery, $, jInput, jForm, jApp, jUtility);\n"],"sourceRoot":"/source/"}